!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APIENTRY	/usr/include/SDL2/SDL_opengl.h	120;"	d
APIENTRY	/usr/include/SDL2/SDL_opengles.h	37;"	d
APIENTRY	/usr/include/SDL2/SDL_opengles2.h	2789;"	d
APIENTRYP	/usr/include/SDL2/SDL_opengl.h	123;"	d
ASSERT_FAIL	/usr/include/SDL2/SDL_test_assert.h	48;"	d
ASSERT_PASS	/usr/include/SDL2/SDL_test_assert.h	53;"	d
AUDIO_F32	/usr/include/SDL2/SDL_audio.h	114;"	d
AUDIO_F32LSB	/usr/include/SDL2/SDL_audio.h	112;"	d
AUDIO_F32MSB	/usr/include/SDL2/SDL_audio.h	113;"	d
AUDIO_F32SYS	/usr/include/SDL2/SDL_audio.h	125;"	d
AUDIO_F32SYS	/usr/include/SDL2/SDL_audio.h	130;"	d
AUDIO_S16	/usr/include/SDL2/SDL_audio.h	96;"	d
AUDIO_S16LSB	/usr/include/SDL2/SDL_audio.h	92;"	d
AUDIO_S16MSB	/usr/include/SDL2/SDL_audio.h	94;"	d
AUDIO_S16SYS	/usr/include/SDL2/SDL_audio.h	123;"	d
AUDIO_S16SYS	/usr/include/SDL2/SDL_audio.h	128;"	d
AUDIO_S32	/usr/include/SDL2/SDL_audio.h	105;"	d
AUDIO_S32LSB	/usr/include/SDL2/SDL_audio.h	103;"	d
AUDIO_S32MSB	/usr/include/SDL2/SDL_audio.h	104;"	d
AUDIO_S32SYS	/usr/include/SDL2/SDL_audio.h	124;"	d
AUDIO_S32SYS	/usr/include/SDL2/SDL_audio.h	129;"	d
AUDIO_S8	/usr/include/SDL2/SDL_audio.h	90;"	d
AUDIO_U16	/usr/include/SDL2/SDL_audio.h	95;"	d
AUDIO_U16LSB	/usr/include/SDL2/SDL_audio.h	91;"	d
AUDIO_U16MSB	/usr/include/SDL2/SDL_audio.h	93;"	d
AUDIO_U16SYS	/usr/include/SDL2/SDL_audio.h	122;"	d
AUDIO_U16SYS	/usr/include/SDL2/SDL_audio.h	127;"	d
AUDIO_U8	/usr/include/SDL2/SDL_audio.h	89;"	d
Aloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Aloss;$/;"	m	struct:SDL_PixelFormat	access:public
Amask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Amask;$/;"	m	struct:SDL_PixelFormat	access:public
Ashift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Ashift;$/;"	m	struct:SDL_PixelFormat	access:public
BitsPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BitsPerPixel;$/;"	m	struct:SDL_PixelFormat	access:public
Bloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bloss;$/;"	m	struct:SDL_PixelFormat	access:public
Bmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Bmask;$/;"	m	struct:SDL_PixelFormat	access:public
Bshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bshift;$/;"	m	struct:SDL_PixelFormat	access:public
BytesPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BytesPerPixel;$/;"	m	struct:SDL_PixelFormat	access:public
CRC32_POLY	/usr/include/SDL2/SDL_test_crc32.h	58;"	d
CRC32_POLY	/usr/include/SDL2/SDL_test_crc32.h	60;"	d
C_LINKAGE	/usr/include/SDL2/SDL_main.h	62;"	d
C_LINKAGE	/usr/include/SDL2/SDL_main.h	64;"	d
CrcUint32	/usr/include/SDL2/SDL_test_crc32.h	51;"	d
CrcUint8	/usr/include/SDL2/SDL_test_crc32.h	54;"	d
Cursor	/usr/include/SDL2/SDL_syswm.h	63;"	d
Cursor	/usr/include/SDL2/SDL_syswm.h	71;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	49;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	51;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	54;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	58;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	60;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	62;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	78;"	d
DECLSPEC	/usr/include/SDL2/begin_code.h	79;"	d
DEFAULT_WINDOW_HEIGHT	/usr/include/SDL2/SDL_test_common.h	39;"	d
DEFAULT_WINDOW_HEIGHT	/usr/include/SDL2/SDL_test_common.h	42;"	d
DEFAULT_WINDOW_WIDTH	/usr/include/SDL2/SDL_test_common.h	38;"	d
DEFAULT_WINDOW_WIDTH	/usr/include/SDL2/SDL_test_common.h	41;"	d
DUMMY_ENUM_VALUE	/usr/include/SDL2/SDL_stdinc.h	/^    DUMMY_ENUM_VALUE$/;"	e	enum:__anon74
FONT_CHARACTER_SIZE	/usr/include/SDL2/SDL_test_font.h	41;"	d
GCCSO_SHADER_BINARY_FJ	/usr/include/SDL2/SDL_opengles2.h	1617;"	d
GLAPI	/usr/include/SDL2/SDL_opengl.h	126;"	d
GLDEBUGPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCAMD	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCARB	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLEXT_64_TYPES_DEFINED	/usr/include/SDL2/SDL_opengl.h	5151;"	d
GL_1PASS_EXT	/usr/include/SDL2/SDL_opengl.h	3381;"	d
GL_1PASS_SGIS	/usr/include/SDL2/SDL_opengl.h	2463;"	d
GL_2PASS_0_EXT	/usr/include/SDL2/SDL_opengl.h	3382;"	d
GL_2PASS_0_SGIS	/usr/include/SDL2/SDL_opengl.h	2464;"	d
GL_2PASS_1_EXT	/usr/include/SDL2/SDL_opengl.h	3383;"	d
GL_2PASS_1_SGIS	/usr/include/SDL2/SDL_opengl.h	2465;"	d
GL_2X_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3804;"	d
GL_3DC_XY_AMD	/usr/include/SDL2/SDL_opengles2.h	1243;"	d
GL_3DC_X_AMD	/usr/include/SDL2/SDL_opengles2.h	1242;"	d
GL_3DFX_multisample	/usr/include/SDL2/SDL_opengl.h	8697;"	d
GL_3DFX_tbuffer	/usr/include/SDL2/SDL_opengl.h	8701;"	d
GL_3DFX_texture_compression_FXT1	/usr/include/SDL2/SDL_opengl.h	8693;"	d
GL_422_AVERAGE_EXT	/usr/include/SDL2/SDL_opengl.h	3146;"	d
GL_422_EXT	/usr/include/SDL2/SDL_opengl.h	3144;"	d
GL_422_REV_AVERAGE_EXT	/usr/include/SDL2/SDL_opengl.h	3147;"	d
GL_422_REV_EXT	/usr/include/SDL2/SDL_opengl.h	3145;"	d
GL_4PASS_0_EXT	/usr/include/SDL2/SDL_opengl.h	3384;"	d
GL_4PASS_0_SGIS	/usr/include/SDL2/SDL_opengl.h	2466;"	d
GL_4PASS_1_EXT	/usr/include/SDL2/SDL_opengl.h	3385;"	d
GL_4PASS_1_SGIS	/usr/include/SDL2/SDL_opengl.h	2467;"	d
GL_4PASS_2_EXT	/usr/include/SDL2/SDL_opengl.h	3386;"	d
GL_4PASS_2_SGIS	/usr/include/SDL2/SDL_opengl.h	2468;"	d
GL_4PASS_3_EXT	/usr/include/SDL2/SDL_opengl.h	3387;"	d
GL_4PASS_3_SGIS	/usr/include/SDL2/SDL_opengl.h	2469;"	d
GL_4X_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3805;"	d
GL_8X_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3806;"	d
GL_ABGR_EXT	/usr/include/SDL2/SDL_opengl.h	2221;"	d
GL_ACTIVE_ATTRIBUTES	/usr/include/SDL2/SDL_opengl.h	532;"	d
GL_ACTIVE_ATTRIBUTES	/usr/include/SDL2/SDL_opengles2.h	629;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/SDL2/SDL_opengl.h	533;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	/usr/include/SDL2/SDL_opengles2.h	630;"	d
GL_ACTIVE_PROGRAM	/usr/include/SDL2/SDL_opengl.h	2137;"	d
GL_ACTIVE_PROGRAM_EXT	/usr/include/SDL2/SDL_opengl.h	4873;"	d
GL_ACTIVE_PROGRAM_EXT	/usr/include/SDL2/SDL_opengles2.h	1510;"	d
GL_ACTIVE_STENCIL_FACE_EXT	/usr/include/SDL2/SDL_opengl.h	4029;"	d
GL_ACTIVE_SUBROUTINES	/usr/include/SDL2/SDL_opengl.h	2034;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	/usr/include/SDL2/SDL_opengl.h	2037;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	/usr/include/SDL2/SDL_opengl.h	2035;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	/usr/include/SDL2/SDL_opengl.h	2036;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	/usr/include/SDL2/SDL_opengl.h	2038;"	d
GL_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengl.h	292;"	d
GL_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengles2.h	725;"	d
GL_ACTIVE_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl.h	1160;"	d
GL_ACTIVE_UNIFORMS	/usr/include/SDL2/SDL_opengl.h	529;"	d
GL_ACTIVE_UNIFORMS	/usr/include/SDL2/SDL_opengles2.h	627;"	d
GL_ACTIVE_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	1821;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	/usr/include/SDL2/SDL_opengl.h	1820;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/SDL2/SDL_opengl.h	530;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	/usr/include/SDL2/SDL_opengles2.h	628;"	d
GL_ACTIVE_VARYINGS_NV	/usr/include/SDL2/SDL_opengl.h	4550;"	d
GL_ACTIVE_VARYING_MAX_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4551;"	d
GL_ACTIVE_VERTEX_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1229;"	d
GL_ADD_ATI	/usr/include/SDL2/SDL_opengl.h	3776;"	d
GL_ADD_SIGNED	/usr/include/SDL2/SDL_opengl.h	351;"	d
GL_ADD_SIGNED_ARB	/usr/include/SDL2/SDL_opengl.h	1302;"	d
GL_ADD_SIGNED_EXT	/usr/include/SDL2/SDL_opengl.h	3051;"	d
GL_ALIASED_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl.h	167;"	d
GL_ALIASED_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengles2.h	524;"	d
GL_ALIASED_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl.h	175;"	d
GL_ALIASED_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengles2.h	523;"	d
GL_ALLOW_DRAW_FRG_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2766;"	d
GL_ALLOW_DRAW_MEM_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2767;"	d
GL_ALLOW_DRAW_OBJ_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2764;"	d
GL_ALLOW_DRAW_WIN_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2765;"	d
GL_ALL_BARRIER_BITS_EXT	/usr/include/SDL2/SDL_opengl.h	4981;"	d
GL_ALL_COMPLETED_NV	/usr/include/SDL2/SDL_opengl.h	3439;"	d
GL_ALL_COMPLETED_NV	/usr/include/SDL2/SDL_opengles2.h	1723;"	d
GL_ALL_SHADER_BITS	/usr/include/SDL2/SDL_opengl.h	2135;"	d
GL_ALL_SHADER_BITS_EXT	/usr/include/SDL2/SDL_opengles2.h	1508;"	d
GL_ALPHA	/usr/include/SDL2/SDL_opengles2.h	600;"	d
GL_ALPHA12_EXT	/usr/include/SDL2/SDL_opengl.h	2241;"	d
GL_ALPHA16F_ARB	/usr/include/SDL2/SDL_opengl.h	1609;"	d
GL_ALPHA16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1576;"	d
GL_ALPHA16I_EXT	/usr/include/SDL2/SDL_opengl.h	4609;"	d
GL_ALPHA16UI_EXT	/usr/include/SDL2/SDL_opengl.h	4591;"	d
GL_ALPHA16_EXT	/usr/include/SDL2/SDL_opengl.h	2242;"	d
GL_ALPHA16_SNORM	/usr/include/SDL2/SDL_opengl.h	4752;"	d
GL_ALPHA32F_ARB	/usr/include/SDL2/SDL_opengl.h	1603;"	d
GL_ALPHA32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1571;"	d
GL_ALPHA32I_EXT	/usr/include/SDL2/SDL_opengl.h	4603;"	d
GL_ALPHA32UI_EXT	/usr/include/SDL2/SDL_opengl.h	4585;"	d
GL_ALPHA4_EXT	/usr/include/SDL2/SDL_opengl.h	2239;"	d
GL_ALPHA8I_EXT	/usr/include/SDL2/SDL_opengl.h	4615;"	d
GL_ALPHA8UI_EXT	/usr/include/SDL2/SDL_opengl.h	4597;"	d
GL_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl.h	2240;"	d
GL_ALPHA8_EXT	/usr/include/SDL2/SDL_opengles2.h	1566;"	d
GL_ALPHA8_OES	/usr/include/SDL2/SDL_opengles2.h	1074;"	d
GL_ALPHA8_SNORM	/usr/include/SDL2/SDL_opengl.h	4748;"	d
GL_ALPHA_BITS	/usr/include/SDL2/SDL_opengles2.h	559;"	d
GL_ALPHA_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl.h	4793;"	d
GL_ALPHA_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl.h	4118;"	d
GL_ALPHA_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl.h	4787;"	d
GL_ALPHA_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl.h	4112;"	d
GL_ALPHA_INTEGER	/usr/include/SDL2/SDL_opengl.h	813;"	d
GL_ALPHA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4622;"	d
GL_ALPHA_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3131;"	d
GL_ALPHA_MAX_SGIX	/usr/include/SDL2/SDL_opengl.h	2918;"	d
GL_ALPHA_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3127;"	d
GL_ALPHA_MIN_SGIX	/usr/include/SDL2/SDL_opengl.h	2917;"	d
GL_ALPHA_SNORM	/usr/include/SDL2/SDL_opengl.h	4744;"	d
GL_ALPHA_TEST_FUNC_QCOM	/usr/include/SDL2/SDL_opengles2.h	1758;"	d
GL_ALPHA_TEST_QCOM	/usr/include/SDL2/SDL_opengles2.h	1757;"	d
GL_ALPHA_TEST_REF_QCOM	/usr/include/SDL2/SDL_opengles2.h	1759;"	d
GL_ALREADY_SIGNALED	/usr/include/SDL2/SDL_opengl.h	1884;"	d
GL_ALREADY_SIGNALED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1370;"	d
GL_ALWAYS	/usr/include/SDL2/SDL_opengles2.h	642;"	d
GL_ALWAYS_FAST_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2762;"	d
GL_ALWAYS_SOFT_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2763;"	d
GL_AMD_compressed_3DC_texture	/usr/include/SDL2/SDL_opengles2.h	2081;"	d
GL_AMD_compressed_ATC_texture	/usr/include/SDL2/SDL_opengles2.h	2086;"	d
GL_AMD_conservative_depth	/usr/include/SDL2/SDL_opengl.h	10879;"	d
GL_AMD_debug_output	/usr/include/SDL2/SDL_opengl.h	11071;"	d
GL_AMD_draw_buffers_blend	/usr/include/SDL2/SDL_opengl.h	10673;"	d
GL_AMD_name_gen_delete	/usr/include/SDL2/SDL_opengl.h	11059;"	d
GL_AMD_performance_monitor	/usr/include/SDL2/SDL_opengl.h	10619;"	d
GL_AMD_performance_monitor	/usr/include/SDL2/SDL_opengles2.h	2091;"	d
GL_AMD_program_binary_Z400	/usr/include/SDL2/SDL_opengles2.h	2120;"	d
GL_AMD_seamless_cubemap_per_texture	/usr/include/SDL2/SDL_opengl.h	10875;"	d
GL_AMD_shader_stencil_export	/usr/include/SDL2/SDL_opengl.h	10871;"	d
GL_AMD_texture_texture4	/usr/include/SDL2/SDL_opengl.h	10647;"	d
GL_AMD_transform_feedback3_lines_triangles	/usr/include/SDL2/SDL_opengl.h	11111;"	d
GL_AMD_vertex_shader_tesselator	/usr/include/SDL2/SDL_opengl.h	10651;"	d
GL_ANGLE_framebuffer_blit	/usr/include/SDL2/SDL_opengles2.h	2129;"	d
GL_ANGLE_framebuffer_multisample	/usr/include/SDL2/SDL_opengles2.h	2138;"	d
GL_ANGLE_pack_reverse_row_order	/usr/include/SDL2/SDL_opengles2.h	2158;"	d
GL_ANGLE_texture_compression_dxt3	/usr/include/SDL2/SDL_opengles2.h	2163;"	d
GL_ANGLE_texture_compression_dxt5	/usr/include/SDL2/SDL_opengles2.h	2168;"	d
GL_ANGLE_texture_usage	/usr/include/SDL2/SDL_opengles2.h	2173;"	d
GL_ANGLE_translated_shader_source	/usr/include/SDL2/SDL_opengles2.h	2177;"	d
GL_ANY_SAMPLES_PASSED	/usr/include/SDL2/SDL_opengl.h	1971;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE_EXT	/usr/include/SDL2/SDL_opengles2.h	1479;"	d
GL_ANY_SAMPLES_PASSED_EXT	/usr/include/SDL2/SDL_opengles2.h	1478;"	d
GL_APICALL	/usr/include/SDL2/SDL_opengles2.h	346;"	d
GL_APIENTRY	/usr/include/SDL2/SDL_opengles2.h	350;"	d
GL_APIENTRYP	/usr/include/SDL2/SDL_opengles2.h	992;"	d
GL_APPLE_aux_depth_stencil	/usr/include/SDL2/SDL_opengl.h	10721;"	d
GL_APPLE_client_storage	/usr/include/SDL2/SDL_opengl.h	9355;"	d
GL_APPLE_copy_texture_levels	/usr/include/SDL2/SDL_opengles2.h	2190;"	d
GL_APPLE_element_array	/usr/include/SDL2/SDL_opengl.h	9359;"	d
GL_APPLE_fence	/usr/include/SDL2/SDL_opengl.h	9375;"	d
GL_APPLE_float_pixels	/usr/include/SDL2/SDL_opengl.h	10697;"	d
GL_APPLE_flush_buffer_range	/usr/include/SDL2/SDL_opengl.h	9791;"	d
GL_APPLE_framebuffer_multisample	/usr/include/SDL2/SDL_opengles2.h	2199;"	d
GL_APPLE_object_purgeable	/usr/include/SDL2/SDL_opengl.h	10725;"	d
GL_APPLE_rgb_422	/usr/include/SDL2/SDL_opengl.h	10741;"	d
GL_APPLE_rgb_422	/usr/include/SDL2/SDL_opengles2.h	2210;"	d
GL_APPLE_row_bytes	/usr/include/SDL2/SDL_opengl.h	10737;"	d
GL_APPLE_specular_vector	/usr/include/SDL2/SDL_opengl.h	8305;"	d
GL_APPLE_sync	/usr/include/SDL2/SDL_opengles2.h	2215;"	d
GL_APPLE_texture_format_BGRA8888	/usr/include/SDL2/SDL_opengles2.h	2236;"	d
GL_APPLE_texture_max_level	/usr/include/SDL2/SDL_opengles2.h	2241;"	d
GL_APPLE_texture_range	/usr/include/SDL2/SDL_opengl.h	10687;"	d
GL_APPLE_transform_hint	/usr/include/SDL2/SDL_opengl.h	8309;"	d
GL_APPLE_vertex_array_object	/usr/include/SDL2/SDL_opengl.h	9397;"	d
GL_APPLE_vertex_array_range	/usr/include/SDL2/SDL_opengl.h	9411;"	d
GL_APPLE_vertex_program_evaluators	/usr/include/SDL2/SDL_opengl.h	10701;"	d
GL_APPLE_ycbcr_422	/usr/include/SDL2/SDL_opengl.h	9423;"	d
GL_ARB_ES2_compatibility	/usr/include/SDL2/SDL_opengl.h	7135;"	d
GL_ARB_blend_func_extended	/usr/include/SDL2/SDL_opengl.h	6855;"	d
GL_ARB_cl_event	/usr/include/SDL2/SDL_opengl.h	7341;"	d
GL_ARB_color_buffer_float	/usr/include/SDL2/SDL_opengl.h	6541;"	d
GL_ARB_compatibility	/usr/include/SDL2/SDL_opengl.h	6711;"	d
GL_ARB_copy_buffer	/usr/include/SDL2/SDL_opengl.h	6715;"	d
GL_ARB_debug_output	/usr/include/SDL2/SDL_opengl.h	7349;"	d
GL_ARB_depth_buffer_float	/usr/include/SDL2/SDL_opengl.h	6561;"	d
GL_ARB_depth_clamp	/usr/include/SDL2/SDL_opengl.h	6727;"	d
GL_ARB_depth_texture	/usr/include/SDL2/SDL_opengl.h	6178;"	d
GL_ARB_draw_buffers	/usr/include/SDL2/SDL_opengl.h	6529;"	d
GL_ARB_draw_buffers_blend	/usr/include/SDL2/SDL_opengl.h	6799;"	d
GL_ARB_draw_elements_base_vertex	/usr/include/SDL2/SDL_opengl.h	6731;"	d
GL_ARB_draw_indirect	/usr/include/SDL2/SDL_opengl.h	7009;"	d
GL_ARB_draw_instanced	/usr/include/SDL2/SDL_opengl.h	6565;"	d
GL_ARB_explicit_attrib_location	/usr/include/SDL2/SDL_opengl.h	6865;"	d
GL_ARB_fragment_coord_conventions	/usr/include/SDL2/SDL_opengl.h	6745;"	d
GL_ARB_fragment_program	/usr/include/SDL2/SDL_opengl.h	6358;"	d
GL_ARB_fragment_program_shadow	/usr/include/SDL2/SDL_opengl.h	6525;"	d
GL_ARB_fragment_shader	/usr/include/SDL2/SDL_opengl.h	6509;"	d
GL_ARB_framebuffer_object	/usr/include/SDL2/SDL_opengl.h	6575;"	d
GL_ARB_framebuffer_sRGB	/usr/include/SDL2/SDL_opengl.h	6621;"	d
GL_ARB_geometry_shader4	/usr/include/SDL2/SDL_opengl.h	6625;"	d
GL_ARB_get_program_binary	/usr/include/SDL2/SDL_opengl.h	7151;"	d
GL_ARB_gpu_shader5	/usr/include/SDL2/SDL_opengl.h	7019;"	d
GL_ARB_gpu_shader_fp64	/usr/include/SDL2/SDL_opengl.h	7023;"	d
GL_ARB_half_float_pixel	/usr/include/SDL2/SDL_opengl.h	6549;"	d
GL_ARB_half_float_vertex	/usr/include/SDL2/SDL_opengl.h	6639;"	d
GL_ARB_instanced_arrays	/usr/include/SDL2/SDL_opengl.h	6643;"	d
GL_ARB_map_buffer_range	/usr/include/SDL2/SDL_opengl.h	6651;"	d
GL_ARB_matrix_palette	/usr/include/SDL2/SDL_opengl.h	6146;"	d
GL_ARB_multisample	/usr/include/SDL2/SDL_opengl.h	6070;"	d
GL_ARB_multitexture	/usr/include/SDL2/SDL_opengl.h	5982;"	d
GL_ARB_occlusion_query	/usr/include/SDL2/SDL_opengl.h	6391;"	d
GL_ARB_occlusion_query2	/usr/include/SDL2/SDL_opengl.h	6869;"	d
GL_ARB_pixel_buffer_object	/usr/include/SDL2/SDL_opengl.h	6557;"	d
GL_ARB_point_parameters	/usr/include/SDL2/SDL_opengl.h	6110;"	d
GL_ARB_point_sprite	/usr/include/SDL2/SDL_opengl.h	6521;"	d
GL_ARB_provoking_vertex	/usr/include/SDL2/SDL_opengl.h	6749;"	d
GL_ARB_robustness	/usr/include/SDL2/SDL_opengl.h	7363;"	d
GL_ARB_sample_shading	/usr/include/SDL2/SDL_opengl.h	6813;"	d
GL_ARB_sampler_objects	/usr/include/SDL2/SDL_opengl.h	6873;"	d
GL_ARB_seamless_cube_map	/usr/include/SDL2/SDL_opengl.h	6757;"	d
GL_ARB_separate_shader_objects	/usr/include/SDL2/SDL_opengl.h	7163;"	d
GL_ARB_shader_objects	/usr/include/SDL2/SDL_opengl.h	6413;"	d
GL_ARB_shader_stencil_export	/usr/include/SDL2/SDL_opengl.h	7409;"	d
GL_ARB_shader_subroutine	/usr/include/SDL2/SDL_opengl.h	7065;"	d
GL_ARB_shader_texture_lod	/usr/include/SDL2/SDL_opengl.h	6723;"	d
GL_ARB_shading_language_100	/usr/include/SDL2/SDL_opengl.h	6513;"	d
GL_ARB_shading_language_include	/usr/include/SDL2/SDL_opengl.h	6833;"	d
GL_ARB_shadow	/usr/include/SDL2/SDL_opengl.h	6182;"	d
GL_ARB_shadow_ambient	/usr/include/SDL2/SDL_opengl.h	6186;"	d
GL_ARB_sync	/usr/include/SDL2/SDL_opengl.h	6761;"	d
GL_ARB_tessellation_shader	/usr/include/SDL2/SDL_opengl.h	7087;"	d
GL_ARB_texture_border_clamp	/usr/include/SDL2/SDL_opengl.h	6106;"	d
GL_ARB_texture_buffer_object	/usr/include/SDL2/SDL_opengl.h	6661;"	d
GL_ARB_texture_buffer_object_rgb32	/usr/include/SDL2/SDL_opengl.h	7097;"	d
GL_ARB_texture_compression	/usr/include/SDL2/SDL_opengl.h	6086;"	d
GL_ARB_texture_compression_bptc	/usr/include/SDL2/SDL_opengl.h	6851;"	d
GL_ARB_texture_compression_rgtc	/usr/include/SDL2/SDL_opengl.h	6669;"	d
GL_ARB_texture_cube_map	/usr/include/SDL2/SDL_opengl.h	6082;"	d
GL_ARB_texture_cube_map_array	/usr/include/SDL2/SDL_opengl.h	6821;"	d
GL_ARB_texture_env_add	/usr/include/SDL2/SDL_opengl.h	6078;"	d
GL_ARB_texture_env_combine	/usr/include/SDL2/SDL_opengl.h	6162;"	d
GL_ARB_texture_env_crossbar	/usr/include/SDL2/SDL_opengl.h	6166;"	d
GL_ARB_texture_env_dot3	/usr/include/SDL2/SDL_opengl.h	6170;"	d
GL_ARB_texture_float	/usr/include/SDL2/SDL_opengl.h	6553;"	d
GL_ARB_texture_gather	/usr/include/SDL2/SDL_opengl.h	6825;"	d
GL_ARB_texture_mirrored_repeat	/usr/include/SDL2/SDL_opengl.h	6174;"	d
GL_ARB_texture_multisample	/usr/include/SDL2/SDL_opengl.h	6781;"	d
GL_ARB_texture_non_power_of_two	/usr/include/SDL2/SDL_opengl.h	6517;"	d
GL_ARB_texture_query_lod	/usr/include/SDL2/SDL_opengl.h	6829;"	d
GL_ARB_texture_rectangle	/usr/include/SDL2/SDL_opengl.h	6537;"	d
GL_ARB_texture_rg	/usr/include/SDL2/SDL_opengl.h	6673;"	d
GL_ARB_texture_rgb10_a2ui	/usr/include/SDL2/SDL_opengl.h	6907;"	d
GL_ARB_texture_swizzle	/usr/include/SDL2/SDL_opengl.h	6911;"	d
GL_ARB_timer_query	/usr/include/SDL2/SDL_opengl.h	6915;"	d
GL_ARB_transform_feedback2	/usr/include/SDL2/SDL_opengl.h	7101;"	d
GL_ARB_transform_feedback3	/usr/include/SDL2/SDL_opengl.h	7121;"	d
GL_ARB_transpose_matrix	/usr/include/SDL2/SDL_opengl.h	6056;"	d
GL_ARB_uniform_buffer_object	/usr/include/SDL2/SDL_opengl.h	6691;"	d
GL_ARB_vertex_array_bgra	/usr/include/SDL2/SDL_opengl.h	6795;"	d
GL_ARB_vertex_array_object	/usr/include/SDL2/SDL_opengl.h	6677;"	d
GL_ARB_vertex_attrib_64bit	/usr/include/SDL2/SDL_opengl.h	7289;"	d
GL_ARB_vertex_blend	/usr/include/SDL2/SDL_opengl.h	6120;"	d
GL_ARB_vertex_buffer_object	/usr/include/SDL2/SDL_opengl.h	6363;"	d
GL_ARB_vertex_program	/usr/include/SDL2/SDL_opengl.h	6228;"	d
GL_ARB_vertex_shader	/usr/include/SDL2/SDL_opengl.h	6497;"	d
GL_ARB_vertex_type_2_10_10_10_rev	/usr/include/SDL2/SDL_opengl.h	6927;"	d
GL_ARB_viewport_array	/usr/include/SDL2/SDL_opengl.h	7315;"	d
GL_ARB_window_pos	/usr/include/SDL2/SDL_opengl.h	6190;"	d
GL_ARM_mali_program_binary	/usr/include/SDL2/SDL_opengles2.h	2250;"	d
GL_ARM_mali_shader_binary	/usr/include/SDL2/SDL_opengles2.h	2255;"	d
GL_ARM_rgba8	/usr/include/SDL2/SDL_opengles2.h	2260;"	d
GL_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengl.h	413;"	d
GL_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengles2.h	469;"	d
GL_ARRAY_BUFFER_ARB	/usr/include/SDL2/SDL_opengl.h	1446;"	d
GL_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	415;"	d
GL_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengles2.h	471;"	d
GL_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1448;"	d
GL_ARRAY_ELEMENT_LOCK_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2842;"	d
GL_ARRAY_ELEMENT_LOCK_FIRST_EXT	/usr/include/SDL2/SDL_opengl.h	2841;"	d
GL_ARRAY_OBJECT_BUFFER_ATI	/usr/include/SDL2/SDL_opengl.h	3835;"	d
GL_ARRAY_OBJECT_OFFSET_ATI	/usr/include/SDL2/SDL_opengl.h	3836;"	d
GL_ASYNC_DRAW_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl.h	2942;"	d
GL_ASYNC_HISTOGRAM_SGIX	/usr/include/SDL2/SDL_opengl.h	2950;"	d
GL_ASYNC_MARKER_SGIX	/usr/include/SDL2/SDL_opengl.h	2937;"	d
GL_ASYNC_READ_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl.h	2943;"	d
GL_ASYNC_TEX_IMAGE_SGIX	/usr/include/SDL2/SDL_opengl.h	2941;"	d
GL_ATC_RGBA_EXPLICIT_ALPHA_AMD	/usr/include/SDL2/SDL_opengles2.h	1249;"	d
GL_ATC_RGBA_INTERPOLATED_ALPHA_AMD	/usr/include/SDL2/SDL_opengles2.h	1250;"	d
GL_ATC_RGB_AMD	/usr/include/SDL2/SDL_opengles2.h	1248;"	d
GL_ATI_draw_buffers	/usr/include/SDL2/SDL_opengl.h	9431;"	d
GL_ATI_element_array	/usr/include/SDL2/SDL_opengl.h	9269;"	d
GL_ATI_envmap_bumpmap	/usr/include/SDL2/SDL_opengl.h	8995;"	d
GL_ATI_fragment_shader	/usr/include/SDL2/SDL_opengl.h	9009;"	d
GL_ATI_map_object_buffer	/usr/include/SDL2/SDL_opengl.h	9603;"	d
GL_ATI_meminfo	/usr/include/SDL2/SDL_opengl.h	10615;"	d
GL_ATI_pixel_format_float	/usr/include/SDL2/SDL_opengl.h	9439;"	d
GL_ATI_pn_triangles	/usr/include/SDL2/SDL_opengl.h	9043;"	d
GL_ATI_separate_stencil	/usr/include/SDL2/SDL_opengl.h	9613;"	d
GL_ATI_text_fragment_shader	/usr/include/SDL2/SDL_opengl.h	9351;"	d
GL_ATI_texture_env_combine3	/usr/include/SDL2/SDL_opengl.h	9446;"	d
GL_ATI_texture_float	/usr/include/SDL2/SDL_opengl.h	9450;"	d
GL_ATI_texture_mirror_once	/usr/include/SDL2/SDL_opengl.h	8755;"	d
GL_ATI_vertex_array_object	/usr/include/SDL2/SDL_opengl.h	9053;"	d
GL_ATI_vertex_attrib_array_object	/usr/include/SDL2/SDL_opengl.h	9623;"	d
GL_ATI_vertex_streams	/usr/include/SDL2/SDL_opengl.h	9173;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4980;"	d
GL_ATTACHED_SHADERS	/usr/include/SDL2/SDL_opengl.h	528;"	d
GL_ATTACHED_SHADERS	/usr/include/SDL2/SDL_opengles2.h	626;"	d
GL_ATTENUATION_EXT	/usr/include/SDL2/SDL_opengl.h	2907;"	d
GL_ATTRIB_ARRAY_POINTER_NV	/usr/include/SDL2/SDL_opengl.h	3607;"	d
GL_ATTRIB_ARRAY_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3581;"	d
GL_ATTRIB_ARRAY_STRIDE_NV	/usr/include/SDL2/SDL_opengl.h	3582;"	d
GL_ATTRIB_ARRAY_TYPE_NV	/usr/include/SDL2/SDL_opengl.h	3583;"	d
GL_AUX_DEPTH_STENCIL_APPLE	/usr/include/SDL2/SDL_opengl.h	4814;"	d
GL_AVERAGE_EXT	/usr/include/SDL2/SDL_opengl.h	2976;"	d
GL_AVERAGE_HP	/usr/include/SDL2/SDL_opengl.h	2707;"	d
GL_BACK	/usr/include/SDL2/SDL_opengles2.h	485;"	d
GL_BACK_NORMALS_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2775;"	d
GL_BACK_PRIMARY_COLOR_NV	/usr/include/SDL2/SDL_opengl.h	4540;"	d
GL_BACK_SECONDARY_COLOR_NV	/usr/include/SDL2/SDL_opengl.h	4541;"	d
GL_BGR	/usr/include/SDL2/SDL_opengl.h	154;"	d
GL_BGRA	/usr/include/SDL2/SDL_opengl.h	155;"	d
GL_BGRA8_EXT	/usr/include/SDL2/SDL_opengles2.h	1581;"	d
GL_BGRA_EXT	/usr/include/SDL2/SDL_opengl.h	2933;"	d
GL_BGRA_EXT	/usr/include/SDL2/SDL_opengles2.h	1380;"	d
GL_BGRA_EXT	/usr/include/SDL2/SDL_opengles2.h	1487;"	d
GL_BGRA_EXT	/usr/include/SDL2/SDL_opengles2.h	1552;"	d
GL_BGRA_IMG	/usr/include/SDL2/SDL_opengles2.h	1631;"	d
GL_BGRA_INTEGER	/usr/include/SDL2/SDL_opengl.h	656;"	d
GL_BGRA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4626;"	d
GL_BGR_EXT	/usr/include/SDL2/SDL_opengl.h	2932;"	d
GL_BGR_INTEGER	/usr/include/SDL2/SDL_opengl.h	655;"	d
GL_BGR_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4625;"	d
GL_BIAS_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3813;"	d
GL_BIAS_BY_NEGATIVE_ONE_HALF_NV	/usr/include/SDL2/SDL_opengl.h	3246;"	d
GL_BINNING_CONTROL_HINT_QCOM	/usr/include/SDL2/SDL_opengles2.h	1764;"	d
GL_BINORMAL_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	3031;"	d
GL_BINORMAL_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	3039;"	d
GL_BINORMAL_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	3037;"	d
GL_BINORMAL_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3036;"	d
GL_BLEND	/usr/include/SDL2/SDL_opengles2.h	501;"	d
GL_BLEND_COLOR	/usr/include/SDL2/SDL_opengl.h	183;"	d
GL_BLEND_COLOR	/usr/include/SDL2/SDL_opengles2.h	466;"	d
GL_BLEND_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2229;"	d
GL_BLEND_DST_ALPHA	/usr/include/SDL2/SDL_opengl.h	364;"	d
GL_BLEND_DST_ALPHA	/usr/include/SDL2/SDL_opengles2.h	460;"	d
GL_BLEND_DST_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3119;"	d
GL_BLEND_DST_RGB	/usr/include/SDL2/SDL_opengl.h	362;"	d
GL_BLEND_DST_RGB	/usr/include/SDL2/SDL_opengles2.h	458;"	d
GL_BLEND_DST_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3117;"	d
GL_BLEND_EQUATION	/usr/include/SDL2/SDL_opengl.h	187;"	d
GL_BLEND_EQUATION	/usr/include/SDL2/SDL_opengles2.h	449;"	d
GL_BLEND_EQUATION_ALPHA	/usr/include/SDL2/SDL_opengl.h	492;"	d
GL_BLEND_EQUATION_ALPHA	/usr/include/SDL2/SDL_opengles2.h	451;"	d
GL_BLEND_EQUATION_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	4207;"	d
GL_BLEND_EQUATION_EXT	/usr/include/SDL2/SDL_opengl.h	2558;"	d
GL_BLEND_EQUATION_RGB	/usr/include/SDL2/SDL_opengl.h	463;"	d
GL_BLEND_EQUATION_RGB	/usr/include/SDL2/SDL_opengles2.h	450;"	d
GL_BLEND_EQUATION_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	4206;"	d
GL_BLEND_SRC_ALPHA	/usr/include/SDL2/SDL_opengl.h	365;"	d
GL_BLEND_SRC_ALPHA	/usr/include/SDL2/SDL_opengles2.h	461;"	d
GL_BLEND_SRC_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3120;"	d
GL_BLEND_SRC_RGB	/usr/include/SDL2/SDL_opengl.h	363;"	d
GL_BLEND_SRC_RGB	/usr/include/SDL2/SDL_opengles2.h	459;"	d
GL_BLEND_SRC_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3118;"	d
GL_BLUE_BITS	/usr/include/SDL2/SDL_opengles2.h	558;"	d
GL_BLUE_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3803;"	d
GL_BLUE_INTEGER	/usr/include/SDL2/SDL_opengl.h	652;"	d
GL_BLUE_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4621;"	d
GL_BLUE_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3130;"	d
GL_BLUE_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3126;"	d
GL_BOOL	/usr/include/SDL2/SDL_opengl.h	510;"	d
GL_BOOL	/usr/include/SDL2/SDL_opengles2.h	739;"	d
GL_BOOL_ARB	/usr/include/SDL2/SDL_opengl.h	1496;"	d
GL_BOOL_VEC2	/usr/include/SDL2/SDL_opengl.h	511;"	d
GL_BOOL_VEC2	/usr/include/SDL2/SDL_opengles2.h	740;"	d
GL_BOOL_VEC2_ARB	/usr/include/SDL2/SDL_opengl.h	1497;"	d
GL_BOOL_VEC3	/usr/include/SDL2/SDL_opengl.h	512;"	d
GL_BOOL_VEC3	/usr/include/SDL2/SDL_opengles2.h	741;"	d
GL_BOOL_VEC3_ARB	/usr/include/SDL2/SDL_opengl.h	1498;"	d
GL_BOOL_VEC4	/usr/include/SDL2/SDL_opengl.h	513;"	d
GL_BOOL_VEC4	/usr/include/SDL2/SDL_opengles2.h	742;"	d
GL_BOOL_VEC4_ARB	/usr/include/SDL2/SDL_opengl.h	1499;"	d
GL_BUFFER	/usr/include/SDL2/SDL_opengles2.h	1185;"	d
GL_BUFFER_ACCESS	/usr/include/SDL2/SDL_opengl.h	421;"	d
GL_BUFFER_ACCESS_ARB	/usr/include/SDL2/SDL_opengl.h	1463;"	d
GL_BUFFER_ACCESS_FLAGS	/usr/include/SDL2/SDL_opengl.h	681;"	d
GL_BUFFER_ACCESS_OES	/usr/include/SDL2/SDL_opengles2.h	1060;"	d
GL_BUFFER_FLUSHING_UNMAP_APPLE	/usr/include/SDL2/SDL_opengl.h	4366;"	d
GL_BUFFER_GPU_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4880;"	d
GL_BUFFER_MAPPED	/usr/include/SDL2/SDL_opengl.h	422;"	d
GL_BUFFER_MAPPED_ARB	/usr/include/SDL2/SDL_opengl.h	1464;"	d
GL_BUFFER_MAPPED_OES	/usr/include/SDL2/SDL_opengles2.h	1061;"	d
GL_BUFFER_MAP_LENGTH	/usr/include/SDL2/SDL_opengl.h	682;"	d
GL_BUFFER_MAP_OFFSET	/usr/include/SDL2/SDL_opengl.h	683;"	d
GL_BUFFER_MAP_POINTER	/usr/include/SDL2/SDL_opengl.h	423;"	d
GL_BUFFER_MAP_POINTER_ARB	/usr/include/SDL2/SDL_opengl.h	1465;"	d
GL_BUFFER_MAP_POINTER_OES	/usr/include/SDL2/SDL_opengles2.h	1062;"	d
GL_BUFFER_OBJECT_APPLE	/usr/include/SDL2/SDL_opengl.h	4818;"	d
GL_BUFFER_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2.h	1430;"	d
GL_BUFFER_SERIALIZED_MODIFY_APPLE	/usr/include/SDL2/SDL_opengl.h	4365;"	d
GL_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	407;"	d
GL_BUFFER_SIZE	/usr/include/SDL2/SDL_opengles2.h	478;"	d
GL_BUFFER_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1444;"	d
GL_BUFFER_UPDATE_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4977;"	d
GL_BUFFER_USAGE	/usr/include/SDL2/SDL_opengl.h	408;"	d
GL_BUFFER_USAGE	/usr/include/SDL2/SDL_opengles2.h	479;"	d
GL_BUFFER_USAGE_ARB	/usr/include/SDL2/SDL_opengl.h	1445;"	d
GL_BUMP_ENVMAP_ATI	/usr/include/SDL2/SDL_opengl.h	3705;"	d
GL_BUMP_NUM_TEX_UNITS_ATI	/usr/include/SDL2/SDL_opengl.h	3701;"	d
GL_BUMP_ROT_MATRIX_ATI	/usr/include/SDL2/SDL_opengl.h	3699;"	d
GL_BUMP_ROT_MATRIX_SIZE_ATI	/usr/include/SDL2/SDL_opengl.h	3700;"	d
GL_BUMP_TARGET_ATI	/usr/include/SDL2/SDL_opengl.h	3706;"	d
GL_BUMP_TEX_UNITS_ATI	/usr/include/SDL2/SDL_opengl.h	3702;"	d
GL_BYTE	/usr/include/SDL2/SDL_opengles2.h	589;"	d
GL_CALLIGRAPHIC_FRAGMENT_SGIX	/usr/include/SDL2/SDL_opengl.h	2801;"	d
GL_CCW	/usr/include/SDL2/SDL_opengles2.h	519;"	d
GL_CLAMP_FRAGMENT_COLOR	/usr/include/SDL2/SDL_opengl.h	812;"	d
GL_CLAMP_FRAGMENT_COLOR_ARB	/usr/include/SDL2/SDL_opengl.h	1583;"	d
GL_CLAMP_READ_COLOR	/usr/include/SDL2/SDL_opengl.h	609;"	d
GL_CLAMP_READ_COLOR_ARB	/usr/include/SDL2/SDL_opengl.h	1584;"	d
GL_CLAMP_TO_BORDER	/usr/include/SDL2/SDL_opengl.h	318;"	d
GL_CLAMP_TO_BORDER_ARB	/usr/include/SDL2/SDL_opengl.h	1217;"	d
GL_CLAMP_TO_BORDER_SGIS	/usr/include/SDL2/SDL_opengl.h	2551;"	d
GL_CLAMP_TO_EDGE	/usr/include/SDL2/SDL_opengl.h	158;"	d
GL_CLAMP_TO_EDGE	/usr/include/SDL2/SDL_opengles2.h	729;"	d
GL_CLAMP_TO_EDGE_SGIS	/usr/include/SDL2/SDL_opengl.h	2547;"	d
GL_CLAMP_VERTEX_COLOR	/usr/include/SDL2/SDL_opengl.h	811;"	d
GL_CLAMP_VERTEX_COLOR_ARB	/usr/include/SDL2/SDL_opengl.h	1582;"	d
GL_CLIENT_ACTIVE_TEXTURE	/usr/include/SDL2/SDL_opengl.h	322;"	d
GL_CLIENT_ACTIVE_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl.h	1161;"	d
GL_CLIP_DISTANCE0	/usr/include/SDL2/SDL_opengl.h	583;"	d
GL_CLIP_DISTANCE1	/usr/include/SDL2/SDL_opengl.h	584;"	d
GL_CLIP_DISTANCE2	/usr/include/SDL2/SDL_opengl.h	585;"	d
GL_CLIP_DISTANCE3	/usr/include/SDL2/SDL_opengl.h	586;"	d
GL_CLIP_DISTANCE4	/usr/include/SDL2/SDL_opengl.h	587;"	d
GL_CLIP_DISTANCE5	/usr/include/SDL2/SDL_opengl.h	588;"	d
GL_CLIP_DISTANCE6	/usr/include/SDL2/SDL_opengl.h	589;"	d
GL_CLIP_DISTANCE7	/usr/include/SDL2/SDL_opengl.h	590;"	d
GL_CLIP_DISTANCE_NV	/usr/include/SDL2/SDL_opengl.h	4543;"	d
GL_CLIP_FAR_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2773;"	d
GL_CLIP_NEAR_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2772;"	d
GL_CLIP_VOLUME_CLIPPING_HINT_EXT	/usr/include/SDL2/SDL_opengl.h	2789;"	d
GL_CMYKA_EXT	/usr/include/SDL2/SDL_opengl.h	2412;"	d
GL_CMYK_EXT	/usr/include/SDL2/SDL_opengl.h	2411;"	d
GL_CND0_ATI	/usr/include/SDL2/SDL_opengl.h	3784;"	d
GL_CND_ATI	/usr/include/SDL2/SDL_opengl.h	3783;"	d
GL_COLOR3_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2735;"	d
GL_COLOR4_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2736;"	d
GL_COLOR_ALPHA_PAIRING_ATI	/usr/include/SDL2/SDL_opengl.h	3794;"	d
GL_COLOR_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4891;"	d
GL_COLOR_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	439;"	d
GL_COLOR_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1452;"	d
GL_COLOR_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2498;"	d
GL_COLOR_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	2484;"	d
GL_COLOR_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4901;"	d
GL_COLOR_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3323;"	d
GL_COLOR_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3331;"	d
GL_COLOR_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl.h	2961;"	d
GL_COLOR_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	2510;"	d
GL_COLOR_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2495;"	d
GL_COLOR_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	2497;"	d
GL_COLOR_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	2496;"	d
GL_COLOR_ATTACHMENT0	/usr/include/SDL2/SDL_opengl.h	1674;"	d
GL_COLOR_ATTACHMENT0	/usr/include/SDL2/SDL_opengles2.h	805;"	d
GL_COLOR_ATTACHMENT0_EXT	/usr/include/SDL2/SDL_opengl.h	4266;"	d
GL_COLOR_ATTACHMENT0_NV	/usr/include/SDL2/SDL_opengles2.h	1697;"	d
GL_COLOR_ATTACHMENT1	/usr/include/SDL2/SDL_opengl.h	1675;"	d
GL_COLOR_ATTACHMENT10	/usr/include/SDL2/SDL_opengl.h	1684;"	d
GL_COLOR_ATTACHMENT10_EXT	/usr/include/SDL2/SDL_opengl.h	4276;"	d
GL_COLOR_ATTACHMENT10_NV	/usr/include/SDL2/SDL_opengles2.h	1707;"	d
GL_COLOR_ATTACHMENT11	/usr/include/SDL2/SDL_opengl.h	1685;"	d
GL_COLOR_ATTACHMENT11_EXT	/usr/include/SDL2/SDL_opengl.h	4277;"	d
GL_COLOR_ATTACHMENT11_NV	/usr/include/SDL2/SDL_opengles2.h	1708;"	d
GL_COLOR_ATTACHMENT12	/usr/include/SDL2/SDL_opengl.h	1686;"	d
GL_COLOR_ATTACHMENT12_EXT	/usr/include/SDL2/SDL_opengl.h	4278;"	d
GL_COLOR_ATTACHMENT12_NV	/usr/include/SDL2/SDL_opengles2.h	1709;"	d
GL_COLOR_ATTACHMENT13	/usr/include/SDL2/SDL_opengl.h	1687;"	d
GL_COLOR_ATTACHMENT13_EXT	/usr/include/SDL2/SDL_opengl.h	4279;"	d
GL_COLOR_ATTACHMENT13_NV	/usr/include/SDL2/SDL_opengles2.h	1710;"	d
GL_COLOR_ATTACHMENT14	/usr/include/SDL2/SDL_opengl.h	1688;"	d
GL_COLOR_ATTACHMENT14_EXT	/usr/include/SDL2/SDL_opengl.h	4280;"	d
GL_COLOR_ATTACHMENT14_NV	/usr/include/SDL2/SDL_opengles2.h	1711;"	d
GL_COLOR_ATTACHMENT15	/usr/include/SDL2/SDL_opengl.h	1689;"	d
GL_COLOR_ATTACHMENT15_EXT	/usr/include/SDL2/SDL_opengl.h	4281;"	d
GL_COLOR_ATTACHMENT15_NV	/usr/include/SDL2/SDL_opengles2.h	1712;"	d
GL_COLOR_ATTACHMENT1_EXT	/usr/include/SDL2/SDL_opengl.h	4267;"	d
GL_COLOR_ATTACHMENT1_NV	/usr/include/SDL2/SDL_opengles2.h	1698;"	d
GL_COLOR_ATTACHMENT2	/usr/include/SDL2/SDL_opengl.h	1676;"	d
GL_COLOR_ATTACHMENT2_EXT	/usr/include/SDL2/SDL_opengl.h	4268;"	d
GL_COLOR_ATTACHMENT2_NV	/usr/include/SDL2/SDL_opengles2.h	1699;"	d
GL_COLOR_ATTACHMENT3	/usr/include/SDL2/SDL_opengl.h	1677;"	d
GL_COLOR_ATTACHMENT3_EXT	/usr/include/SDL2/SDL_opengl.h	4269;"	d
GL_COLOR_ATTACHMENT3_NV	/usr/include/SDL2/SDL_opengles2.h	1700;"	d
GL_COLOR_ATTACHMENT4	/usr/include/SDL2/SDL_opengl.h	1678;"	d
GL_COLOR_ATTACHMENT4_EXT	/usr/include/SDL2/SDL_opengl.h	4270;"	d
GL_COLOR_ATTACHMENT4_NV	/usr/include/SDL2/SDL_opengles2.h	1701;"	d
GL_COLOR_ATTACHMENT5	/usr/include/SDL2/SDL_opengl.h	1679;"	d
GL_COLOR_ATTACHMENT5_EXT	/usr/include/SDL2/SDL_opengl.h	4271;"	d
GL_COLOR_ATTACHMENT5_NV	/usr/include/SDL2/SDL_opengles2.h	1702;"	d
GL_COLOR_ATTACHMENT6	/usr/include/SDL2/SDL_opengl.h	1680;"	d
GL_COLOR_ATTACHMENT6_EXT	/usr/include/SDL2/SDL_opengl.h	4272;"	d
GL_COLOR_ATTACHMENT6_NV	/usr/include/SDL2/SDL_opengles2.h	1703;"	d
GL_COLOR_ATTACHMENT7	/usr/include/SDL2/SDL_opengl.h	1681;"	d
GL_COLOR_ATTACHMENT7_EXT	/usr/include/SDL2/SDL_opengl.h	4273;"	d
GL_COLOR_ATTACHMENT7_NV	/usr/include/SDL2/SDL_opengles2.h	1704;"	d
GL_COLOR_ATTACHMENT8	/usr/include/SDL2/SDL_opengl.h	1682;"	d
GL_COLOR_ATTACHMENT8_EXT	/usr/include/SDL2/SDL_opengl.h	4274;"	d
GL_COLOR_ATTACHMENT8_NV	/usr/include/SDL2/SDL_opengles2.h	1705;"	d
GL_COLOR_ATTACHMENT9	/usr/include/SDL2/SDL_opengl.h	1683;"	d
GL_COLOR_ATTACHMENT9_EXT	/usr/include/SDL2/SDL_opengl.h	4275;"	d
GL_COLOR_ATTACHMENT9_NV	/usr/include/SDL2/SDL_opengles2.h	1706;"	d
GL_COLOR_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengles2.h	1466;"	d
GL_COLOR_BUFFER_BIT	/usr/include/SDL2/SDL_opengles2.h	401;"	d
GL_COLOR_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2.h	1803;"	d
GL_COLOR_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2.h	1804;"	d
GL_COLOR_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2.h	1805;"	d
GL_COLOR_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2.h	1806;"	d
GL_COLOR_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2.h	1807;"	d
GL_COLOR_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2.h	1808;"	d
GL_COLOR_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2.h	1809;"	d
GL_COLOR_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2.h	1810;"	d
GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI	/usr/include/SDL2/SDL_opengl.h	4100;"	d
GL_COLOR_CLEAR_VALUE	/usr/include/SDL2/SDL_opengles2.h	549;"	d
GL_COLOR_EXT	/usr/include/SDL2/SDL_opengles2.h	1440;"	d
GL_COLOR_FLOAT_APPLE	/usr/include/SDL2/SDL_opengl.h	4797;"	d
GL_COLOR_INDEX12_EXT	/usr/include/SDL2/SDL_opengl.h	2783;"	d
GL_COLOR_INDEX16_EXT	/usr/include/SDL2/SDL_opengl.h	2784;"	d
GL_COLOR_INDEX1_EXT	/usr/include/SDL2/SDL_opengl.h	2779;"	d
GL_COLOR_INDEX2_EXT	/usr/include/SDL2/SDL_opengl.h	2780;"	d
GL_COLOR_INDEX4_EXT	/usr/include/SDL2/SDL_opengl.h	2781;"	d
GL_COLOR_INDEX8_EXT	/usr/include/SDL2/SDL_opengl.h	2782;"	d
GL_COLOR_MATRIX	/usr/include/SDL2/SDL_opengl.h	227;"	d
GL_COLOR_MATRIX_SGI	/usr/include/SDL2/SDL_opengl.h	2348;"	d
GL_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	228;"	d
GL_COLOR_MATRIX_STACK_DEPTH_SGI	/usr/include/SDL2/SDL_opengl.h	2349;"	d
GL_COLOR_SAMPLES_NV	/usr/include/SDL2/SDL_opengl.h	5062;"	d
GL_COLOR_SUM	/usr/include/SDL2/SDL_opengl.h	394;"	d
GL_COLOR_SUM_ARB	/usr/include/SDL2/SDL_opengl.h	1344;"	d
GL_COLOR_SUM_CLAMP_NV	/usr/include/SDL2/SDL_opengl.h	3260;"	d
GL_COLOR_SUM_EXT	/usr/include/SDL2/SDL_opengl.h	2996;"	d
GL_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	238;"	d
GL_COLOR_TABLE_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	251;"	d
GL_COLOR_TABLE_ALPHA_SIZE_SGI	/usr/include/SDL2/SDL_opengl.h	2375;"	d
GL_COLOR_TABLE_BIAS	/usr/include/SDL2/SDL_opengl.h	245;"	d
GL_COLOR_TABLE_BIAS_SGI	/usr/include/SDL2/SDL_opengl.h	2369;"	d
GL_COLOR_TABLE_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	250;"	d
GL_COLOR_TABLE_BLUE_SIZE_SGI	/usr/include/SDL2/SDL_opengl.h	2374;"	d
GL_COLOR_TABLE_FORMAT	/usr/include/SDL2/SDL_opengl.h	246;"	d
GL_COLOR_TABLE_FORMAT_SGI	/usr/include/SDL2/SDL_opengl.h	2370;"	d
GL_COLOR_TABLE_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	249;"	d
GL_COLOR_TABLE_GREEN_SIZE_SGI	/usr/include/SDL2/SDL_opengl.h	2373;"	d
GL_COLOR_TABLE_INTENSITY_SIZE	/usr/include/SDL2/SDL_opengl.h	253;"	d
GL_COLOR_TABLE_INTENSITY_SIZE_SGI	/usr/include/SDL2/SDL_opengl.h	2377;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl.h	252;"	d
GL_COLOR_TABLE_LUMINANCE_SIZE_SGI	/usr/include/SDL2/SDL_opengl.h	2376;"	d
GL_COLOR_TABLE_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	248;"	d
GL_COLOR_TABLE_RED_SIZE_SGI	/usr/include/SDL2/SDL_opengl.h	2372;"	d
GL_COLOR_TABLE_SCALE	/usr/include/SDL2/SDL_opengl.h	244;"	d
GL_COLOR_TABLE_SCALE_SGI	/usr/include/SDL2/SDL_opengl.h	2368;"	d
GL_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2362;"	d
GL_COLOR_TABLE_WIDTH	/usr/include/SDL2/SDL_opengl.h	247;"	d
GL_COLOR_TABLE_WIDTH_SGI	/usr/include/SDL2/SDL_opengl.h	2371;"	d
GL_COLOR_WRITEMASK	/usr/include/SDL2/SDL_opengles2.h	550;"	d
GL_COMBINE	/usr/include/SDL2/SDL_opengl.h	335;"	d
GL_COMBINE4_NV	/usr/include/SDL2/SDL_opengl.h	3293;"	d
GL_COMBINER0_NV	/usr/include/SDL2/SDL_opengl.h	3261;"	d
GL_COMBINER1_NV	/usr/include/SDL2/SDL_opengl.h	3262;"	d
GL_COMBINER2_NV	/usr/include/SDL2/SDL_opengl.h	3263;"	d
GL_COMBINER3_NV	/usr/include/SDL2/SDL_opengl.h	3264;"	d
GL_COMBINER4_NV	/usr/include/SDL2/SDL_opengl.h	3265;"	d
GL_COMBINER5_NV	/usr/include/SDL2/SDL_opengl.h	3266;"	d
GL_COMBINER6_NV	/usr/include/SDL2/SDL_opengl.h	3267;"	d
GL_COMBINER7_NV	/usr/include/SDL2/SDL_opengl.h	3268;"	d
GL_COMBINER_AB_DOT_PRODUCT_NV	/usr/include/SDL2/SDL_opengl.h	3250;"	d
GL_COMBINER_AB_OUTPUT_NV	/usr/include/SDL2/SDL_opengl.h	3255;"	d
GL_COMBINER_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3254;"	d
GL_COMBINER_CD_DOT_PRODUCT_NV	/usr/include/SDL2/SDL_opengl.h	3251;"	d
GL_COMBINER_CD_OUTPUT_NV	/usr/include/SDL2/SDL_opengl.h	3256;"	d
GL_COMBINER_COMPONENT_USAGE_NV	/usr/include/SDL2/SDL_opengl.h	3249;"	d
GL_COMBINER_INPUT_NV	/usr/include/SDL2/SDL_opengl.h	3247;"	d
GL_COMBINER_MAPPING_NV	/usr/include/SDL2/SDL_opengl.h	3248;"	d
GL_COMBINER_MUX_SUM_NV	/usr/include/SDL2/SDL_opengl.h	3252;"	d
GL_COMBINER_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3253;"	d
GL_COMBINER_SUM_OUTPUT_NV	/usr/include/SDL2/SDL_opengl.h	3257;"	d
GL_COMBINE_ALPHA	/usr/include/SDL2/SDL_opengl.h	337;"	d
GL_COMBINE_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1288;"	d
GL_COMBINE_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3049;"	d
GL_COMBINE_ARB	/usr/include/SDL2/SDL_opengl.h	1286;"	d
GL_COMBINE_EXT	/usr/include/SDL2/SDL_opengl.h	3047;"	d
GL_COMBINE_RGB	/usr/include/SDL2/SDL_opengl.h	336;"	d
GL_COMBINE_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1287;"	d
GL_COMBINE_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3048;"	d
GL_COMMAND_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4974;"	d
GL_COMPARE_REF_DEPTH_TO_TEXTURE_EXT	/usr/include/SDL2/SDL_opengl.h	4471;"	d
GL_COMPARE_REF_TO_TEXTURE	/usr/include/SDL2/SDL_opengl.h	582;"	d
GL_COMPARE_REF_TO_TEXTURE_EXT	/usr/include/SDL2/SDL_opengles2.h	1526;"	d
GL_COMPARE_R_TO_TEXTURE	/usr/include/SDL2/SDL_opengl.h	403;"	d
GL_COMPARE_R_TO_TEXTURE_ARB	/usr/include/SDL2/SDL_opengl.h	1333;"	d
GL_COMPATIBLE_SUBROUTINES	/usr/include/SDL2/SDL_opengl.h	2042;"	d
GL_COMPILE_STATUS	/usr/include/SDL2/SDL_opengl.h	524;"	d
GL_COMPILE_STATUS	/usr/include/SDL2/SDL_opengles2.h	763;"	d
GL_COMPRESSED_ALPHA	/usr/include/SDL2/SDL_opengl.h	331;"	d
GL_COMPRESSED_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1203;"	d
GL_COMPRESSED_INTENSITY	/usr/include/SDL2/SDL_opengl.h	334;"	d
GL_COMPRESSED_INTENSITY_ARB	/usr/include/SDL2/SDL_opengl.h	1206;"	d
GL_COMPRESSED_LUMINANCE	/usr/include/SDL2/SDL_opengl.h	332;"	d
GL_COMPRESSED_LUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl.h	333;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1205;"	d
GL_COMPRESSED_LUMINANCE_ALPHA_LATC2_EXT	/usr/include/SDL2/SDL_opengl.h	4486;"	d
GL_COMPRESSED_LUMINANCE_ARB	/usr/include/SDL2/SDL_opengl.h	1204;"	d
GL_COMPRESSED_LUMINANCE_LATC1_EXT	/usr/include/SDL2/SDL_opengl.h	4484;"	d
GL_COMPRESSED_RED	/usr/include/SDL2/SDL_opengl.h	598;"	d
GL_COMPRESSED_RED_GREEN_RGTC2_EXT	/usr/include/SDL2/SDL_opengl.h	4493;"	d
GL_COMPRESSED_RED_RGTC1	/usr/include/SDL2/SDL_opengl.h	1770;"	d
GL_COMPRESSED_RED_RGTC1_EXT	/usr/include/SDL2/SDL_opengl.h	4491;"	d
GL_COMPRESSED_RG	/usr/include/SDL2/SDL_opengl.h	599;"	d
GL_COMPRESSED_RGB	/usr/include/SDL2/SDL_opengl.h	311;"	d
GL_COMPRESSED_RGBA	/usr/include/SDL2/SDL_opengl.h	312;"	d
GL_COMPRESSED_RGBA_ARB	/usr/include/SDL2/SDL_opengl.h	1208;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	/usr/include/SDL2/SDL_opengles2.h	1217;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1214;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	/usr/include/SDL2/SDL_opengles2.h	1215;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	/usr/include/SDL2/SDL_opengles2.h	1216;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	/usr/include/SDL2/SDL_opengles2.h	1218;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	/usr/include/SDL2/SDL_opengles2.h	1219;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	/usr/include/SDL2/SDL_opengles2.h	1206;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	/usr/include/SDL2/SDL_opengles2.h	1207;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1208;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1209;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	/usr/include/SDL2/SDL_opengles2.h	1210;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1211;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	/usr/include/SDL2/SDL_opengles2.h	1212;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	/usr/include/SDL2/SDL_opengles2.h	1213;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	/usr/include/SDL2/SDL_opengl.h	1953;"	d
GL_COMPRESSED_RGBA_FXT1_3DFX	/usr/include/SDL2/SDL_opengl.h	3363;"	d
GL_COMPRESSED_RGBA_PVRTC_2BPPV1_IMG	/usr/include/SDL2/SDL_opengles2.h	1645;"	d
GL_COMPRESSED_RGBA_PVRTC_4BPPV1_IMG	/usr/include/SDL2/SDL_opengles2.h	1644;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl.h	3308;"	d
GL_COMPRESSED_RGBA_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengles2.h	1541;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1300;"	d
GL_COMPRESSED_RGBA_S3TC_DXT3_EXT	/usr/include/SDL2/SDL_opengl.h	3309;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1305;"	d
GL_COMPRESSED_RGBA_S3TC_DXT5_EXT	/usr/include/SDL2/SDL_opengl.h	3310;"	d
GL_COMPRESSED_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1207;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	/usr/include/SDL2/SDL_opengl.h	1955;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	/usr/include/SDL2/SDL_opengl.h	1956;"	d
GL_COMPRESSED_RGB_FXT1_3DFX	/usr/include/SDL2/SDL_opengl.h	3362;"	d
GL_COMPRESSED_RGB_PVRTC_2BPPV1_IMG	/usr/include/SDL2/SDL_opengles2.h	1643;"	d
GL_COMPRESSED_RGB_PVRTC_4BPPV1_IMG	/usr/include/SDL2/SDL_opengles2.h	1642;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl.h	3307;"	d
GL_COMPRESSED_RGB_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengles2.h	1540;"	d
GL_COMPRESSED_RG_RGTC2	/usr/include/SDL2/SDL_opengl.h	1772;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_ALPHA_LATC2_EXT	/usr/include/SDL2/SDL_opengl.h	4487;"	d
GL_COMPRESSED_SIGNED_LUMINANCE_LATC1_EXT	/usr/include/SDL2/SDL_opengl.h	4485;"	d
GL_COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT	/usr/include/SDL2/SDL_opengl.h	4494;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	/usr/include/SDL2/SDL_opengl.h	1771;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1_EXT	/usr/include/SDL2/SDL_opengl.h	4492;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	/usr/include/SDL2/SDL_opengl.h	1773;"	d
GL_COMPRESSED_SLUMINANCE	/usr/include/SDL2/SDL_opengl.h	577;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl.h	578;"	d
GL_COMPRESSED_SLUMINANCE_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	4328;"	d
GL_COMPRESSED_SLUMINANCE_EXT	/usr/include/SDL2/SDL_opengl.h	4327;"	d
GL_COMPRESSED_SRGB	/usr/include/SDL2/SDL_opengl.h	567;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	/usr/include/SDL2/SDL_opengles2.h	1231;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1228;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	/usr/include/SDL2/SDL_opengles2.h	1229;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	/usr/include/SDL2/SDL_opengles2.h	1230;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	/usr/include/SDL2/SDL_opengles2.h	1232;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	/usr/include/SDL2/SDL_opengles2.h	1233;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	/usr/include/SDL2/SDL_opengles2.h	1220;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	/usr/include/SDL2/SDL_opengles2.h	1221;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1222;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1223;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	/usr/include/SDL2/SDL_opengles2.h	1224;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	/usr/include/SDL2/SDL_opengles2.h	1225;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	/usr/include/SDL2/SDL_opengles2.h	1226;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	/usr/include/SDL2/SDL_opengles2.h	1227;"	d
GL_COMPRESSED_SRGB_ALPHA	/usr/include/SDL2/SDL_opengl.h	568;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	/usr/include/SDL2/SDL_opengl.h	1954;"	d
GL_COMPRESSED_SRGB_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	4326;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl.h	4330;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT	/usr/include/SDL2/SDL_opengl.h	4331;"	d
GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT	/usr/include/SDL2/SDL_opengl.h	4332;"	d
GL_COMPRESSED_SRGB_EXT	/usr/include/SDL2/SDL_opengl.h	4325;"	d
GL_COMPRESSED_SRGB_S3TC_DXT1_EXT	/usr/include/SDL2/SDL_opengl.h	4329;"	d
GL_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengl.h	317;"	d
GL_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengles2.h	578;"	d
GL_COMPRESSED_TEXTURE_FORMATS_ARB	/usr/include/SDL2/SDL_opengl.h	1213;"	d
GL_COMP_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3811;"	d
GL_CONDITION_SATISFIED	/usr/include/SDL2/SDL_opengl.h	1886;"	d
GL_CONDITION_SATISFIED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1372;"	d
GL_CONSERVE_MEMORY_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2757;"	d
GL_CONSTANT	/usr/include/SDL2/SDL_opengl.h	354;"	d
GL_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengl.h	181;"	d
GL_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengles2.h	464;"	d
GL_CONSTANT_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	2227;"	d
GL_CONSTANT_ARB	/usr/include/SDL2/SDL_opengl.h	1305;"	d
GL_CONSTANT_BORDER	/usr/include/SDL2/SDL_opengl.h	254;"	d
GL_CONSTANT_BORDER_HP	/usr/include/SDL2/SDL_opengl.h	2715;"	d
GL_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengl.h	179;"	d
GL_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengles2.h	462;"	d
GL_CONSTANT_COLOR0_NV	/usr/include/SDL2/SDL_opengl.h	3226;"	d
GL_CONSTANT_COLOR1_NV	/usr/include/SDL2/SDL_opengl.h	3227;"	d
GL_CONSTANT_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2225;"	d
GL_CONSTANT_EXT	/usr/include/SDL2/SDL_opengl.h	3053;"	d
GL_CONST_EYE_NV	/usr/include/SDL2/SDL_opengl.h	3513;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	/usr/include/SDL2/SDL_opengl.h	890;"	d
GL_CONTEXT_CORE_PROFILE_BIT	/usr/include/SDL2/SDL_opengl.h	889;"	d
GL_CONTEXT_FLAGS	/usr/include/SDL2/SDL_opengl.h	595;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	/usr/include/SDL2/SDL_opengles2.h	1200;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	/usr/include/SDL2/SDL_opengl.h	600;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	/usr/include/SDL2/SDL_opengl.h	2208;"	d
GL_CONTEXT_PROFILE_MASK	/usr/include/SDL2/SDL_opengl.h	910;"	d
GL_CONTEXT_ROBUST_ACCESS_EXT	/usr/include/SDL2/SDL_opengles2.h	1498;"	d
GL_CONTINUOUS_AMD	/usr/include/SDL2/SDL_opengl.h	4733;"	d
GL_CONVOLUTION_1D	/usr/include/SDL2/SDL_opengl.h	193;"	d
GL_CONVOLUTION_1D_EXT	/usr/include/SDL2/SDL_opengl.h	2325;"	d
GL_CONVOLUTION_2D	/usr/include/SDL2/SDL_opengl.h	194;"	d
GL_CONVOLUTION_2D_EXT	/usr/include/SDL2/SDL_opengl.h	2326;"	d
GL_CONVOLUTION_BORDER_COLOR	/usr/include/SDL2/SDL_opengl.h	256;"	d
GL_CONVOLUTION_BORDER_COLOR_HP	/usr/include/SDL2/SDL_opengl.h	2717;"	d
GL_CONVOLUTION_BORDER_MODE	/usr/include/SDL2/SDL_opengl.h	196;"	d
GL_CONVOLUTION_BORDER_MODE_EXT	/usr/include/SDL2/SDL_opengl.h	2328;"	d
GL_CONVOLUTION_FILTER_BIAS	/usr/include/SDL2/SDL_opengl.h	198;"	d
GL_CONVOLUTION_FILTER_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	2330;"	d
GL_CONVOLUTION_FILTER_SCALE	/usr/include/SDL2/SDL_opengl.h	197;"	d
GL_CONVOLUTION_FILTER_SCALE_EXT	/usr/include/SDL2/SDL_opengl.h	2329;"	d
GL_CONVOLUTION_FORMAT	/usr/include/SDL2/SDL_opengl.h	200;"	d
GL_CONVOLUTION_FORMAT_EXT	/usr/include/SDL2/SDL_opengl.h	2332;"	d
GL_CONVOLUTION_HEIGHT	/usr/include/SDL2/SDL_opengl.h	202;"	d
GL_CONVOLUTION_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	2334;"	d
GL_CONVOLUTION_HINT_SGIX	/usr/include/SDL2/SDL_opengl.h	3402;"	d
GL_CONVOLUTION_WIDTH	/usr/include/SDL2/SDL_opengl.h	201;"	d
GL_CONVOLUTION_WIDTH_EXT	/usr/include/SDL2/SDL_opengl.h	2333;"	d
GL_CON_0_ATI	/usr/include/SDL2/SDL_opengl.h	3743;"	d
GL_CON_10_ATI	/usr/include/SDL2/SDL_opengl.h	3753;"	d
GL_CON_11_ATI	/usr/include/SDL2/SDL_opengl.h	3754;"	d
GL_CON_12_ATI	/usr/include/SDL2/SDL_opengl.h	3755;"	d
GL_CON_13_ATI	/usr/include/SDL2/SDL_opengl.h	3756;"	d
GL_CON_14_ATI	/usr/include/SDL2/SDL_opengl.h	3757;"	d
GL_CON_15_ATI	/usr/include/SDL2/SDL_opengl.h	3758;"	d
GL_CON_16_ATI	/usr/include/SDL2/SDL_opengl.h	3759;"	d
GL_CON_17_ATI	/usr/include/SDL2/SDL_opengl.h	3760;"	d
GL_CON_18_ATI	/usr/include/SDL2/SDL_opengl.h	3761;"	d
GL_CON_19_ATI	/usr/include/SDL2/SDL_opengl.h	3762;"	d
GL_CON_1_ATI	/usr/include/SDL2/SDL_opengl.h	3744;"	d
GL_CON_20_ATI	/usr/include/SDL2/SDL_opengl.h	3763;"	d
GL_CON_21_ATI	/usr/include/SDL2/SDL_opengl.h	3764;"	d
GL_CON_22_ATI	/usr/include/SDL2/SDL_opengl.h	3765;"	d
GL_CON_23_ATI	/usr/include/SDL2/SDL_opengl.h	3766;"	d
GL_CON_24_ATI	/usr/include/SDL2/SDL_opengl.h	3767;"	d
GL_CON_25_ATI	/usr/include/SDL2/SDL_opengl.h	3768;"	d
GL_CON_26_ATI	/usr/include/SDL2/SDL_opengl.h	3769;"	d
GL_CON_27_ATI	/usr/include/SDL2/SDL_opengl.h	3770;"	d
GL_CON_28_ATI	/usr/include/SDL2/SDL_opengl.h	3771;"	d
GL_CON_29_ATI	/usr/include/SDL2/SDL_opengl.h	3772;"	d
GL_CON_2_ATI	/usr/include/SDL2/SDL_opengl.h	3745;"	d
GL_CON_30_ATI	/usr/include/SDL2/SDL_opengl.h	3773;"	d
GL_CON_31_ATI	/usr/include/SDL2/SDL_opengl.h	3774;"	d
GL_CON_3_ATI	/usr/include/SDL2/SDL_opengl.h	3746;"	d
GL_CON_4_ATI	/usr/include/SDL2/SDL_opengl.h	3747;"	d
GL_CON_5_ATI	/usr/include/SDL2/SDL_opengl.h	3748;"	d
GL_CON_6_ATI	/usr/include/SDL2/SDL_opengl.h	3749;"	d
GL_CON_7_ATI	/usr/include/SDL2/SDL_opengl.h	3750;"	d
GL_CON_8_ATI	/usr/include/SDL2/SDL_opengl.h	3751;"	d
GL_CON_9_ATI	/usr/include/SDL2/SDL_opengl.h	3752;"	d
GL_COORD_REPLACE	/usr/include/SDL2/SDL_opengl.h	548;"	d
GL_COORD_REPLACE_ARB	/usr/include/SDL2/SDL_opengl.h	1547;"	d
GL_COORD_REPLACE_NV	/usr/include/SDL2/SDL_opengl.h	3997;"	d
GL_COPY_READ_BUFFER	/usr/include/SDL2/SDL_opengl.h	1846;"	d
GL_COPY_WRITE_BUFFER	/usr/include/SDL2/SDL_opengl.h	1847;"	d
GL_COUNTER_RANGE_AMD	/usr/include/SDL2/SDL_opengl.h	4715;"	d
GL_COUNTER_RANGE_AMD	/usr/include/SDL2/SDL_opengles2.h	1256;"	d
GL_COUNTER_TYPE_AMD	/usr/include/SDL2/SDL_opengl.h	4714;"	d
GL_COUNTER_TYPE_AMD	/usr/include/SDL2/SDL_opengles2.h	1255;"	d
GL_COVERAGE_ALL_FRAGMENTS_NV	/usr/include/SDL2/SDL_opengles2.h	1667;"	d
GL_COVERAGE_ATTACHMENT_NV	/usr/include/SDL2/SDL_opengles2.h	1664;"	d
GL_COVERAGE_AUTOMATIC_NV	/usr/include/SDL2/SDL_opengles2.h	1669;"	d
GL_COVERAGE_BUFFERS_NV	/usr/include/SDL2/SDL_opengles2.h	1665;"	d
GL_COVERAGE_BUFFER_BIT_NV	/usr/include/SDL2/SDL_opengles2.h	1670;"	d
GL_COVERAGE_COMPONENT4_NV	/usr/include/SDL2/SDL_opengles2.h	1663;"	d
GL_COVERAGE_COMPONENT_NV	/usr/include/SDL2/SDL_opengles2.h	1662;"	d
GL_COVERAGE_EDGE_FRAGMENTS_NV	/usr/include/SDL2/SDL_opengles2.h	1668;"	d
GL_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_opengl.h	5061;"	d
GL_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_opengles2.h	1666;"	d
GL_CPU_OPTIMIZED_QCOM	/usr/include/SDL2/SDL_opengles2.h	1765;"	d
GL_CUBIC_EXT	/usr/include/SDL2/SDL_opengl.h	2975;"	d
GL_CUBIC_HP	/usr/include/SDL2/SDL_opengl.h	2706;"	d
GL_CULL_FACE	/usr/include/SDL2/SDL_opengles2.h	500;"	d
GL_CULL_FACE_MODE	/usr/include/SDL2/SDL_opengles2.h	525;"	d
GL_CULL_FRAGMENT_NV	/usr/include/SDL2/SDL_opengl.h	3515;"	d
GL_CULL_MODES_NV	/usr/include/SDL2/SDL_opengl.h	3505;"	d
GL_CULL_VERTEX_EXT	/usr/include/SDL2/SDL_opengl.h	2846;"	d
GL_CULL_VERTEX_EYE_POSITION_EXT	/usr/include/SDL2/SDL_opengl.h	2847;"	d
GL_CULL_VERTEX_IBM	/usr/include/SDL2/SDL_opengl.h	3314;"	d
GL_CULL_VERTEX_OBJECT_POSITION_EXT	/usr/include/SDL2/SDL_opengl.h	2848;"	d
GL_CURRENT_ATTRIB_NV	/usr/include/SDL2/SDL_opengl.h	3584;"	d
GL_CURRENT_BINORMAL_EXT	/usr/include/SDL2/SDL_opengl.h	3033;"	d
GL_CURRENT_FOG_COORD	/usr/include/SDL2/SDL_opengl.h	448;"	d
GL_CURRENT_FOG_COORDINATE	/usr/include/SDL2/SDL_opengl.h	389;"	d
GL_CURRENT_FOG_COORDINATE_EXT	/usr/include/SDL2/SDL_opengl.h	3017;"	d
GL_CURRENT_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1356;"	d
GL_CURRENT_MATRIX_INDEX_ARB	/usr/include/SDL2/SDL_opengl.h	1278;"	d
GL_CURRENT_MATRIX_NV	/usr/include/SDL2/SDL_opengl.h	3603;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_ARB	/usr/include/SDL2/SDL_opengl.h	1355;"	d
GL_CURRENT_MATRIX_STACK_DEPTH_NV	/usr/include/SDL2/SDL_opengl.h	3602;"	d
GL_CURRENT_OCCLUSION_QUERY_ID_NV	/usr/include/SDL2/SDL_opengl.h	3990;"	d
GL_CURRENT_PALETTE_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1276;"	d
GL_CURRENT_PROGRAM	/usr/include/SDL2/SDL_opengl.h	536;"	d
GL_CURRENT_PROGRAM	/usr/include/SDL2/SDL_opengles2.h	632;"	d
GL_CURRENT_QUERY	/usr/include/SDL2/SDL_opengl.h	410;"	d
GL_CURRENT_QUERY_ARB	/usr/include/SDL2/SDL_opengl.h	1479;"	d
GL_CURRENT_QUERY_EXT	/usr/include/SDL2/SDL_opengles2.h	1480;"	d
GL_CURRENT_RASTER_NORMAL_SGIX	/usr/include/SDL2/SDL_opengl.h	2863;"	d
GL_CURRENT_RASTER_SECONDARY_COLOR	/usr/include/SDL2/SDL_opengl.h	572;"	d
GL_CURRENT_SECONDARY_COLOR	/usr/include/SDL2/SDL_opengl.h	395;"	d
GL_CURRENT_SECONDARY_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2997;"	d
GL_CURRENT_TANGENT_EXT	/usr/include/SDL2/SDL_opengl.h	3032;"	d
GL_CURRENT_TIME_NV	/usr/include/SDL2/SDL_opengl.h	4645;"	d
GL_CURRENT_VERTEX_ATTRIB	/usr/include/SDL2/SDL_opengl.h	468;"	d
GL_CURRENT_VERTEX_ATTRIB	/usr/include/SDL2/SDL_opengles2.h	481;"	d
GL_CURRENT_VERTEX_ATTRIB_ARB	/usr/include/SDL2/SDL_opengl.h	1350;"	d
GL_CURRENT_VERTEX_EXT	/usr/include/SDL2/SDL_opengl.h	3938;"	d
GL_CURRENT_VERTEX_WEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	3196;"	d
GL_CURRENT_WEIGHT_ARB	/usr/include/SDL2/SDL_opengl.h	1232;"	d
GL_CW	/usr/include/SDL2/SDL_opengles2.h	518;"	d
GL_DATA_BUFFER_AMD	/usr/include/SDL2/SDL_opengl.h	5066;"	d
GL_DEBUG_CALLBACK_FUNCTION	/usr/include/SDL2/SDL_opengles2.h	1165;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	/usr/include/SDL2/SDL_opengl.h	2184;"	d
GL_DEBUG_CALLBACK_USER_PARAM	/usr/include/SDL2/SDL_opengles2.h	1166;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	/usr/include/SDL2/SDL_opengl.h	2185;"	d
GL_DEBUG_CATEGORY_API_ERROR_AMD	/usr/include/SDL2/SDL_opengl.h	5079;"	d
GL_DEBUG_CATEGORY_APPLICATION_AMD	/usr/include/SDL2/SDL_opengl.h	5085;"	d
GL_DEBUG_CATEGORY_DEPRECATION_AMD	/usr/include/SDL2/SDL_opengl.h	5081;"	d
GL_DEBUG_CATEGORY_OTHER_AMD	/usr/include/SDL2/SDL_opengl.h	5086;"	d
GL_DEBUG_CATEGORY_PERFORMANCE_AMD	/usr/include/SDL2/SDL_opengl.h	5083;"	d
GL_DEBUG_CATEGORY_SHADER_COMPILER_AMD	/usr/include/SDL2/SDL_opengl.h	5084;"	d
GL_DEBUG_CATEGORY_UNDEFINED_BEHAVIOR_AMD	/usr/include/SDL2/SDL_opengl.h	5082;"	d
GL_DEBUG_CATEGORY_WINDOW_SYSTEM_AMD	/usr/include/SDL2/SDL_opengl.h	5080;"	d
GL_DEBUG_GROUP_STACK_DEPTH	/usr/include/SDL2/SDL_opengles2.h	1184;"	d
GL_DEBUG_LOGGED_MESSAGES	/usr/include/SDL2/SDL_opengles2.h	1195;"	d
GL_DEBUG_LOGGED_MESSAGES_AMD	/usr/include/SDL2/SDL_opengl.h	5075;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	/usr/include/SDL2/SDL_opengl.h	2200;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	/usr/include/SDL2/SDL_opengles2.h	1164;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	2183;"	d
GL_DEBUG_OUTPUT	/usr/include/SDL2/SDL_opengles2.h	1199;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	/usr/include/SDL2/SDL_opengles2.h	1163;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	/usr/include/SDL2/SDL_opengl.h	2182;"	d
GL_DEBUG_SEVERITY_HIGH	/usr/include/SDL2/SDL_opengles2.h	1196;"	d
GL_DEBUG_SEVERITY_HIGH_AMD	/usr/include/SDL2/SDL_opengl.h	5076;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	/usr/include/SDL2/SDL_opengl.h	2201;"	d
GL_DEBUG_SEVERITY_LOW	/usr/include/SDL2/SDL_opengles2.h	1198;"	d
GL_DEBUG_SEVERITY_LOW_AMD	/usr/include/SDL2/SDL_opengl.h	5078;"	d
GL_DEBUG_SEVERITY_LOW_ARB	/usr/include/SDL2/SDL_opengl.h	2203;"	d
GL_DEBUG_SEVERITY_MEDIUM	/usr/include/SDL2/SDL_opengles2.h	1197;"	d
GL_DEBUG_SEVERITY_MEDIUM_AMD	/usr/include/SDL2/SDL_opengl.h	5077;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	/usr/include/SDL2/SDL_opengl.h	2202;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	/usr/include/SDL2/SDL_opengles2.h	1182;"	d
GL_DEBUG_SOURCE_API	/usr/include/SDL2/SDL_opengles2.h	1167;"	d
GL_DEBUG_SOURCE_API_ARB	/usr/include/SDL2/SDL_opengl.h	2186;"	d
GL_DEBUG_SOURCE_APPLICATION	/usr/include/SDL2/SDL_opengles2.h	1171;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	/usr/include/SDL2/SDL_opengl.h	2190;"	d
GL_DEBUG_SOURCE_OTHER	/usr/include/SDL2/SDL_opengles2.h	1172;"	d
GL_DEBUG_SOURCE_OTHER_ARB	/usr/include/SDL2/SDL_opengl.h	2191;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	/usr/include/SDL2/SDL_opengles2.h	1169;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	/usr/include/SDL2/SDL_opengl.h	2188;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	/usr/include/SDL2/SDL_opengles2.h	1170;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	/usr/include/SDL2/SDL_opengl.h	2189;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	/usr/include/SDL2/SDL_opengles2.h	1168;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	/usr/include/SDL2/SDL_opengl.h	2187;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	/usr/include/SDL2/SDL_opengles2.h	1174;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	/usr/include/SDL2/SDL_opengl.h	2193;"	d
GL_DEBUG_TYPE_ERROR	/usr/include/SDL2/SDL_opengles2.h	1173;"	d
GL_DEBUG_TYPE_ERROR_ARB	/usr/include/SDL2/SDL_opengl.h	2192;"	d
GL_DEBUG_TYPE_MARKER	/usr/include/SDL2/SDL_opengles2.h	1179;"	d
GL_DEBUG_TYPE_OTHER	/usr/include/SDL2/SDL_opengles2.h	1178;"	d
GL_DEBUG_TYPE_OTHER_ARB	/usr/include/SDL2/SDL_opengl.h	2197;"	d
GL_DEBUG_TYPE_PERFORMANCE	/usr/include/SDL2/SDL_opengles2.h	1177;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	/usr/include/SDL2/SDL_opengl.h	2196;"	d
GL_DEBUG_TYPE_POP_GROUP	/usr/include/SDL2/SDL_opengles2.h	1181;"	d
GL_DEBUG_TYPE_PORTABILITY	/usr/include/SDL2/SDL_opengles2.h	1176;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	/usr/include/SDL2/SDL_opengl.h	2195;"	d
GL_DEBUG_TYPE_PUSH_GROUP	/usr/include/SDL2/SDL_opengles2.h	1180;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	/usr/include/SDL2/SDL_opengles2.h	1175;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	/usr/include/SDL2/SDL_opengl.h	2194;"	d
GL_DECR	/usr/include/SDL2/SDL_opengles2.h	649;"	d
GL_DECR_WRAP	/usr/include/SDL2/SDL_opengl.h	374;"	d
GL_DECR_WRAP	/usr/include/SDL2/SDL_opengles2.h	652;"	d
GL_DECR_WRAP_EXT	/usr/include/SDL2/SDL_opengl.h	3140;"	d
GL_DEFORMATIONS_MASK_SGIX	/usr/include/SDL2/SDL_opengl.h	2666;"	d
GL_DELETE_STATUS	/usr/include/SDL2/SDL_opengl.h	523;"	d
GL_DELETE_STATUS	/usr/include/SDL2/SDL_opengles2.h	623;"	d
GL_DEPENDENT_AR_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	3517;"	d
GL_DEPENDENT_GB_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	3518;"	d
GL_DEPENDENT_HILO_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	4010;"	d
GL_DEPENDENT_RGB_TEXTURE_3D_NV	/usr/include/SDL2/SDL_opengl.h	4011;"	d
GL_DEPENDENT_RGB_TEXTURE_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl.h	4012;"	d
GL_DEPTH24_STENCIL8	/usr/include/SDL2/SDL_opengl.h	1647;"	d
GL_DEPTH24_STENCIL8_EXT	/usr/include/SDL2/SDL_opengl.h	4307;"	d
GL_DEPTH24_STENCIL8_OES	/usr/include/SDL2/SDL_opengles2.h	1069;"	d
GL_DEPTH32F_STENCIL8	/usr/include/SDL2/SDL_opengl.h	1624;"	d
GL_DEPTH32F_STENCIL8_NV	/usr/include/SDL2/SDL_opengl.h	4505;"	d
GL_DEPTH_ATTACHMENT	/usr/include/SDL2/SDL_opengl.h	1690;"	d
GL_DEPTH_ATTACHMENT	/usr/include/SDL2/SDL_opengles2.h	806;"	d
GL_DEPTH_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl.h	4282;"	d
GL_DEPTH_BITS	/usr/include/SDL2/SDL_opengles2.h	560;"	d
GL_DEPTH_BOUNDS_EXT	/usr/include/SDL2/SDL_opengl.h	4196;"	d
GL_DEPTH_BOUNDS_TEST_EXT	/usr/include/SDL2/SDL_opengl.h	4195;"	d
GL_DEPTH_BUFFER	/usr/include/SDL2/SDL_opengl.h	596;"	d
GL_DEPTH_BUFFER_BIT	/usr/include/SDL2/SDL_opengles2.h	399;"	d
GL_DEPTH_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2.h	1811;"	d
GL_DEPTH_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2.h	1812;"	d
GL_DEPTH_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2.h	1813;"	d
GL_DEPTH_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2.h	1814;"	d
GL_DEPTH_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2.h	1815;"	d
GL_DEPTH_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2.h	1816;"	d
GL_DEPTH_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2.h	1817;"	d
GL_DEPTH_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2.h	1818;"	d
GL_DEPTH_BUFFER_FLOAT_MODE_NV	/usr/include/SDL2/SDL_opengl.h	4507;"	d
GL_DEPTH_CLAMP	/usr/include/SDL2/SDL_opengl.h	1854;"	d
GL_DEPTH_CLAMP_NV	/usr/include/SDL2/SDL_opengl.h	3985;"	d
GL_DEPTH_CLEAR_VALUE	/usr/include/SDL2/SDL_opengles2.h	529;"	d
GL_DEPTH_COMPONENT	/usr/include/SDL2/SDL_opengles2.h	599;"	d
GL_DEPTH_COMPONENT16	/usr/include/SDL2/SDL_opengl.h	367;"	d
GL_DEPTH_COMPONENT16	/usr/include/SDL2/SDL_opengles2.h	787;"	d
GL_DEPTH_COMPONENT16_ARB	/usr/include/SDL2/SDL_opengl.h	1323;"	d
GL_DEPTH_COMPONENT16_NONLINEAR_NV	/usr/include/SDL2/SDL_opengles2.h	1675;"	d
GL_DEPTH_COMPONENT16_OES	/usr/include/SDL2/SDL_opengles2.h	1075;"	d
GL_DEPTH_COMPONENT16_SGIX	/usr/include/SDL2/SDL_opengl.h	2679;"	d
GL_DEPTH_COMPONENT24	/usr/include/SDL2/SDL_opengl.h	368;"	d
GL_DEPTH_COMPONENT24_ARB	/usr/include/SDL2/SDL_opengl.h	1324;"	d
GL_DEPTH_COMPONENT24_OES	/usr/include/SDL2/SDL_opengles2.h	1020;"	d
GL_DEPTH_COMPONENT24_SGIX	/usr/include/SDL2/SDL_opengl.h	2680;"	d
GL_DEPTH_COMPONENT32	/usr/include/SDL2/SDL_opengl.h	369;"	d
GL_DEPTH_COMPONENT32F	/usr/include/SDL2/SDL_opengl.h	1623;"	d
GL_DEPTH_COMPONENT32F_NV	/usr/include/SDL2/SDL_opengl.h	4504;"	d
GL_DEPTH_COMPONENT32_ARB	/usr/include/SDL2/SDL_opengl.h	1325;"	d
GL_DEPTH_COMPONENT32_OES	/usr/include/SDL2/SDL_opengles2.h	1025;"	d
GL_DEPTH_COMPONENT32_SGIX	/usr/include/SDL2/SDL_opengl.h	2681;"	d
GL_DEPTH_EXT	/usr/include/SDL2/SDL_opengles2.h	1441;"	d
GL_DEPTH_FUNC	/usr/include/SDL2/SDL_opengles2.h	530;"	d
GL_DEPTH_PASS_INSTRUMENT_COUNTERS_SGIX	/usr/include/SDL2/SDL_opengl.h	3357;"	d
GL_DEPTH_PASS_INSTRUMENT_MAX_SGIX	/usr/include/SDL2/SDL_opengl.h	3358;"	d
GL_DEPTH_PASS_INSTRUMENT_SGIX	/usr/include/SDL2/SDL_opengl.h	3356;"	d
GL_DEPTH_RANGE	/usr/include/SDL2/SDL_opengles2.h	527;"	d
GL_DEPTH_STENCIL	/usr/include/SDL2/SDL_opengl.h	1645;"	d
GL_DEPTH_STENCIL_ATTACHMENT	/usr/include/SDL2/SDL_opengl.h	1643;"	d
GL_DEPTH_STENCIL_EXT	/usr/include/SDL2/SDL_opengl.h	4305;"	d
GL_DEPTH_STENCIL_NV	/usr/include/SDL2/SDL_opengl.h	3476;"	d
GL_DEPTH_STENCIL_OES	/usr/include/SDL2/SDL_opengles2.h	1067;"	d
GL_DEPTH_STENCIL_TO_BGRA_NV	/usr/include/SDL2/SDL_opengl.h	3695;"	d
GL_DEPTH_STENCIL_TO_RGBA_NV	/usr/include/SDL2/SDL_opengl.h	3694;"	d
GL_DEPTH_TEST	/usr/include/SDL2/SDL_opengles2.h	504;"	d
GL_DEPTH_TEXTURE_MODE	/usr/include/SDL2/SDL_opengl.h	402;"	d
GL_DEPTH_TEXTURE_MODE_ARB	/usr/include/SDL2/SDL_opengl.h	1327;"	d
GL_DEPTH_WRITEMASK	/usr/include/SDL2/SDL_opengles2.h	528;"	d
GL_DETAIL_TEXTURE_2D_BINDING_SGIS	/usr/include/SDL2/SDL_opengl.h	2427;"	d
GL_DETAIL_TEXTURE_2D_SGIS	/usr/include/SDL2/SDL_opengl.h	2426;"	d
GL_DETAIL_TEXTURE_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl.h	2433;"	d
GL_DETAIL_TEXTURE_LEVEL_SGIS	/usr/include/SDL2/SDL_opengl.h	2431;"	d
GL_DETAIL_TEXTURE_MODE_SGIS	/usr/include/SDL2/SDL_opengl.h	2432;"	d
GL_DISCARD_ATI	/usr/include/SDL2/SDL_opengl.h	3832;"	d
GL_DISCARD_NV	/usr/include/SDL2/SDL_opengl.h	3232;"	d
GL_DISCRETE_AMD	/usr/include/SDL2/SDL_opengl.h	4732;"	d
GL_DISTANCE_ATTENUATION_EXT	/usr/include/SDL2/SDL_opengl.h	2627;"	d
GL_DISTANCE_ATTENUATION_SGIS	/usr/include/SDL2/SDL_opengl.h	2634;"	d
GL_DITHER	/usr/include/SDL2/SDL_opengles2.h	502;"	d
GL_DMP_shader_binary	/usr/include/SDL2/SDL_opengles2.h	2538;"	d
GL_DONT_CARE	/usr/include/SDL2/SDL_opengles2.h	581;"	d
GL_DOT2_ADD_ATI	/usr/include/SDL2/SDL_opengl.h	3785;"	d
GL_DOT3_ATI	/usr/include/SDL2/SDL_opengl.h	3779;"	d
GL_DOT3_RGB	/usr/include/SDL2/SDL_opengl.h	357;"	d
GL_DOT3_RGBA	/usr/include/SDL2/SDL_opengl.h	358;"	d
GL_DOT3_RGBA_ARB	/usr/include/SDL2/SDL_opengl.h	1315;"	d
GL_DOT3_RGBA_EXT	/usr/include/SDL2/SDL_opengl.h	3430;"	d
GL_DOT3_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1314;"	d
GL_DOT3_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3429;"	d
GL_DOT4_ATI	/usr/include/SDL2/SDL_opengl.h	3780;"	d
GL_DOT_PRODUCT_AFFINE_DEPTH_REPLACE_NV	/usr/include/SDL2/SDL_opengl.h	4015;"	d
GL_DOT_PRODUCT_CONST_EYE_REFLECT_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3525;"	d
GL_DOT_PRODUCT_DEPTH_REPLACE_NV	/usr/include/SDL2/SDL_opengl.h	3520;"	d
GL_DOT_PRODUCT_DIFFUSE_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3523;"	d
GL_DOT_PRODUCT_NV	/usr/include/SDL2/SDL_opengl.h	3519;"	d
GL_DOT_PRODUCT_PASS_THROUGH_NV	/usr/include/SDL2/SDL_opengl.h	4013;"	d
GL_DOT_PRODUCT_REFLECT_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3524;"	d
GL_DOT_PRODUCT_TEXTURE_1D_NV	/usr/include/SDL2/SDL_opengl.h	4014;"	d
GL_DOT_PRODUCT_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	3521;"	d
GL_DOT_PRODUCT_TEXTURE_3D_NV	/usr/include/SDL2/SDL_opengl.h	3571;"	d
GL_DOT_PRODUCT_TEXTURE_CUBE_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3522;"	d
GL_DOT_PRODUCT_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	3497;"	d
GL_DOUBLE_MAT2	/usr/include/SDL2/SDL_opengl.h	2022;"	d
GL_DOUBLE_MAT2_EXT	/usr/include/SDL2/SDL_opengl.h	4989;"	d
GL_DOUBLE_MAT2x3	/usr/include/SDL2/SDL_opengl.h	2025;"	d
GL_DOUBLE_MAT2x3_EXT	/usr/include/SDL2/SDL_opengl.h	4992;"	d
GL_DOUBLE_MAT2x4	/usr/include/SDL2/SDL_opengl.h	2026;"	d
GL_DOUBLE_MAT2x4_EXT	/usr/include/SDL2/SDL_opengl.h	4993;"	d
GL_DOUBLE_MAT3	/usr/include/SDL2/SDL_opengl.h	2023;"	d
GL_DOUBLE_MAT3_EXT	/usr/include/SDL2/SDL_opengl.h	4990;"	d
GL_DOUBLE_MAT3x2	/usr/include/SDL2/SDL_opengl.h	2027;"	d
GL_DOUBLE_MAT3x2_EXT	/usr/include/SDL2/SDL_opengl.h	4994;"	d
GL_DOUBLE_MAT3x4	/usr/include/SDL2/SDL_opengl.h	2028;"	d
GL_DOUBLE_MAT3x4_EXT	/usr/include/SDL2/SDL_opengl.h	4995;"	d
GL_DOUBLE_MAT4	/usr/include/SDL2/SDL_opengl.h	2024;"	d
GL_DOUBLE_MAT4_EXT	/usr/include/SDL2/SDL_opengl.h	4991;"	d
GL_DOUBLE_MAT4x2	/usr/include/SDL2/SDL_opengl.h	2029;"	d
GL_DOUBLE_MAT4x2_EXT	/usr/include/SDL2/SDL_opengl.h	4996;"	d
GL_DOUBLE_MAT4x3	/usr/include/SDL2/SDL_opengl.h	2030;"	d
GL_DOUBLE_MAT4x3_EXT	/usr/include/SDL2/SDL_opengl.h	4997;"	d
GL_DOUBLE_VEC2	/usr/include/SDL2/SDL_opengl.h	2019;"	d
GL_DOUBLE_VEC2_EXT	/usr/include/SDL2/SDL_opengl.h	4986;"	d
GL_DOUBLE_VEC3	/usr/include/SDL2/SDL_opengl.h	2020;"	d
GL_DOUBLE_VEC3_EXT	/usr/include/SDL2/SDL_opengl.h	4987;"	d
GL_DOUBLE_VEC4	/usr/include/SDL2/SDL_opengl.h	2021;"	d
GL_DOUBLE_VEC4_EXT	/usr/include/SDL2/SDL_opengl.h	4988;"	d
GL_DRAW_BUFFER0	/usr/include/SDL2/SDL_opengl.h	476;"	d
GL_DRAW_BUFFER0_ARB	/usr/include/SDL2/SDL_opengl.h	1555;"	d
GL_DRAW_BUFFER0_ATI	/usr/include/SDL2/SDL_opengl.h	4080;"	d
GL_DRAW_BUFFER0_NV	/usr/include/SDL2/SDL_opengles2.h	1681;"	d
GL_DRAW_BUFFER1	/usr/include/SDL2/SDL_opengl.h	477;"	d
GL_DRAW_BUFFER10	/usr/include/SDL2/SDL_opengl.h	486;"	d
GL_DRAW_BUFFER10_ARB	/usr/include/SDL2/SDL_opengl.h	1565;"	d
GL_DRAW_BUFFER10_ATI	/usr/include/SDL2/SDL_opengl.h	4090;"	d
GL_DRAW_BUFFER10_NV	/usr/include/SDL2/SDL_opengles2.h	1691;"	d
GL_DRAW_BUFFER11	/usr/include/SDL2/SDL_opengl.h	487;"	d
GL_DRAW_BUFFER11_ARB	/usr/include/SDL2/SDL_opengl.h	1566;"	d
GL_DRAW_BUFFER11_ATI	/usr/include/SDL2/SDL_opengl.h	4091;"	d
GL_DRAW_BUFFER11_NV	/usr/include/SDL2/SDL_opengles2.h	1692;"	d
GL_DRAW_BUFFER12	/usr/include/SDL2/SDL_opengl.h	488;"	d
GL_DRAW_BUFFER12_ARB	/usr/include/SDL2/SDL_opengl.h	1567;"	d
GL_DRAW_BUFFER12_ATI	/usr/include/SDL2/SDL_opengl.h	4092;"	d
GL_DRAW_BUFFER12_NV	/usr/include/SDL2/SDL_opengles2.h	1693;"	d
GL_DRAW_BUFFER13	/usr/include/SDL2/SDL_opengl.h	489;"	d
GL_DRAW_BUFFER13_ARB	/usr/include/SDL2/SDL_opengl.h	1568;"	d
GL_DRAW_BUFFER13_ATI	/usr/include/SDL2/SDL_opengl.h	4093;"	d
GL_DRAW_BUFFER13_NV	/usr/include/SDL2/SDL_opengles2.h	1694;"	d
GL_DRAW_BUFFER14	/usr/include/SDL2/SDL_opengl.h	490;"	d
GL_DRAW_BUFFER14_ARB	/usr/include/SDL2/SDL_opengl.h	1569;"	d
GL_DRAW_BUFFER14_ATI	/usr/include/SDL2/SDL_opengl.h	4094;"	d
GL_DRAW_BUFFER14_NV	/usr/include/SDL2/SDL_opengles2.h	1695;"	d
GL_DRAW_BUFFER15	/usr/include/SDL2/SDL_opengl.h	491;"	d
GL_DRAW_BUFFER15_ARB	/usr/include/SDL2/SDL_opengl.h	1570;"	d
GL_DRAW_BUFFER15_ATI	/usr/include/SDL2/SDL_opengl.h	4095;"	d
GL_DRAW_BUFFER15_NV	/usr/include/SDL2/SDL_opengles2.h	1696;"	d
GL_DRAW_BUFFER1_ARB	/usr/include/SDL2/SDL_opengl.h	1556;"	d
GL_DRAW_BUFFER1_ATI	/usr/include/SDL2/SDL_opengl.h	4081;"	d
GL_DRAW_BUFFER1_NV	/usr/include/SDL2/SDL_opengles2.h	1682;"	d
GL_DRAW_BUFFER2	/usr/include/SDL2/SDL_opengl.h	478;"	d
GL_DRAW_BUFFER2_ARB	/usr/include/SDL2/SDL_opengl.h	1557;"	d
GL_DRAW_BUFFER2_ATI	/usr/include/SDL2/SDL_opengl.h	4082;"	d
GL_DRAW_BUFFER2_NV	/usr/include/SDL2/SDL_opengles2.h	1683;"	d
GL_DRAW_BUFFER3	/usr/include/SDL2/SDL_opengl.h	479;"	d
GL_DRAW_BUFFER3_ARB	/usr/include/SDL2/SDL_opengl.h	1558;"	d
GL_DRAW_BUFFER3_ATI	/usr/include/SDL2/SDL_opengl.h	4083;"	d
GL_DRAW_BUFFER3_NV	/usr/include/SDL2/SDL_opengles2.h	1684;"	d
GL_DRAW_BUFFER4	/usr/include/SDL2/SDL_opengl.h	480;"	d
GL_DRAW_BUFFER4_ARB	/usr/include/SDL2/SDL_opengl.h	1559;"	d
GL_DRAW_BUFFER4_ATI	/usr/include/SDL2/SDL_opengl.h	4084;"	d
GL_DRAW_BUFFER4_NV	/usr/include/SDL2/SDL_opengles2.h	1685;"	d
GL_DRAW_BUFFER5	/usr/include/SDL2/SDL_opengl.h	481;"	d
GL_DRAW_BUFFER5_ARB	/usr/include/SDL2/SDL_opengl.h	1560;"	d
GL_DRAW_BUFFER5_ATI	/usr/include/SDL2/SDL_opengl.h	4085;"	d
GL_DRAW_BUFFER5_NV	/usr/include/SDL2/SDL_opengles2.h	1686;"	d
GL_DRAW_BUFFER6	/usr/include/SDL2/SDL_opengl.h	482;"	d
GL_DRAW_BUFFER6_ARB	/usr/include/SDL2/SDL_opengl.h	1561;"	d
GL_DRAW_BUFFER6_ATI	/usr/include/SDL2/SDL_opengl.h	4086;"	d
GL_DRAW_BUFFER6_NV	/usr/include/SDL2/SDL_opengles2.h	1687;"	d
GL_DRAW_BUFFER7	/usr/include/SDL2/SDL_opengl.h	483;"	d
GL_DRAW_BUFFER7_ARB	/usr/include/SDL2/SDL_opengl.h	1562;"	d
GL_DRAW_BUFFER7_ATI	/usr/include/SDL2/SDL_opengl.h	4087;"	d
GL_DRAW_BUFFER7_NV	/usr/include/SDL2/SDL_opengles2.h	1688;"	d
GL_DRAW_BUFFER8	/usr/include/SDL2/SDL_opengl.h	484;"	d
GL_DRAW_BUFFER8_ARB	/usr/include/SDL2/SDL_opengl.h	1563;"	d
GL_DRAW_BUFFER8_ATI	/usr/include/SDL2/SDL_opengl.h	4088;"	d
GL_DRAW_BUFFER8_NV	/usr/include/SDL2/SDL_opengles2.h	1689;"	d
GL_DRAW_BUFFER9	/usr/include/SDL2/SDL_opengl.h	485;"	d
GL_DRAW_BUFFER9_ARB	/usr/include/SDL2/SDL_opengl.h	1564;"	d
GL_DRAW_BUFFER9_ATI	/usr/include/SDL2/SDL_opengl.h	4089;"	d
GL_DRAW_BUFFER9_NV	/usr/include/SDL2/SDL_opengles2.h	1690;"	d
GL_DRAW_BUFFER_EXT	/usr/include/SDL2/SDL_opengles2.h	1468;"	d
GL_DRAW_FRAMEBUFFER	/usr/include/SDL2/SDL_opengl.h	1659;"	d
GL_DRAW_FRAMEBUFFER_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1276;"	d
GL_DRAW_FRAMEBUFFER_APPLE	/usr/include/SDL2/SDL_opengles2.h	1332;"	d
GL_DRAW_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	1656;"	d
GL_DRAW_FRAMEBUFFER_BINDING_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1277;"	d
GL_DRAW_FRAMEBUFFER_BINDING_APPLE	/usr/include/SDL2/SDL_opengles2.h	1333;"	d
GL_DRAW_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4338;"	d
GL_DRAW_FRAMEBUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4337;"	d
GL_DRAW_INDIRECT_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4909;"	d
GL_DRAW_INDIRECT_BUFFER	/usr/include/SDL2/SDL_opengl.h	2004;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	2005;"	d
GL_DRAW_INDIRECT_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4910;"	d
GL_DRAW_INDIRECT_UNIFIED_NV	/usr/include/SDL2/SDL_opengl.h	4908;"	d
GL_DRAW_PIXELS_APPLE	/usr/include/SDL2/SDL_opengl.h	4047;"	d
GL_DSDT8_MAG8_INTENSITY8_NV	/usr/include/SDL2/SDL_opengl.h	3547;"	d
GL_DSDT8_MAG8_NV	/usr/include/SDL2/SDL_opengl.h	3546;"	d
GL_DSDT8_NV	/usr/include/SDL2/SDL_opengl.h	3545;"	d
GL_DSDT_MAG_INTENSITY_NV	/usr/include/SDL2/SDL_opengl.h	3501;"	d
GL_DSDT_MAG_NV	/usr/include/SDL2/SDL_opengl.h	3528;"	d
GL_DSDT_MAG_VIB_NV	/usr/include/SDL2/SDL_opengl.h	3529;"	d
GL_DSDT_NV	/usr/include/SDL2/SDL_opengl.h	3527;"	d
GL_DST_ALPHA	/usr/include/SDL2/SDL_opengles2.h	433;"	d
GL_DST_COLOR	/usr/include/SDL2/SDL_opengles2.h	439;"	d
GL_DS_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3558;"	d
GL_DS_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3552;"	d
GL_DT_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3559;"	d
GL_DT_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3553;"	d
GL_DU8DV8_ATI	/usr/include/SDL2/SDL_opengl.h	3704;"	d
GL_DUAL_ALPHA12_SGIS	/usr/include/SDL2/SDL_opengl.h	2587;"	d
GL_DUAL_ALPHA16_SGIS	/usr/include/SDL2/SDL_opengl.h	2588;"	d
GL_DUAL_ALPHA4_SGIS	/usr/include/SDL2/SDL_opengl.h	2585;"	d
GL_DUAL_ALPHA8_SGIS	/usr/include/SDL2/SDL_opengl.h	2586;"	d
GL_DUAL_INTENSITY12_SGIS	/usr/include/SDL2/SDL_opengl.h	2595;"	d
GL_DUAL_INTENSITY16_SGIS	/usr/include/SDL2/SDL_opengl.h	2596;"	d
GL_DUAL_INTENSITY4_SGIS	/usr/include/SDL2/SDL_opengl.h	2593;"	d
GL_DUAL_INTENSITY8_SGIS	/usr/include/SDL2/SDL_opengl.h	2594;"	d
GL_DUAL_LUMINANCE12_SGIS	/usr/include/SDL2/SDL_opengl.h	2591;"	d
GL_DUAL_LUMINANCE16_SGIS	/usr/include/SDL2/SDL_opengl.h	2592;"	d
GL_DUAL_LUMINANCE4_SGIS	/usr/include/SDL2/SDL_opengl.h	2589;"	d
GL_DUAL_LUMINANCE8_SGIS	/usr/include/SDL2/SDL_opengl.h	2590;"	d
GL_DUAL_LUMINANCE_ALPHA4_SGIS	/usr/include/SDL2/SDL_opengl.h	2597;"	d
GL_DUAL_LUMINANCE_ALPHA8_SGIS	/usr/include/SDL2/SDL_opengl.h	2598;"	d
GL_DUAL_TEXTURE_SELECT_SGIS	/usr/include/SDL2/SDL_opengl.h	2605;"	d
GL_DUDV_ATI	/usr/include/SDL2/SDL_opengl.h	3703;"	d
GL_DYNAMIC_ATI	/usr/include/SDL2/SDL_opengl.h	3830;"	d
GL_DYNAMIC_COPY	/usr/include/SDL2/SDL_opengl.h	432;"	d
GL_DYNAMIC_COPY_ARB	/usr/include/SDL2/SDL_opengl.h	1474;"	d
GL_DYNAMIC_DRAW	/usr/include/SDL2/SDL_opengl.h	430;"	d
GL_DYNAMIC_DRAW	/usr/include/SDL2/SDL_opengles2.h	476;"	d
GL_DYNAMIC_DRAW_ARB	/usr/include/SDL2/SDL_opengl.h	1472;"	d
GL_DYNAMIC_READ	/usr/include/SDL2/SDL_opengl.h	431;"	d
GL_DYNAMIC_READ_ARB	/usr/include/SDL2/SDL_opengl.h	1473;"	d
GL_EDGEFLAG_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2737;"	d
GL_EDGE_FLAG_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4894;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	442;"	d
GL_EDGE_FLAG_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1455;"	d
GL_EDGE_FLAG_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2507;"	d
GL_EDGE_FLAG_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	2487;"	d
GL_EDGE_FLAG_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4904;"	d
GL_EDGE_FLAG_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3326;"	d
GL_EDGE_FLAG_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3334;"	d
GL_EDGE_FLAG_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	2513;"	d
GL_EDGE_FLAG_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	2506;"	d
GL_EIGHTH_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3809;"	d
GL_ELEMENT_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4897;"	d
GL_ELEMENT_ARRAY_APPLE	/usr/include/SDL2/SDL_opengl.h	4041;"	d
GL_ELEMENT_ARRAY_ATI	/usr/include/SDL2/SDL_opengl.h	3966;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4970;"	d
GL_ELEMENT_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengl.h	414;"	d
GL_ELEMENT_ARRAY_BUFFER	/usr/include/SDL2/SDL_opengles2.h	470;"	d
GL_ELEMENT_ARRAY_BUFFER_ARB	/usr/include/SDL2/SDL_opengl.h	1447;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	416;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengles2.h	472;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1449;"	d
GL_ELEMENT_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4907;"	d
GL_ELEMENT_ARRAY_POINTER_APPLE	/usr/include/SDL2/SDL_opengl.h	4043;"	d
GL_ELEMENT_ARRAY_POINTER_ATI	/usr/include/SDL2/SDL_opengl.h	3968;"	d
GL_ELEMENT_ARRAY_TYPE_APPLE	/usr/include/SDL2/SDL_opengl.h	4042;"	d
GL_ELEMENT_ARRAY_TYPE_ATI	/usr/include/SDL2/SDL_opengl.h	3967;"	d
GL_ELEMENT_ARRAY_UNIFIED_NV	/usr/include/SDL2/SDL_opengl.h	4887;"	d
GL_EMBOSS_CONSTANT_NV	/usr/include/SDL2/SDL_opengl.h	3285;"	d
GL_EMBOSS_LIGHT_NV	/usr/include/SDL2/SDL_opengl.h	3284;"	d
GL_EMBOSS_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3286;"	d
GL_EQUAL	/usr/include/SDL2/SDL_opengles2.h	637;"	d
GL_ES_VERSION_2_0	/usr/include/SDL2/SDL_opengles2.h	396;"	d
GL_ETC1_RGB8_OES	/usr/include/SDL2/SDL_opengles2.h	1001;"	d
GL_EVAL_2D_NV	/usr/include/SDL2/SDL_opengl.h	3449;"	d
GL_EVAL_FRACTIONAL_TESSELLATION_NV	/usr/include/SDL2/SDL_opengl.h	3454;"	d
GL_EVAL_TRIANGULAR_2D_NV	/usr/include/SDL2/SDL_opengl.h	3450;"	d
GL_EVAL_VERTEX_ATTRIB0_NV	/usr/include/SDL2/SDL_opengl.h	3455;"	d
GL_EVAL_VERTEX_ATTRIB10_NV	/usr/include/SDL2/SDL_opengl.h	3465;"	d
GL_EVAL_VERTEX_ATTRIB11_NV	/usr/include/SDL2/SDL_opengl.h	3466;"	d
GL_EVAL_VERTEX_ATTRIB12_NV	/usr/include/SDL2/SDL_opengl.h	3467;"	d
GL_EVAL_VERTEX_ATTRIB13_NV	/usr/include/SDL2/SDL_opengl.h	3468;"	d
GL_EVAL_VERTEX_ATTRIB14_NV	/usr/include/SDL2/SDL_opengl.h	3469;"	d
GL_EVAL_VERTEX_ATTRIB15_NV	/usr/include/SDL2/SDL_opengl.h	3470;"	d
GL_EVAL_VERTEX_ATTRIB1_NV	/usr/include/SDL2/SDL_opengl.h	3456;"	d
GL_EVAL_VERTEX_ATTRIB2_NV	/usr/include/SDL2/SDL_opengl.h	3457;"	d
GL_EVAL_VERTEX_ATTRIB3_NV	/usr/include/SDL2/SDL_opengl.h	3458;"	d
GL_EVAL_VERTEX_ATTRIB4_NV	/usr/include/SDL2/SDL_opengl.h	3459;"	d
GL_EVAL_VERTEX_ATTRIB5_NV	/usr/include/SDL2/SDL_opengl.h	3460;"	d
GL_EVAL_VERTEX_ATTRIB6_NV	/usr/include/SDL2/SDL_opengl.h	3461;"	d
GL_EVAL_VERTEX_ATTRIB7_NV	/usr/include/SDL2/SDL_opengl.h	3462;"	d
GL_EVAL_VERTEX_ATTRIB8_NV	/usr/include/SDL2/SDL_opengl.h	3463;"	d
GL_EVAL_VERTEX_ATTRIB9_NV	/usr/include/SDL2/SDL_opengl.h	3464;"	d
GL_EXPAND_NEGATE_NV	/usr/include/SDL2/SDL_opengl.h	3238;"	d
GL_EXPAND_NORMAL_NV	/usr/include/SDL2/SDL_opengl.h	3237;"	d
GL_EXTENSIONS	/usr/include/SDL2/SDL_opengles2.h	658;"	d
GL_EXT_422_pixels	/usr/include/SDL2/SDL_opengl.h	8481;"	d
GL_EXT_abgr	/usr/include/SDL2/SDL_opengl.h	7413;"	d
GL_EXT_bgra	/usr/include/SDL2/SDL_opengl.h	8099;"	d
GL_EXT_bindable_uniform	/usr/include/SDL2/SDL_opengl.h	10071;"	d
GL_EXT_blend_color	/usr/include/SDL2/SDL_opengl.h	7417;"	d
GL_EXT_blend_equation_separate	/usr/include/SDL2/SDL_opengl.h	9651;"	d
GL_EXT_blend_func_separate	/usr/include/SDL2/SDL_opengl.h	8453;"	d
GL_EXT_blend_logic_op	/usr/include/SDL2/SDL_opengl.h	7729;"	d
GL_EXT_blend_minmax	/usr/include/SDL2/SDL_opengl.h	7717;"	d
GL_EXT_blend_minmax	/usr/include/SDL2/SDL_opengles2.h	2269;"	d
GL_EXT_blend_subtract	/usr/include/SDL2/SDL_opengl.h	7725;"	d
GL_EXT_clip_volume_hint	/usr/include/SDL2/SDL_opengl.h	7931;"	d
GL_EXT_cmyka	/usr/include/SDL2/SDL_opengl.h	7605;"	d
GL_EXT_color_buffer_half_float	/usr/include/SDL2/SDL_opengles2.h	2274;"	d
GL_EXT_color_subtable	/usr/include/SDL2/SDL_opengl.h	7895;"	d
GL_EXT_compiled_vertex_array	/usr/include/SDL2/SDL_opengl.h	7993;"	d
GL_EXT_convolution	/usr/include/SDL2/SDL_opengl.h	7509;"	d
GL_EXT_coordinate_frame	/usr/include/SDL2/SDL_opengl.h	8251;"	d
GL_EXT_copy_texture	/usr/include/SDL2/SDL_opengl.h	7467;"	d
GL_EXT_cull_vertex	/usr/include/SDL2/SDL_opengl.h	8003;"	d
GL_EXT_debug_label	/usr/include/SDL2/SDL_opengles2.h	2279;"	d
GL_EXT_debug_marker	/usr/include/SDL2/SDL_opengles2.h	2290;"	d
GL_EXT_depth_bounds_test	/usr/include/SDL2/SDL_opengl.h	9639;"	d
GL_EXT_direct_state_access	/usr/include/SDL2/SDL_opengl.h	10157;"	d
GL_EXT_discard_framebuffer	/usr/include/SDL2/SDL_opengles2.h	2303;"	d
GL_EXT_draw_buffers2	/usr/include/SDL2/SDL_opengl.h	10023;"	d
GL_EXT_draw_instanced	/usr/include/SDL2/SDL_opengl.h	9941;"	d
GL_EXT_draw_range_elements	/usr/include/SDL2/SDL_opengl.h	8067;"	d
GL_EXT_fog_coord	/usr/include/SDL2/SDL_opengl.h	8231;"	d
GL_EXT_framebuffer_blit	/usr/include/SDL2/SDL_opengl.h	9751;"	d
GL_EXT_framebuffer_multisample	/usr/include/SDL2/SDL_opengl.h	9759;"	d
GL_EXT_framebuffer_object	/usr/include/SDL2/SDL_opengl.h	9687;"	d
GL_EXT_framebuffer_sRGB	/usr/include/SDL2/SDL_opengl.h	10003;"	d
GL_EXT_geometry_shader4	/usr/include/SDL2/SDL_opengl.h	9853;"	d
GL_EXT_gpu_program_parameters	/usr/include/SDL2/SDL_opengl.h	9781;"	d
GL_EXT_gpu_shader4	/usr/include/SDL2/SDL_opengl.h	9913;"	d
GL_EXT_histogram	/usr/include/SDL2/SDL_opengl.h	7483;"	d
GL_EXT_index_array_formats	/usr/include/SDL2/SDL_opengl.h	7989;"	d
GL_EXT_index_func	/usr/include/SDL2/SDL_opengl.h	7981;"	d
GL_EXT_index_material	/usr/include/SDL2/SDL_opengl.h	7973;"	d
GL_EXT_index_texture	/usr/include/SDL2/SDL_opengl.h	7969;"	d
GL_EXT_light_texture	/usr/include/SDL2/SDL_opengl.h	8083;"	d
GL_EXT_map_buffer_range	/usr/include/SDL2/SDL_opengles2.h	2312;"	d
GL_EXT_misc_attribute	/usr/include/SDL2/SDL_opengl.h	7693;"	d
GL_EXT_multi_draw_arrays	/usr/include/SDL2/SDL_opengl.h	8221;"	d
GL_EXT_multi_draw_arrays	/usr/include/SDL2/SDL_opengles2.h	2346;"	d
GL_EXT_multisample	/usr/include/SDL2/SDL_opengl.h	8709;"	d
GL_EXT_multisampled_render_to_texture	/usr/include/SDL2/SDL_opengles2.h	2323;"	d
GL_EXT_multiview_draw_buffers	/usr/include/SDL2/SDL_opengles2.h	2334;"	d
GL_EXT_occlusion_query_boolean	/usr/include/SDL2/SDL_opengles2.h	2357;"	d
GL_EXT_packed_depth_stencil	/usr/include/SDL2/SDL_opengl.h	9735;"	d
GL_EXT_packed_float	/usr/include/SDL2/SDL_opengl.h	9951;"	d
GL_EXT_packed_pixels	/usr/include/SDL2/SDL_opengl.h	7647;"	d
GL_EXT_paletted_texture	/usr/include/SDL2/SDL_opengl.h	7917;"	d
GL_EXT_pixel_buffer_object	/usr/include/SDL2/SDL_opengl.h	9667;"	d
GL_EXT_pixel_transform	/usr/include/SDL2/SDL_opengl.h	8147;"	d
GL_EXT_pixel_transform_color_table	/usr/include/SDL2/SDL_opengl.h	8161;"	d
GL_EXT_point_parameters	/usr/include/SDL2/SDL_opengl.h	7763;"	d
GL_EXT_polygon_offset	/usr/include/SDL2/SDL_opengl.h	7425;"	d
GL_EXT_provoking_vertex	/usr/include/SDL2/SDL_opengl.h	10661;"	d
GL_EXT_read_format_bgra	/usr/include/SDL2/SDL_opengles2.h	2378;"	d
GL_EXT_rescale_normal	/usr/include/SDL2/SDL_opengl.h	7665;"	d
GL_EXT_robustness	/usr/include/SDL2/SDL_opengles2.h	2383;"	d
GL_EXT_sRGB	/usr/include/SDL2/SDL_opengles2.h	2480;"	d
GL_EXT_secondary_color	/usr/include/SDL2/SDL_opengl.h	8173;"	d
GL_EXT_separate_shader_objects	/usr/include/SDL2/SDL_opengl.h	10783;"	d
GL_EXT_separate_shader_objects	/usr/include/SDL2/SDL_opengles2.h	2398;"	d
GL_EXT_separate_specular_color	/usr/include/SDL2/SDL_opengl.h	8169;"	d
GL_EXT_shader_framebuffer_fetch	/usr/include/SDL2/SDL_opengles2.h	2465;"	d
GL_EXT_shader_image_load_store	/usr/include/SDL2/SDL_opengl.h	10883;"	d
GL_EXT_shader_texture_lod	/usr/include/SDL2/SDL_opengles2.h	2470;"	d
GL_EXT_shadow_funcs	/usr/include/SDL2/SDL_opengl.h	9339;"	d
GL_EXT_shadow_samplers	/usr/include/SDL2/SDL_opengles2.h	2475;"	d
GL_EXT_shared_texture_palette	/usr/include/SDL2/SDL_opengl.h	8165;"	d
GL_EXT_stencil_clear_tag	/usr/include/SDL2/SDL_opengl.h	9739;"	d
GL_EXT_stencil_two_side	/usr/include/SDL2/SDL_opengl.h	9343;"	d
GL_EXT_stencil_wrap	/usr/include/SDL2/SDL_opengl.h	8477;"	d
GL_EXT_subtexture	/usr/include/SDL2/SDL_opengl.h	7457;"	d
GL_EXT_texture	/usr/include/SDL2/SDL_opengl.h	7433;"	d
GL_EXT_texture3D	/usr/include/SDL2/SDL_opengl.h	7437;"	d
GL_EXT_texture_array	/usr/include/SDL2/SDL_opengl.h	9955;"	d
GL_EXT_texture_buffer_object	/usr/include/SDL2/SDL_opengl.h	9959;"	d
GL_EXT_texture_compression_dxt1	/usr/include/SDL2/SDL_opengles2.h	2485;"	d
GL_EXT_texture_compression_latc	/usr/include/SDL2/SDL_opengl.h	9967;"	d
GL_EXT_texture_compression_rgtc	/usr/include/SDL2/SDL_opengl.h	9971;"	d
GL_EXT_texture_env_add	/usr/include/SDL2/SDL_opengl.h	8493;"	d
GL_EXT_texture_env_combine	/usr/include/SDL2/SDL_opengl.h	8301;"	d
GL_EXT_texture_env_dot3	/usr/include/SDL2/SDL_opengl.h	8751;"	d
GL_EXT_texture_filter_anisotropic	/usr/include/SDL2/SDL_opengl.h	8501;"	d
GL_EXT_texture_filter_anisotropic	/usr/include/SDL2/SDL_opengles2.h	2490;"	d
GL_EXT_texture_format_BGRA8888	/usr/include/SDL2/SDL_opengles2.h	2495;"	d
GL_EXT_texture_integer	/usr/include/SDL2/SDL_opengl.h	10083;"	d
GL_EXT_texture_lod_bias	/usr/include/SDL2/SDL_opengl.h	8497;"	d
GL_EXT_texture_mirror_clamp	/usr/include/SDL2/SDL_opengl.h	9647;"	d
GL_EXT_texture_object	/usr/include/SDL2/SDL_opengl.h	7609;"	d
GL_EXT_texture_perturb_normal	/usr/include/SDL2/SDL_opengl.h	8213;"	d
GL_EXT_texture_rg	/usr/include/SDL2/SDL_opengles2.h	2500;"	d
GL_EXT_texture_sRGB	/usr/include/SDL2/SDL_opengl.h	9747;"	d
GL_EXT_texture_shared_exponent	/usr/include/SDL2/SDL_opengl.h	9975;"	d
GL_EXT_texture_snorm	/usr/include/SDL2/SDL_opengl.h	10669;"	d
GL_EXT_texture_storage	/usr/include/SDL2/SDL_opengles2.h	2505;"	d
GL_EXT_texture_swizzle	/usr/include/SDL2/SDL_opengl.h	10579;"	d
GL_EXT_texture_type_2_10_10_10_REV	/usr/include/SDL2/SDL_opengles2.h	2524;"	d
GL_EXT_timer_query	/usr/include/SDL2/SDL_opengl.h	9771;"	d
GL_EXT_transform_feedback	/usr/include/SDL2/SDL_opengl.h	10137;"	d
GL_EXT_unpack_subimage	/usr/include/SDL2/SDL_opengles2.h	2529;"	d
GL_EXT_vertex_array	/usr/include/SDL2/SDL_opengl.h	7669;"	d
GL_EXT_vertex_array_bgra	/usr/include/SDL2/SDL_opengl.h	10575;"	d
GL_EXT_vertex_attrib_64bit	/usr/include/SDL2/SDL_opengl.h	10893;"	d
GL_EXT_vertex_shader	/usr/include/SDL2/SDL_opengl.h	9083;"	d
GL_EXT_vertex_weighting	/usr/include/SDL2/SDL_opengl.h	8505;"	d
GL_EYE_DISTANCE_TO_LINE_SGIS	/usr/include/SDL2/SDL_opengl.h	3416;"	d
GL_EYE_DISTANCE_TO_POINT_SGIS	/usr/include/SDL2/SDL_opengl.h	3414;"	d
GL_EYE_LINE_SGIS	/usr/include/SDL2/SDL_opengl.h	3420;"	d
GL_EYE_PLANE_ABSOLUTE_NV	/usr/include/SDL2/SDL_opengl.h	3279;"	d
GL_EYE_POINT_SGIS	/usr/include/SDL2/SDL_opengl.h	3418;"	d
GL_EYE_RADIAL_NV	/usr/include/SDL2/SDL_opengl.h	3278;"	d
GL_E_TIMES_F_NV	/usr/include/SDL2/SDL_opengl.h	3233;"	d
GL_FAILURE_NV	/usr/include/SDL2/SDL_opengl.h	4854;"	d
GL_FALSE	/usr/include/SDL2/SDL_opengles2.h	404;"	d
GL_FASTEST	/usr/include/SDL2/SDL_opengles2.h	582;"	d
GL_FENCE_APPLE	/usr/include/SDL2/SDL_opengl.h	4048;"	d
GL_FENCE_CONDITION_NV	/usr/include/SDL2/SDL_opengl.h	3441;"	d
GL_FENCE_CONDITION_NV	/usr/include/SDL2/SDL_opengles2.h	1725;"	d
GL_FENCE_STATUS_NV	/usr/include/SDL2/SDL_opengl.h	3440;"	d
GL_FENCE_STATUS_NV	/usr/include/SDL2/SDL_opengles2.h	1724;"	d
GL_FIELDS_NV	/usr/include/SDL2/SDL_opengl.h	4644;"	d
GL_FIELD_LOWER_NV	/usr/include/SDL2/SDL_opengl.h	4841;"	d
GL_FIELD_UPPER_NV	/usr/include/SDL2/SDL_opengl.h	4840;"	d
GL_FILTER4_SGIS	/usr/include/SDL2/SDL_opengl.h	2297;"	d
GL_FIRST_VERTEX_CONVENTION	/usr/include/SDL2/SDL_opengl.h	1865;"	d
GL_FIRST_VERTEX_CONVENTION_EXT	/usr/include/SDL2/SDL_opengl.h	4738;"	d
GL_FIXED	/usr/include/SDL2/SDL_opengl.h	2106;"	d
GL_FIXED	/usr/include/SDL2/SDL_opengles2.h	596;"	d
GL_FIXED_ONLY	/usr/include/SDL2/SDL_opengl.h	610;"	d
GL_FIXED_ONLY_ARB	/usr/include/SDL2/SDL_opengl.h	1585;"	d
GL_FJ_shader_binary_GCCSO	/usr/include/SDL2/SDL_opengles2.h	2547;"	d
GL_FLOAT	/usr/include/SDL2/SDL_opengles2.h	595;"	d
GL_FLOAT16_NV	/usr/include/SDL2/SDL_opengl.h	5034;"	d
GL_FLOAT16_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5035;"	d
GL_FLOAT16_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5036;"	d
GL_FLOAT16_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5037;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	/usr/include/SDL2/SDL_opengl.h	1625;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV_NV	/usr/include/SDL2/SDL_opengl.h	4506;"	d
GL_FLOAT_CLEAR_COLOR_VALUE_NV	/usr/include/SDL2/SDL_opengl.h	4138;"	d
GL_FLOAT_MAT2	/usr/include/SDL2/SDL_opengl.h	514;"	d
GL_FLOAT_MAT2	/usr/include/SDL2/SDL_opengles2.h	743;"	d
GL_FLOAT_MAT2_ARB	/usr/include/SDL2/SDL_opengl.h	1500;"	d
GL_FLOAT_MAT2x3	/usr/include/SDL2/SDL_opengl.h	557;"	d
GL_FLOAT_MAT2x4	/usr/include/SDL2/SDL_opengl.h	558;"	d
GL_FLOAT_MAT3	/usr/include/SDL2/SDL_opengl.h	515;"	d
GL_FLOAT_MAT3	/usr/include/SDL2/SDL_opengles2.h	744;"	d
GL_FLOAT_MAT3_ARB	/usr/include/SDL2/SDL_opengl.h	1501;"	d
GL_FLOAT_MAT3x2	/usr/include/SDL2/SDL_opengl.h	559;"	d
GL_FLOAT_MAT3x4	/usr/include/SDL2/SDL_opengl.h	560;"	d
GL_FLOAT_MAT4	/usr/include/SDL2/SDL_opengl.h	516;"	d
GL_FLOAT_MAT4	/usr/include/SDL2/SDL_opengles2.h	745;"	d
GL_FLOAT_MAT4_ARB	/usr/include/SDL2/SDL_opengl.h	1502;"	d
GL_FLOAT_MAT4x2	/usr/include/SDL2/SDL_opengl.h	561;"	d
GL_FLOAT_MAT4x3	/usr/include/SDL2/SDL_opengl.h	562;"	d
GL_FLOAT_R16_NV	/usr/include/SDL2/SDL_opengl.h	4129;"	d
GL_FLOAT_R32_NV	/usr/include/SDL2/SDL_opengl.h	4130;"	d
GL_FLOAT_RG16_NV	/usr/include/SDL2/SDL_opengl.h	4131;"	d
GL_FLOAT_RG32_NV	/usr/include/SDL2/SDL_opengl.h	4132;"	d
GL_FLOAT_RGB16_NV	/usr/include/SDL2/SDL_opengl.h	4133;"	d
GL_FLOAT_RGB32_NV	/usr/include/SDL2/SDL_opengl.h	4134;"	d
GL_FLOAT_RGBA16_NV	/usr/include/SDL2/SDL_opengl.h	4135;"	d
GL_FLOAT_RGBA32_NV	/usr/include/SDL2/SDL_opengl.h	4136;"	d
GL_FLOAT_RGBA_MODE_NV	/usr/include/SDL2/SDL_opengl.h	4139;"	d
GL_FLOAT_RGBA_NV	/usr/include/SDL2/SDL_opengl.h	4128;"	d
GL_FLOAT_RGB_NV	/usr/include/SDL2/SDL_opengl.h	4127;"	d
GL_FLOAT_RG_NV	/usr/include/SDL2/SDL_opengl.h	4126;"	d
GL_FLOAT_R_NV	/usr/include/SDL2/SDL_opengl.h	4125;"	d
GL_FLOAT_VEC2	/usr/include/SDL2/SDL_opengl.h	504;"	d
GL_FLOAT_VEC2	/usr/include/SDL2/SDL_opengles2.h	733;"	d
GL_FLOAT_VEC2_ARB	/usr/include/SDL2/SDL_opengl.h	1490;"	d
GL_FLOAT_VEC3	/usr/include/SDL2/SDL_opengl.h	505;"	d
GL_FLOAT_VEC3	/usr/include/SDL2/SDL_opengles2.h	734;"	d
GL_FLOAT_VEC3_ARB	/usr/include/SDL2/SDL_opengl.h	1491;"	d
GL_FLOAT_VEC4	/usr/include/SDL2/SDL_opengl.h	506;"	d
GL_FLOAT_VEC4	/usr/include/SDL2/SDL_opengles2.h	735;"	d
GL_FLOAT_VEC4_ARB	/usr/include/SDL2/SDL_opengl.h	1492;"	d
GL_FOG_COORD	/usr/include/SDL2/SDL_opengl.h	447;"	d
GL_FOG_COORDINATE	/usr/include/SDL2/SDL_opengl.h	387;"	d
GL_FOG_COORDINATE_ARRAY	/usr/include/SDL2/SDL_opengl.h	393;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	444;"	d
GL_FOG_COORDINATE_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1457;"	d
GL_FOG_COORDINATE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	3021;"	d
GL_FOG_COORDINATE_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3327;"	d
GL_FOG_COORDINATE_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3335;"	d
GL_FOG_COORDINATE_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	392;"	d
GL_FOG_COORDINATE_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	3020;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	391;"	d
GL_FOG_COORDINATE_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	3019;"	d
GL_FOG_COORDINATE_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	390;"	d
GL_FOG_COORDINATE_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3018;"	d
GL_FOG_COORDINATE_EXT	/usr/include/SDL2/SDL_opengl.h	3015;"	d
GL_FOG_COORDINATE_SOURCE	/usr/include/SDL2/SDL_opengl.h	386;"	d
GL_FOG_COORDINATE_SOURCE_EXT	/usr/include/SDL2/SDL_opengl.h	3014;"	d
GL_FOG_COORD_ARRAY	/usr/include/SDL2/SDL_opengl.h	452;"	d
GL_FOG_COORD_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4896;"	d
GL_FOG_COORD_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	453;"	d
GL_FOG_COORD_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4906;"	d
GL_FOG_COORD_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	451;"	d
GL_FOG_COORD_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	450;"	d
GL_FOG_COORD_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	449;"	d
GL_FOG_COORD_SRC	/usr/include/SDL2/SDL_opengl.h	446;"	d
GL_FOG_DISTANCE_MODE_NV	/usr/include/SDL2/SDL_opengl.h	3277;"	d
GL_FOG_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl.h	2686;"	d
GL_FOG_FUNC_SGIS	/usr/include/SDL2/SDL_opengl.h	2685;"	d
GL_FOG_OFFSET_SGIX	/usr/include/SDL2/SDL_opengl.h	2691;"	d
GL_FOG_OFFSET_VALUE_SGIX	/usr/include/SDL2/SDL_opengl.h	2692;"	d
GL_FOG_SCALE_SGIX	/usr/include/SDL2/SDL_opengl.h	3079;"	d
GL_FOG_SCALE_VALUE_SGIX	/usr/include/SDL2/SDL_opengl.h	3080;"	d
GL_FOG_SPECULAR_TEXTURE_WIN	/usr/include/SDL2/SDL_opengl.h	2900;"	d
GL_FORCE_BLUE_TO_ONE_NV	/usr/include/SDL2/SDL_opengl.h	4018;"	d
GL_FORMAT_SUBSAMPLE_244_244_OML	/usr/include/SDL2/SDL_opengl.h	3681;"	d
GL_FORMAT_SUBSAMPLE_24_24_OML	/usr/include/SDL2/SDL_opengl.h	3680;"	d
GL_FRACTIONAL_EVEN	/usr/include/SDL2/SDL_opengl.h	2062;"	d
GL_FRACTIONAL_ODD	/usr/include/SDL2/SDL_opengl.h	2061;"	d
GL_FRAGMENT_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2906;"	d
GL_FRAGMENT_COLOR_MATERIAL_FACE_SGIX	/usr/include/SDL2/SDL_opengl.h	2859;"	d
GL_FRAGMENT_COLOR_MATERIAL_PARAMETER_SGIX	/usr/include/SDL2/SDL_opengl.h	2860;"	d
GL_FRAGMENT_COLOR_MATERIAL_SGIX	/usr/include/SDL2/SDL_opengl.h	2858;"	d
GL_FRAGMENT_DEPTH	/usr/include/SDL2/SDL_opengl.h	388;"	d
GL_FRAGMENT_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	3016;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	/usr/include/SDL2/SDL_opengl.h	2013;"	d
GL_FRAGMENT_LIGHT0_SGIX	/usr/include/SDL2/SDL_opengl.h	2869;"	d
GL_FRAGMENT_LIGHT1_SGIX	/usr/include/SDL2/SDL_opengl.h	2870;"	d
GL_FRAGMENT_LIGHT2_SGIX	/usr/include/SDL2/SDL_opengl.h	2871;"	d
GL_FRAGMENT_LIGHT3_SGIX	/usr/include/SDL2/SDL_opengl.h	2872;"	d
GL_FRAGMENT_LIGHT4_SGIX	/usr/include/SDL2/SDL_opengl.h	2873;"	d
GL_FRAGMENT_LIGHT5_SGIX	/usr/include/SDL2/SDL_opengl.h	2874;"	d
GL_FRAGMENT_LIGHT6_SGIX	/usr/include/SDL2/SDL_opengl.h	2875;"	d
GL_FRAGMENT_LIGHT7_SGIX	/usr/include/SDL2/SDL_opengl.h	2876;"	d
GL_FRAGMENT_LIGHTING_SGIX	/usr/include/SDL2/SDL_opengl.h	2857;"	d
GL_FRAGMENT_LIGHT_MODEL_AMBIENT_SGIX	/usr/include/SDL2/SDL_opengl.h	2867;"	d
GL_FRAGMENT_LIGHT_MODEL_LOCAL_VIEWER_SGIX	/usr/include/SDL2/SDL_opengl.h	2865;"	d
GL_FRAGMENT_LIGHT_MODEL_NORMAL_INTERPOLATION_SGIX	/usr/include/SDL2/SDL_opengl.h	2868;"	d
GL_FRAGMENT_LIGHT_MODEL_TWO_SIDE_SGIX	/usr/include/SDL2/SDL_opengl.h	2866;"	d
GL_FRAGMENT_MATERIAL_EXT	/usr/include/SDL2/SDL_opengl.h	2904;"	d
GL_FRAGMENT_NORMAL_EXT	/usr/include/SDL2/SDL_opengl.h	2905;"	d
GL_FRAGMENT_PROGRAM_ARB	/usr/include/SDL2/SDL_opengl.h	1426;"	d
GL_FRAGMENT_PROGRAM_BINDING_NV	/usr/include/SDL2/SDL_opengl.h	4147;"	d
GL_FRAGMENT_PROGRAM_INTERPOLATION_OFFSET_BITS_NV	/usr/include/SDL2/SDL_opengl.h	5004;"	d
GL_FRAGMENT_PROGRAM_NV	/usr/include/SDL2/SDL_opengl.h	4144;"	d
GL_FRAGMENT_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4533;"	d
GL_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengl.h	496;"	d
GL_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengles2.h	613;"	d
GL_FRAGMENT_SHADER_ARB	/usr/include/SDL2/SDL_opengl.h	1533;"	d
GL_FRAGMENT_SHADER_ATI	/usr/include/SDL2/SDL_opengl.h	3710;"	d
GL_FRAGMENT_SHADER_BIT	/usr/include/SDL2/SDL_opengl.h	2131;"	d
GL_FRAGMENT_SHADER_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1507;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	/usr/include/SDL2/SDL_opengl.h	534;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_ARB	/usr/include/SDL2/SDL_opengl.h	1535;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT_OES	/usr/include/SDL2/SDL_opengles2.h	1099;"	d
GL_FRAGMENT_SHADER_DISCARDS_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2.h	1516;"	d
GL_FRAMEBUFFER	/usr/include/SDL2/SDL_opengl.h	1692;"	d
GL_FRAMEBUFFER	/usr/include/SDL2/SDL_opengles2.h	781;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	1638;"	d
GL_FRAMEBUFFER_ATTACHMENT_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1311;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	1637;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	/usr/include/SDL2/SDL_opengl.h	1633;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING_EXT	/usr/include/SDL2/SDL_opengles2.h	1535;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	/usr/include/SDL2/SDL_opengl.h	1634;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE_EXT	/usr/include/SDL2/SDL_opengles2.h	1421;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl.h	1639;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	1636;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	/usr/include/SDL2/SDL_opengl.h	897;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_ARB	/usr/include/SDL2/SDL_opengl.h	1728;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED_EXT	/usr/include/SDL2/SDL_opengl.h	4392;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/include/SDL2/SDL_opengl.h	1663;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	/usr/include/SDL2/SDL_opengles2.h	801;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_EXT	/usr/include/SDL2/SDL_opengl.h	4253;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/include/SDL2/SDL_opengl.h	1662;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	/usr/include/SDL2/SDL_opengles2.h	800;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	4252;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	1635;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl.h	1640;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_EXT	/usr/include/SDL2/SDL_opengl.h	4256;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_3D_ZOFFSET_OES	/usr/include/SDL2/SDL_opengles2.h	1123;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/include/SDL2/SDL_opengl.h	1665;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	/usr/include/SDL2/SDL_opengles2.h	803;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_EXT	/usr/include/SDL2/SDL_opengl.h	4255;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	/usr/include/SDL2/SDL_opengl.h	1666;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER_EXT	/usr/include/SDL2/SDL_opengl.h	4395;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/include/SDL2/SDL_opengl.h	1664;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	/usr/include/SDL2/SDL_opengles2.h	802;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_EXT	/usr/include/SDL2/SDL_opengl.h	4254;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2.h	1457;"	d
GL_FRAMEBUFFER_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4978;"	d
GL_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	1655;"	d
GL_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengles2.h	817;"	d
GL_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4250;"	d
GL_FRAMEBUFFER_COMPLETE	/usr/include/SDL2/SDL_opengl.h	1667;"	d
GL_FRAMEBUFFER_COMPLETE	/usr/include/SDL2/SDL_opengles2.h	811;"	d
GL_FRAMEBUFFER_COMPLETE_EXT	/usr/include/SDL2/SDL_opengl.h	4257;"	d
GL_FRAMEBUFFER_DEFAULT	/usr/include/SDL2/SDL_opengl.h	1641;"	d
GL_FRAMEBUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4284;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/include/SDL2/SDL_opengl.h	1668;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	/usr/include/SDL2/SDL_opengles2.h	812;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl.h	4258;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS	/usr/include/SDL2/SDL_opengles2.h	814;"	d
GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_EXT	/usr/include/SDL2/SDL_opengl.h	4260;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	/usr/include/SDL2/SDL_opengl.h	1670;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4262;"	d
GL_FRAMEBUFFER_INCOMPLETE_FORMATS_EXT	/usr/include/SDL2/SDL_opengl.h	4261;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_ARB	/usr/include/SDL2/SDL_opengl.h	1730;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	4394;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	/usr/include/SDL2/SDL_opengl.h	898;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_ARB	/usr/include/SDL2/SDL_opengl.h	1729;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS_EXT	/usr/include/SDL2/SDL_opengl.h	4393;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/include/SDL2/SDL_opengl.h	1669;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	/usr/include/SDL2/SDL_opengles2.h	813;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl.h	4259;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1707;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1284;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_APPLE	/usr/include/SDL2/SDL_opengles2.h	1329;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl.h	4344;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengles2.h	1460;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE_IMG	/usr/include/SDL2/SDL_opengles2.h	1651;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	/usr/include/SDL2/SDL_opengl.h	1671;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4263;"	d
GL_FRAMEBUFFER_SRGB	/usr/include/SDL2/SDL_opengl.h	1718;"	d
GL_FRAMEBUFFER_SRGB_CAPABLE_EXT	/usr/include/SDL2/SDL_opengl.h	4522;"	d
GL_FRAMEBUFFER_SRGB_EXT	/usr/include/SDL2/SDL_opengl.h	4521;"	d
GL_FRAMEBUFFER_UNDEFINED	/usr/include/SDL2/SDL_opengl.h	1642;"	d
GL_FRAMEBUFFER_UNDEFINED_OES	/usr/include/SDL2/SDL_opengles2.h	1113;"	d
GL_FRAMEBUFFER_UNSUPPORTED	/usr/include/SDL2/SDL_opengl.h	1672;"	d
GL_FRAMEBUFFER_UNSUPPORTED	/usr/include/SDL2/SDL_opengles2.h	815;"	d
GL_FRAMEBUFFER_UNSUPPORTED_EXT	/usr/include/SDL2/SDL_opengl.h	4264;"	d
GL_FRAMEZOOM_FACTOR_SGIX	/usr/include/SDL2/SDL_opengl.h	2651;"	d
GL_FRAMEZOOM_SGIX	/usr/include/SDL2/SDL_opengl.h	2650;"	d
GL_FRAME_NV	/usr/include/SDL2/SDL_opengl.h	4643;"	d
GL_FRONT	/usr/include/SDL2/SDL_opengles2.h	484;"	d
GL_FRONT_AND_BACK	/usr/include/SDL2/SDL_opengles2.h	486;"	d
GL_FRONT_FACE	/usr/include/SDL2/SDL_opengles2.h	526;"	d
GL_FULL_RANGE_EXT	/usr/include/SDL2/SDL_opengl.h	3937;"	d
GL_FULL_STIPPLE_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2771;"	d
GL_FUNC_ADD	/usr/include/SDL2/SDL_opengl.h	184;"	d
GL_FUNC_ADD	/usr/include/SDL2/SDL_opengles2.h	448;"	d
GL_FUNC_ADD_EXT	/usr/include/SDL2/SDL_opengl.h	2555;"	d
GL_FUNC_REVERSE_SUBTRACT	/usr/include/SDL2/SDL_opengl.h	189;"	d
GL_FUNC_REVERSE_SUBTRACT	/usr/include/SDL2/SDL_opengles2.h	455;"	d
GL_FUNC_REVERSE_SUBTRACT_EXT	/usr/include/SDL2/SDL_opengl.h	2563;"	d
GL_FUNC_SUBTRACT	/usr/include/SDL2/SDL_opengl.h	188;"	d
GL_FUNC_SUBTRACT	/usr/include/SDL2/SDL_opengles2.h	454;"	d
GL_FUNC_SUBTRACT_EXT	/usr/include/SDL2/SDL_opengl.h	2562;"	d
GL_GENERATE_MIPMAP	/usr/include/SDL2/SDL_opengl.h	384;"	d
GL_GENERATE_MIPMAP_HINT	/usr/include/SDL2/SDL_opengl.h	385;"	d
GL_GENERATE_MIPMAP_HINT	/usr/include/SDL2/SDL_opengles2.h	586;"	d
GL_GENERATE_MIPMAP_HINT_SGIS	/usr/include/SDL2/SDL_opengl.h	2521;"	d
GL_GENERATE_MIPMAP_SGIS	/usr/include/SDL2/SDL_opengl.h	2520;"	d
GL_GENERIC_ATTRIB_NV	/usr/include/SDL2/SDL_opengl.h	4546;"	d
GL_GEOMETRY_DEFORMATION_BIT_SGIX	/usr/include/SDL2/SDL_opengl.h	2660;"	d
GL_GEOMETRY_DEFORMATION_SGIX	/usr/include/SDL2/SDL_opengl.h	2664;"	d
GL_GEOMETRY_INPUT_TYPE	/usr/include/SDL2/SDL_opengl.h	901;"	d
GL_GEOMETRY_INPUT_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1733;"	d
GL_GEOMETRY_INPUT_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	4389;"	d
GL_GEOMETRY_OUTPUT_TYPE	/usr/include/SDL2/SDL_opengl.h	902;"	d
GL_GEOMETRY_OUTPUT_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1734;"	d
GL_GEOMETRY_OUTPUT_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	4390;"	d
GL_GEOMETRY_PROGRAM_NV	/usr/include/SDL2/SDL_opengl.h	4385;"	d
GL_GEOMETRY_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4532;"	d
GL_GEOMETRY_SHADER	/usr/include/SDL2/SDL_opengl.h	899;"	d
GL_GEOMETRY_SHADER_ARB	/usr/include/SDL2/SDL_opengl.h	1731;"	d
GL_GEOMETRY_SHADER_BIT	/usr/include/SDL2/SDL_opengl.h	2132;"	d
GL_GEOMETRY_SHADER_EXT	/usr/include/SDL2/SDL_opengl.h	4400;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	/usr/include/SDL2/SDL_opengl.h	2009;"	d
GL_GEOMETRY_VERTICES_OUT	/usr/include/SDL2/SDL_opengl.h	900;"	d
GL_GEOMETRY_VERTICES_OUT_ARB	/usr/include/SDL2/SDL_opengl.h	1732;"	d
GL_GEOMETRY_VERTICES_OUT_EXT	/usr/include/SDL2/SDL_opengl.h	4388;"	d
GL_GEQUAL	/usr/include/SDL2/SDL_opengles2.h	641;"	d
GL_GLEXT_VERSION	/usr/include/SDL2/SDL_opengl.h	111;"	d
GL_GLOBAL_ALPHA_FACTOR_SUN	/usr/include/SDL2/SDL_opengl.h	3090;"	d
GL_GLOBAL_ALPHA_SUN	/usr/include/SDL2/SDL_opengl.h	3089;"	d
GL_GPU_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4881;"	d
GL_GPU_OPTIMIZED_QCOM	/usr/include/SDL2/SDL_opengles2.h	1766;"	d
GL_GREATER	/usr/include/SDL2/SDL_opengles2.h	639;"	d
GL_GREEN_BITS	/usr/include/SDL2/SDL_opengles2.h	557;"	d
GL_GREEN_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3802;"	d
GL_GREEN_INTEGER	/usr/include/SDL2/SDL_opengl.h	651;"	d
GL_GREEN_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4620;"	d
GL_GREEN_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3129;"	d
GL_GREEN_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3125;"	d
GL_GREMEDY_frame_terminator	/usr/include/SDL2/SDL_opengl.h	10101;"	d
GL_GREMEDY_string_marker	/usr/include/SDL2/SDL_opengl.h	9727;"	d
GL_GUILTY_CONTEXT_RESET_ARB	/usr/include/SDL2/SDL_opengl.h	2210;"	d
GL_GUILTY_CONTEXT_RESET_EXT	/usr/include/SDL2/SDL_opengles2.h	1495;"	d
GL_HALF_APPLE	/usr/include/SDL2/SDL_opengl.h	4784;"	d
GL_HALF_BIAS_NEGATE_NV	/usr/include/SDL2/SDL_opengl.h	3240;"	d
GL_HALF_BIAS_NORMAL_NV	/usr/include/SDL2/SDL_opengl.h	3239;"	d
GL_HALF_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3807;"	d
GL_HALF_FLOAT	/usr/include/SDL2/SDL_opengl.h	1745;"	d
GL_HALF_FLOAT_ARB	/usr/include/SDL2/SDL_opengl.h	1589;"	d
GL_HALF_FLOAT_NV	/usr/include/SDL2/SDL_opengl.h	4152;"	d
GL_HALF_FLOAT_OES	/usr/include/SDL2/SDL_opengles2.h	1134;"	d
GL_HIGH_FLOAT	/usr/include/SDL2/SDL_opengl.h	2111;"	d
GL_HIGH_FLOAT	/usr/include/SDL2/SDL_opengles2.h	775;"	d
GL_HIGH_INT	/usr/include/SDL2/SDL_opengl.h	2114;"	d
GL_HIGH_INT	/usr/include/SDL2/SDL_opengles2.h	778;"	d
GL_HILO16_NV	/usr/include/SDL2/SDL_opengl.h	3530;"	d
GL_HILO8_NV	/usr/include/SDL2/SDL_opengl.h	4016;"	d
GL_HILO_NV	/usr/include/SDL2/SDL_opengl.h	3526;"	d
GL_HISTOGRAM	/usr/include/SDL2/SDL_opengl.h	213;"	d
GL_HISTOGRAM_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	220;"	d
GL_HISTOGRAM_ALPHA_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2315;"	d
GL_HISTOGRAM_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	219;"	d
GL_HISTOGRAM_BLUE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2314;"	d
GL_HISTOGRAM_EXT	/usr/include/SDL2/SDL_opengl.h	2308;"	d
GL_HISTOGRAM_FORMAT	/usr/include/SDL2/SDL_opengl.h	216;"	d
GL_HISTOGRAM_FORMAT_EXT	/usr/include/SDL2/SDL_opengl.h	2311;"	d
GL_HISTOGRAM_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	218;"	d
GL_HISTOGRAM_GREEN_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2313;"	d
GL_HISTOGRAM_LUMINANCE_SIZE	/usr/include/SDL2/SDL_opengl.h	221;"	d
GL_HISTOGRAM_LUMINANCE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2316;"	d
GL_HISTOGRAM_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	217;"	d
GL_HISTOGRAM_RED_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2312;"	d
GL_HISTOGRAM_SINK	/usr/include/SDL2/SDL_opengl.h	222;"	d
GL_HISTOGRAM_SINK_EXT	/usr/include/SDL2/SDL_opengl.h	2317;"	d
GL_HISTOGRAM_WIDTH	/usr/include/SDL2/SDL_opengl.h	215;"	d
GL_HISTOGRAM_WIDTH_EXT	/usr/include/SDL2/SDL_opengl.h	2310;"	d
GL_HI_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3556;"	d
GL_HI_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3550;"	d
GL_HP_convolution_border_modes	/usr/include/SDL2/SDL_opengl.h	7887;"	d
GL_HP_image_transform	/usr/include/SDL2/SDL_opengl.h	7869;"	d
GL_HP_occlusion_test	/usr/include/SDL2/SDL_opengl.h	8143;"	d
GL_HP_texture_lighting	/usr/include/SDL2/SDL_opengl.h	8063;"	d
GL_IBM_cull_vertex	/usr/include/SDL2/SDL_opengl.h	8641;"	d
GL_IBM_multimode_draw_arrays	/usr/include/SDL2/SDL_opengl.h	8645;"	d
GL_IBM_rasterpos_clip	/usr/include/SDL2/SDL_opengl.h	8059;"	d
GL_IBM_vertex_array_lists	/usr/include/SDL2/SDL_opengl.h	8655;"	d
GL_IDENTITY_NV	/usr/include/SDL2/SDL_opengl.h	3588;"	d
GL_IGNORE_BORDER_HP	/usr/include/SDL2/SDL_opengl.h	2714;"	d
GL_IMAGE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4940;"	d
GL_IMAGE_1D_EXT	/usr/include/SDL2/SDL_opengl.h	4934;"	d
GL_IMAGE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4941;"	d
GL_IMAGE_2D_EXT	/usr/include/SDL2/SDL_opengl.h	4935;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4944;"	d
GL_IMAGE_2D_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl.h	4943;"	d
GL_IMAGE_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl.h	4937;"	d
GL_IMAGE_3D_EXT	/usr/include/SDL2/SDL_opengl.h	4936;"	d
GL_IMAGE_BINDING_ACCESS_EXT	/usr/include/SDL2/SDL_opengl.h	4933;"	d
GL_IMAGE_BINDING_FORMAT_EXT	/usr/include/SDL2/SDL_opengl.h	4968;"	d
GL_IMAGE_BINDING_LAYERED_EXT	/usr/include/SDL2/SDL_opengl.h	4931;"	d
GL_IMAGE_BINDING_LAYER_EXT	/usr/include/SDL2/SDL_opengl.h	4932;"	d
GL_IMAGE_BINDING_LEVEL_EXT	/usr/include/SDL2/SDL_opengl.h	4930;"	d
GL_IMAGE_BINDING_NAME_EXT	/usr/include/SDL2/SDL_opengl.h	4929;"	d
GL_IMAGE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4939;"	d
GL_IMAGE_CUBE_EXT	/usr/include/SDL2/SDL_opengl.h	4938;"	d
GL_IMAGE_CUBE_MAP_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4942;"	d
GL_IMAGE_CUBIC_WEIGHT_HP	/usr/include/SDL2/SDL_opengl.h	2705;"	d
GL_IMAGE_MAG_FILTER_HP	/usr/include/SDL2/SDL_opengl.h	2703;"	d
GL_IMAGE_MIN_FILTER_HP	/usr/include/SDL2/SDL_opengl.h	2704;"	d
GL_IMAGE_ROTATE_ANGLE_HP	/usr/include/SDL2/SDL_opengl.h	2700;"	d
GL_IMAGE_ROTATE_ORIGIN_X_HP	/usr/include/SDL2/SDL_opengl.h	2701;"	d
GL_IMAGE_ROTATE_ORIGIN_Y_HP	/usr/include/SDL2/SDL_opengl.h	2702;"	d
GL_IMAGE_SCALE_X_HP	/usr/include/SDL2/SDL_opengl.h	2696;"	d
GL_IMAGE_SCALE_Y_HP	/usr/include/SDL2/SDL_opengl.h	2697;"	d
GL_IMAGE_TRANSFORM_2D_HP	/usr/include/SDL2/SDL_opengl.h	2708;"	d
GL_IMAGE_TRANSLATE_X_HP	/usr/include/SDL2/SDL_opengl.h	2698;"	d
GL_IMAGE_TRANSLATE_Y_HP	/usr/include/SDL2/SDL_opengl.h	2699;"	d
GL_IMG_multisampled_render_to_texture	/usr/include/SDL2/SDL_opengles2.h	2576;"	d
GL_IMG_program_binary	/usr/include/SDL2/SDL_opengles2.h	2556;"	d
GL_IMG_read_format	/usr/include/SDL2/SDL_opengles2.h	2561;"	d
GL_IMG_shader_binary	/usr/include/SDL2/SDL_opengles2.h	2566;"	d
GL_IMG_texture_compression_pvrtc	/usr/include/SDL2/SDL_opengles2.h	2571;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	/usr/include/SDL2/SDL_opengl.h	2108;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	/usr/include/SDL2/SDL_opengles2.h	760;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT_OES	/usr/include/SDL2/SDL_opengl.h	4191;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	/usr/include/SDL2/SDL_opengl.h	2107;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	/usr/include/SDL2/SDL_opengles2.h	759;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE_OES	/usr/include/SDL2/SDL_opengl.h	4190;"	d
GL_INCR	/usr/include/SDL2/SDL_opengles2.h	648;"	d
GL_INCR_WRAP	/usr/include/SDL2/SDL_opengl.h	373;"	d
GL_INCR_WRAP	/usr/include/SDL2/SDL_opengles2.h	651;"	d
GL_INCR_WRAP_EXT	/usr/include/SDL2/SDL_opengl.h	3139;"	d
GL_INDEX	/usr/include/SDL2/SDL_opengl.h	1712;"	d
GL_INDEX_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4892;"	d
GL_INDEX_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	440;"	d
GL_INDEX_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1453;"	d
GL_INDEX_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2501;"	d
GL_INDEX_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	2485;"	d
GL_INDEX_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4902;"	d
GL_INDEX_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3324;"	d
GL_INDEX_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3332;"	d
GL_INDEX_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	2511;"	d
GL_INDEX_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	2500;"	d
GL_INDEX_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	2499;"	d
GL_INDEX_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2738;"	d
GL_INDEX_MATERIAL_EXT	/usr/include/SDL2/SDL_opengl.h	2818;"	d
GL_INDEX_MATERIAL_FACE_EXT	/usr/include/SDL2/SDL_opengl.h	2820;"	d
GL_INDEX_MATERIAL_PARAMETER_EXT	/usr/include/SDL2/SDL_opengl.h	2819;"	d
GL_INDEX_TEST_EXT	/usr/include/SDL2/SDL_opengl.h	2824;"	d
GL_INDEX_TEST_FUNC_EXT	/usr/include/SDL2/SDL_opengl.h	2825;"	d
GL_INDEX_TEST_REF_EXT	/usr/include/SDL2/SDL_opengl.h	2826;"	d
GL_INFO_LOG_LENGTH	/usr/include/SDL2/SDL_opengl.h	527;"	d
GL_INFO_LOG_LENGTH	/usr/include/SDL2/SDL_opengles2.h	764;"	d
GL_INGR_blend_func_separate	/usr/include/SDL2/SDL_opengl.h	8461;"	d
GL_INGR_color_clamp	/usr/include/SDL2/SDL_opengl.h	8469;"	d
GL_INGR_interlace_read	/usr/include/SDL2/SDL_opengl.h	8473;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	/usr/include/SDL2/SDL_opengl.h	2211;"	d
GL_INNOCENT_CONTEXT_RESET_EXT	/usr/include/SDL2/SDL_opengles2.h	1496;"	d
GL_INSTRUMENT_BUFFER_POINTER_SGIX	/usr/include/SDL2/SDL_opengl.h	2638;"	d
GL_INSTRUMENT_MEASUREMENTS_SGIX	/usr/include/SDL2/SDL_opengl.h	2639;"	d
GL_INT	/usr/include/SDL2/SDL_opengles2.h	593;"	d
GL_INT16_NV	/usr/include/SDL2/SDL_opengl.h	5016;"	d
GL_INT16_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5017;"	d
GL_INT16_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5018;"	d
GL_INT16_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5019;"	d
GL_INT64_NV	/usr/include/SDL2/SDL_opengl.h	5010;"	d
GL_INT64_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5020;"	d
GL_INT64_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5021;"	d
GL_INT64_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5022;"	d
GL_INT8_NV	/usr/include/SDL2/SDL_opengl.h	5012;"	d
GL_INT8_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5013;"	d
GL_INT8_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5014;"	d
GL_INT8_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5015;"	d
GL_INTEL_parallel_arrays	/usr/include/SDL2/SDL_opengl.h	8129;"	d
GL_INTENSITY12_EXT	/usr/include/SDL2/SDL_opengl.h	2256;"	d
GL_INTENSITY16F_ARB	/usr/include/SDL2/SDL_opengl.h	1610;"	d
GL_INTENSITY16I_EXT	/usr/include/SDL2/SDL_opengl.h	4610;"	d
GL_INTENSITY16UI_EXT	/usr/include/SDL2/SDL_opengl.h	4592;"	d
GL_INTENSITY16_EXT	/usr/include/SDL2/SDL_opengl.h	2257;"	d
GL_INTENSITY16_SNORM	/usr/include/SDL2/SDL_opengl.h	4755;"	d
GL_INTENSITY32F_ARB	/usr/include/SDL2/SDL_opengl.h	1604;"	d
GL_INTENSITY32I_EXT	/usr/include/SDL2/SDL_opengl.h	4604;"	d
GL_INTENSITY32UI_EXT	/usr/include/SDL2/SDL_opengl.h	4586;"	d
GL_INTENSITY4_EXT	/usr/include/SDL2/SDL_opengl.h	2254;"	d
GL_INTENSITY8I_EXT	/usr/include/SDL2/SDL_opengl.h	4616;"	d
GL_INTENSITY8UI_EXT	/usr/include/SDL2/SDL_opengl.h	4598;"	d
GL_INTENSITY8_EXT	/usr/include/SDL2/SDL_opengl.h	2255;"	d
GL_INTENSITY8_SNORM	/usr/include/SDL2/SDL_opengl.h	4751;"	d
GL_INTENSITY_EXT	/usr/include/SDL2/SDL_opengl.h	2253;"	d
GL_INTENSITY_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl.h	4794;"	d
GL_INTENSITY_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl.h	4119;"	d
GL_INTENSITY_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl.h	4788;"	d
GL_INTENSITY_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl.h	4113;"	d
GL_INTENSITY_SNORM	/usr/include/SDL2/SDL_opengl.h	4747;"	d
GL_INTERLACE_OML	/usr/include/SDL2/SDL_opengl.h	3675;"	d
GL_INTERLACE_READ_INGR	/usr/include/SDL2/SDL_opengl.h	3135;"	d
GL_INTERLACE_READ_OML	/usr/include/SDL2/SDL_opengl.h	3676;"	d
GL_INTERLACE_SGIX	/usr/include/SDL2/SDL_opengl.h	2570;"	d
GL_INTERLEAVED_ATTRIBS	/usr/include/SDL2/SDL_opengl.h	634;"	d
GL_INTERLEAVED_ATTRIBS_EXT	/usr/include/SDL2/SDL_opengl.h	4656;"	d
GL_INTERLEAVED_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	4561;"	d
GL_INTERPOLATE	/usr/include/SDL2/SDL_opengl.h	352;"	d
GL_INTERPOLATE_ARB	/usr/include/SDL2/SDL_opengl.h	1303;"	d
GL_INTERPOLATE_EXT	/usr/include/SDL2/SDL_opengl.h	3052;"	d
GL_INT_10_10_10_2_OES	/usr/include/SDL2/SDL_opengles2.h	1154;"	d
GL_INT_2_10_10_10_REV	/usr/include/SDL2/SDL_opengl.h	2000;"	d
GL_INT_IMAGE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4951;"	d
GL_INT_IMAGE_1D_EXT	/usr/include/SDL2/SDL_opengl.h	4945;"	d
GL_INT_IMAGE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4952;"	d
GL_INT_IMAGE_2D_EXT	/usr/include/SDL2/SDL_opengl.h	4946;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4955;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl.h	4954;"	d
GL_INT_IMAGE_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl.h	4948;"	d
GL_INT_IMAGE_3D_EXT	/usr/include/SDL2/SDL_opengl.h	4947;"	d
GL_INT_IMAGE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4950;"	d
GL_INT_IMAGE_CUBE_EXT	/usr/include/SDL2/SDL_opengl.h	4949;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4953;"	d
GL_INT_SAMPLER_1D	/usr/include/SDL2/SDL_opengl.h	665;"	d
GL_INT_SAMPLER_1D_ARRAY	/usr/include/SDL2/SDL_opengl.h	669;"	d
GL_INT_SAMPLER_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4441;"	d
GL_INT_SAMPLER_1D_EXT	/usr/include/SDL2/SDL_opengl.h	4436;"	d
GL_INT_SAMPLER_2D	/usr/include/SDL2/SDL_opengl.h	666;"	d
GL_INT_SAMPLER_2D_ARRAY	/usr/include/SDL2/SDL_opengl.h	670;"	d
GL_INT_SAMPLER_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4442;"	d
GL_INT_SAMPLER_2D_EXT	/usr/include/SDL2/SDL_opengl.h	4437;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1906;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl.h	1909;"	d
GL_INT_SAMPLER_2D_RECT	/usr/include/SDL2/SDL_opengl.h	823;"	d
GL_INT_SAMPLER_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl.h	4440;"	d
GL_INT_SAMPLER_3D	/usr/include/SDL2/SDL_opengl.h	667;"	d
GL_INT_SAMPLER_3D_EXT	/usr/include/SDL2/SDL_opengl.h	4438;"	d
GL_INT_SAMPLER_BUFFER	/usr/include/SDL2/SDL_opengl.h	824;"	d
GL_INT_SAMPLER_BUFFER_AMD	/usr/include/SDL2/SDL_opengl.h	4728;"	d
GL_INT_SAMPLER_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4443;"	d
GL_INT_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengl.h	668;"	d
GL_INT_SAMPLER_CUBE_EXT	/usr/include/SDL2/SDL_opengl.h	4439;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl.h	1004;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1934;"	d
GL_INT_SAMPLER_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4695;"	d
GL_INT_VEC2	/usr/include/SDL2/SDL_opengl.h	507;"	d
GL_INT_VEC2	/usr/include/SDL2/SDL_opengles2.h	736;"	d
GL_INT_VEC2_ARB	/usr/include/SDL2/SDL_opengl.h	1493;"	d
GL_INT_VEC3	/usr/include/SDL2/SDL_opengl.h	508;"	d
GL_INT_VEC3	/usr/include/SDL2/SDL_opengles2.h	737;"	d
GL_INT_VEC3_ARB	/usr/include/SDL2/SDL_opengl.h	1494;"	d
GL_INT_VEC4	/usr/include/SDL2/SDL_opengl.h	509;"	d
GL_INT_VEC4	/usr/include/SDL2/SDL_opengles2.h	738;"	d
GL_INT_VEC4_ARB	/usr/include/SDL2/SDL_opengl.h	1495;"	d
GL_INVALID_ENUM	/usr/include/SDL2/SDL_opengles2.h	512;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	/usr/include/SDL2/SDL_opengl.h	1632;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	/usr/include/SDL2/SDL_opengles2.h	821;"	d
GL_INVALID_FRAMEBUFFER_OPERATION_EXT	/usr/include/SDL2/SDL_opengl.h	4248;"	d
GL_INVALID_INDEX	/usr/include/SDL2/SDL_opengl.h	1838;"	d
GL_INVALID_OPERATION	/usr/include/SDL2/SDL_opengles2.h	514;"	d
GL_INVALID_VALUE	/usr/include/SDL2/SDL_opengles2.h	513;"	d
GL_INVARIANT_DATATYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3947;"	d
GL_INVARIANT_EXT	/usr/include/SDL2/SDL_opengl.h	3906;"	d
GL_INVARIANT_VALUE_EXT	/usr/include/SDL2/SDL_opengl.h	3946;"	d
GL_INVERSE_NV	/usr/include/SDL2/SDL_opengl.h	3589;"	d
GL_INVERSE_TRANSPOSE_NV	/usr/include/SDL2/SDL_opengl.h	3591;"	d
GL_INVERT	/usr/include/SDL2/SDL_opengles2.h	650;"	d
GL_INVERTED_SCREEN_W_REND	/usr/include/SDL2/SDL_opengl.h	3026;"	d
GL_IR_INSTRUMENT1_SGIX	/usr/include/SDL2/SDL_opengl.h	2797;"	d
GL_ISOLINES	/usr/include/SDL2/SDL_opengl.h	2059;"	d
GL_IUI_N3F_V2F_EXT	/usr/include/SDL2/SDL_opengl.h	2832;"	d
GL_IUI_N3F_V3F_EXT	/usr/include/SDL2/SDL_opengl.h	2833;"	d
GL_IUI_V2F_EXT	/usr/include/SDL2/SDL_opengl.h	2830;"	d
GL_IUI_V3F_EXT	/usr/include/SDL2/SDL_opengl.h	2831;"	d
GL_KEEP	/usr/include/SDL2/SDL_opengles2.h	646;"	d
GL_KHR_debug	/usr/include/SDL2/SDL_opengles2.h	2043;"	d
GL_KHR_texture_compression_astc_ldr	/usr/include/SDL2/SDL_opengles2.h	2071;"	d
GL_LAST_VERTEX_CONVENTION	/usr/include/SDL2/SDL_opengl.h	1866;"	d
GL_LAST_VERTEX_CONVENTION_EXT	/usr/include/SDL2/SDL_opengl.h	4739;"	d
GL_LAST_VIDEO_CAPTURE_STATUS_NV	/usr/include/SDL2/SDL_opengl.h	4845;"	d
GL_LAYER_NV	/usr/include/SDL2/SDL_opengl.h	4565;"	d
GL_LAYER_PROVOKING_VERTEX	/usr/include/SDL2/SDL_opengl.h	2168;"	d
GL_LEQUAL	/usr/include/SDL2/SDL_opengles2.h	638;"	d
GL_LERP_ATI	/usr/include/SDL2/SDL_opengl.h	3782;"	d
GL_LESS	/usr/include/SDL2/SDL_opengles2.h	636;"	d
GL_LIGHT_ENV_MODE_SGIX	/usr/include/SDL2/SDL_opengl.h	2864;"	d
GL_LIGHT_MODEL_COLOR_CONTROL	/usr/include/SDL2/SDL_opengl.h	172;"	d
GL_LIGHT_MODEL_COLOR_CONTROL_EXT	/usr/include/SDL2/SDL_opengl.h	2990;"	d
GL_LIGHT_MODEL_SPECULAR_VECTOR_APPLE	/usr/include/SDL2/SDL_opengl.h	3071;"	d
GL_LINEAR	/usr/include/SDL2/SDL_opengles2.h	662;"	d
GL_LINEAR_CLIPMAP_LINEAR_SGIX	/usr/include/SDL2/SDL_opengl.h	2525;"	d
GL_LINEAR_CLIPMAP_NEAREST_SGIX	/usr/include/SDL2/SDL_opengl.h	2536;"	d
GL_LINEAR_DETAIL_ALPHA_SGIS	/usr/include/SDL2/SDL_opengl.h	2429;"	d
GL_LINEAR_DETAIL_COLOR_SGIS	/usr/include/SDL2/SDL_opengl.h	2430;"	d
GL_LINEAR_DETAIL_SGIS	/usr/include/SDL2/SDL_opengl.h	2428;"	d
GL_LINEAR_MIPMAP_LINEAR	/usr/include/SDL2/SDL_opengles2.h	670;"	d
GL_LINEAR_MIPMAP_NEAREST	/usr/include/SDL2/SDL_opengles2.h	668;"	d
GL_LINEAR_SHARPEN_ALPHA_SGIS	/usr/include/SDL2/SDL_opengl.h	2438;"	d
GL_LINEAR_SHARPEN_COLOR_SGIS	/usr/include/SDL2/SDL_opengl.h	2439;"	d
GL_LINEAR_SHARPEN_SGIS	/usr/include/SDL2/SDL_opengl.h	2437;"	d
GL_LINES	/usr/include/SDL2/SDL_opengles2.h	409;"	d
GL_LINES_ADJACENCY	/usr/include/SDL2/SDL_opengl.h	891;"	d
GL_LINES_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl.h	1722;"	d
GL_LINES_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl.h	4381;"	d
GL_LINE_LOOP	/usr/include/SDL2/SDL_opengles2.h	410;"	d
GL_LINE_STRIP	/usr/include/SDL2/SDL_opengles2.h	411;"	d
GL_LINE_STRIP_ADJACENCY	/usr/include/SDL2/SDL_opengl.h	892;"	d
GL_LINE_STRIP_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl.h	1723;"	d
GL_LINE_STRIP_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl.h	4382;"	d
GL_LINE_WIDTH	/usr/include/SDL2/SDL_opengles2.h	522;"	d
GL_LINK_STATUS	/usr/include/SDL2/SDL_opengl.h	525;"	d
GL_LINK_STATUS	/usr/include/SDL2/SDL_opengles2.h	624;"	d
GL_LIST_PRIORITY_SGIX	/usr/include/SDL2/SDL_opengl.h	2793;"	d
GL_LOCAL_CONSTANT_DATATYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3949;"	d
GL_LOCAL_CONSTANT_EXT	/usr/include/SDL2/SDL_opengl.h	3907;"	d
GL_LOCAL_CONSTANT_VALUE_EXT	/usr/include/SDL2/SDL_opengl.h	3948;"	d
GL_LOCAL_EXT	/usr/include/SDL2/SDL_opengl.h	3908;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	/usr/include/SDL2/SDL_opengl.h	2209;"	d
GL_LOSE_CONTEXT_ON_RESET_EXT	/usr/include/SDL2/SDL_opengles2.h	1500;"	d
GL_LOWER_LEFT	/usr/include/SDL2/SDL_opengl.h	538;"	d
GL_LOW_FLOAT	/usr/include/SDL2/SDL_opengl.h	2109;"	d
GL_LOW_FLOAT	/usr/include/SDL2/SDL_opengles2.h	773;"	d
GL_LOW_INT	/usr/include/SDL2/SDL_opengl.h	2112;"	d
GL_LOW_INT	/usr/include/SDL2/SDL_opengles2.h	776;"	d
GL_LO_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3557;"	d
GL_LO_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3551;"	d
GL_LUMINANCE	/usr/include/SDL2/SDL_opengles2.h	603;"	d
GL_LUMINANCE12_ALPHA12_EXT	/usr/include/SDL2/SDL_opengl.h	2251;"	d
GL_LUMINANCE12_ALPHA4_EXT	/usr/include/SDL2/SDL_opengl.h	2250;"	d
GL_LUMINANCE12_EXT	/usr/include/SDL2/SDL_opengl.h	2245;"	d
GL_LUMINANCE16F_ARB	/usr/include/SDL2/SDL_opengl.h	1611;"	d
GL_LUMINANCE16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1577;"	d
GL_LUMINANCE16I_EXT	/usr/include/SDL2/SDL_opengl.h	4611;"	d
GL_LUMINANCE16UI_EXT	/usr/include/SDL2/SDL_opengl.h	4593;"	d
GL_LUMINANCE16_ALPHA16_EXT	/usr/include/SDL2/SDL_opengl.h	2252;"	d
GL_LUMINANCE16_ALPHA16_SNORM	/usr/include/SDL2/SDL_opengl.h	4754;"	d
GL_LUMINANCE16_EXT	/usr/include/SDL2/SDL_opengl.h	2246;"	d
GL_LUMINANCE16_SNORM	/usr/include/SDL2/SDL_opengl.h	4753;"	d
GL_LUMINANCE32F_ARB	/usr/include/SDL2/SDL_opengl.h	1605;"	d
GL_LUMINANCE32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1572;"	d
GL_LUMINANCE32I_EXT	/usr/include/SDL2/SDL_opengl.h	4605;"	d
GL_LUMINANCE32UI_EXT	/usr/include/SDL2/SDL_opengl.h	4587;"	d
GL_LUMINANCE4_ALPHA4_EXT	/usr/include/SDL2/SDL_opengl.h	2247;"	d
GL_LUMINANCE4_ALPHA4_OES	/usr/include/SDL2/SDL_opengles2.h	1079;"	d
GL_LUMINANCE4_EXT	/usr/include/SDL2/SDL_opengl.h	2243;"	d
GL_LUMINANCE6_ALPHA2_EXT	/usr/include/SDL2/SDL_opengl.h	2248;"	d
GL_LUMINANCE8I_EXT	/usr/include/SDL2/SDL_opengl.h	4617;"	d
GL_LUMINANCE8UI_EXT	/usr/include/SDL2/SDL_opengl.h	4599;"	d
GL_LUMINANCE8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl.h	2249;"	d
GL_LUMINANCE8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengles2.h	1568;"	d
GL_LUMINANCE8_ALPHA8_OES	/usr/include/SDL2/SDL_opengles2.h	1080;"	d
GL_LUMINANCE8_ALPHA8_SNORM	/usr/include/SDL2/SDL_opengl.h	4750;"	d
GL_LUMINANCE8_EXT	/usr/include/SDL2/SDL_opengl.h	2244;"	d
GL_LUMINANCE8_EXT	/usr/include/SDL2/SDL_opengles2.h	1567;"	d
GL_LUMINANCE8_OES	/usr/include/SDL2/SDL_opengles2.h	1081;"	d
GL_LUMINANCE8_SNORM	/usr/include/SDL2/SDL_opengl.h	4749;"	d
GL_LUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengles2.h	604;"	d
GL_LUMINANCE_ALPHA16F_ARB	/usr/include/SDL2/SDL_opengl.h	1612;"	d
GL_LUMINANCE_ALPHA16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1578;"	d
GL_LUMINANCE_ALPHA16I_EXT	/usr/include/SDL2/SDL_opengl.h	4612;"	d
GL_LUMINANCE_ALPHA16UI_EXT	/usr/include/SDL2/SDL_opengl.h	4594;"	d
GL_LUMINANCE_ALPHA32F_ARB	/usr/include/SDL2/SDL_opengl.h	1606;"	d
GL_LUMINANCE_ALPHA32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1573;"	d
GL_LUMINANCE_ALPHA32I_EXT	/usr/include/SDL2/SDL_opengl.h	4606;"	d
GL_LUMINANCE_ALPHA32UI_EXT	/usr/include/SDL2/SDL_opengl.h	4588;"	d
GL_LUMINANCE_ALPHA8I_EXT	/usr/include/SDL2/SDL_opengl.h	4618;"	d
GL_LUMINANCE_ALPHA8UI_EXT	/usr/include/SDL2/SDL_opengl.h	4600;"	d
GL_LUMINANCE_ALPHA_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl.h	4796;"	d
GL_LUMINANCE_ALPHA_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl.h	4121;"	d
GL_LUMINANCE_ALPHA_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl.h	4790;"	d
GL_LUMINANCE_ALPHA_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl.h	4115;"	d
GL_LUMINANCE_ALPHA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4628;"	d
GL_LUMINANCE_ALPHA_SNORM	/usr/include/SDL2/SDL_opengl.h	4746;"	d
GL_LUMINANCE_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl.h	4795;"	d
GL_LUMINANCE_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl.h	4120;"	d
GL_LUMINANCE_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl.h	4789;"	d
GL_LUMINANCE_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl.h	4114;"	d
GL_LUMINANCE_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4627;"	d
GL_LUMINANCE_SNORM	/usr/include/SDL2/SDL_opengl.h	4745;"	d
GL_MAD_ATI	/usr/include/SDL2/SDL_opengl.h	3781;"	d
GL_MAGNITUDE_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3560;"	d
GL_MAGNITUDE_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3554;"	d
GL_MAJOR_VERSION	/usr/include/SDL2/SDL_opengl.h	592;"	d
GL_MALI_PROGRAM_BINARY_ARM	/usr/include/SDL2/SDL_opengles2.h	1394;"	d
GL_MALI_SHADER_BINARY_ARM	/usr/include/SDL2/SDL_opengles2.h	1399;"	d
GL_MAP1_BINORMAL_EXT	/usr/include/SDL2/SDL_opengl.h	3042;"	d
GL_MAP1_TANGENT_EXT	/usr/include/SDL2/SDL_opengl.h	3040;"	d
GL_MAP1_VERTEX_ATTRIB0_4_NV	/usr/include/SDL2/SDL_opengl.h	3630;"	d
GL_MAP1_VERTEX_ATTRIB10_4_NV	/usr/include/SDL2/SDL_opengl.h	3640;"	d
GL_MAP1_VERTEX_ATTRIB11_4_NV	/usr/include/SDL2/SDL_opengl.h	3641;"	d
GL_MAP1_VERTEX_ATTRIB12_4_NV	/usr/include/SDL2/SDL_opengl.h	3642;"	d
GL_MAP1_VERTEX_ATTRIB13_4_NV	/usr/include/SDL2/SDL_opengl.h	3643;"	d
GL_MAP1_VERTEX_ATTRIB14_4_NV	/usr/include/SDL2/SDL_opengl.h	3644;"	d
GL_MAP1_VERTEX_ATTRIB15_4_NV	/usr/include/SDL2/SDL_opengl.h	3645;"	d
GL_MAP1_VERTEX_ATTRIB1_4_NV	/usr/include/SDL2/SDL_opengl.h	3631;"	d
GL_MAP1_VERTEX_ATTRIB2_4_NV	/usr/include/SDL2/SDL_opengl.h	3632;"	d
GL_MAP1_VERTEX_ATTRIB3_4_NV	/usr/include/SDL2/SDL_opengl.h	3633;"	d
GL_MAP1_VERTEX_ATTRIB4_4_NV	/usr/include/SDL2/SDL_opengl.h	3634;"	d
GL_MAP1_VERTEX_ATTRIB5_4_NV	/usr/include/SDL2/SDL_opengl.h	3635;"	d
GL_MAP1_VERTEX_ATTRIB6_4_NV	/usr/include/SDL2/SDL_opengl.h	3636;"	d
GL_MAP1_VERTEX_ATTRIB7_4_NV	/usr/include/SDL2/SDL_opengl.h	3637;"	d
GL_MAP1_VERTEX_ATTRIB8_4_NV	/usr/include/SDL2/SDL_opengl.h	3638;"	d
GL_MAP1_VERTEX_ATTRIB9_4_NV	/usr/include/SDL2/SDL_opengl.h	3639;"	d
GL_MAP2_BINORMAL_EXT	/usr/include/SDL2/SDL_opengl.h	3043;"	d
GL_MAP2_TANGENT_EXT	/usr/include/SDL2/SDL_opengl.h	3041;"	d
GL_MAP2_VERTEX_ATTRIB0_4_NV	/usr/include/SDL2/SDL_opengl.h	3646;"	d
GL_MAP2_VERTEX_ATTRIB10_4_NV	/usr/include/SDL2/SDL_opengl.h	3656;"	d
GL_MAP2_VERTEX_ATTRIB11_4_NV	/usr/include/SDL2/SDL_opengl.h	3657;"	d
GL_MAP2_VERTEX_ATTRIB12_4_NV	/usr/include/SDL2/SDL_opengl.h	3658;"	d
GL_MAP2_VERTEX_ATTRIB13_4_NV	/usr/include/SDL2/SDL_opengl.h	3659;"	d
GL_MAP2_VERTEX_ATTRIB14_4_NV	/usr/include/SDL2/SDL_opengl.h	3660;"	d
GL_MAP2_VERTEX_ATTRIB15_4_NV	/usr/include/SDL2/SDL_opengl.h	3661;"	d
GL_MAP2_VERTEX_ATTRIB1_4_NV	/usr/include/SDL2/SDL_opengl.h	3647;"	d
GL_MAP2_VERTEX_ATTRIB2_4_NV	/usr/include/SDL2/SDL_opengl.h	3648;"	d
GL_MAP2_VERTEX_ATTRIB3_4_NV	/usr/include/SDL2/SDL_opengl.h	3649;"	d
GL_MAP2_VERTEX_ATTRIB4_4_NV	/usr/include/SDL2/SDL_opengl.h	3650;"	d
GL_MAP2_VERTEX_ATTRIB5_4_NV	/usr/include/SDL2/SDL_opengl.h	3651;"	d
GL_MAP2_VERTEX_ATTRIB6_4_NV	/usr/include/SDL2/SDL_opengl.h	3652;"	d
GL_MAP2_VERTEX_ATTRIB7_4_NV	/usr/include/SDL2/SDL_opengl.h	3653;"	d
GL_MAP2_VERTEX_ATTRIB8_4_NV	/usr/include/SDL2/SDL_opengl.h	3654;"	d
GL_MAP2_VERTEX_ATTRIB9_4_NV	/usr/include/SDL2/SDL_opengl.h	3655;"	d
GL_MAP_ATTRIB_U_ORDER_NV	/usr/include/SDL2/SDL_opengl.h	3452;"	d
GL_MAP_ATTRIB_V_ORDER_NV	/usr/include/SDL2/SDL_opengl.h	3453;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	/usr/include/SDL2/SDL_opengl.h	1757;"	d
GL_MAP_FLUSH_EXPLICIT_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1451;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	/usr/include/SDL2/SDL_opengl.h	1756;"	d
GL_MAP_INVALIDATE_BUFFER_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1450;"	d
GL_MAP_INVALIDATE_RANGE_BIT	/usr/include/SDL2/SDL_opengl.h	1755;"	d
GL_MAP_INVALIDATE_RANGE_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1449;"	d
GL_MAP_READ_BIT	/usr/include/SDL2/SDL_opengl.h	1753;"	d
GL_MAP_READ_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1447;"	d
GL_MAP_TESSELLATION_NV	/usr/include/SDL2/SDL_opengl.h	3451;"	d
GL_MAP_UNSYNCHRONIZED_BIT	/usr/include/SDL2/SDL_opengl.h	1758;"	d
GL_MAP_UNSYNCHRONIZED_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1452;"	d
GL_MAP_WRITE_BIT	/usr/include/SDL2/SDL_opengl.h	1754;"	d
GL_MAP_WRITE_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1448;"	d
GL_MATERIAL_SIDE_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2733;"	d
GL_MATRIX0_ARB	/usr/include/SDL2/SDL_opengl.h	1391;"	d
GL_MATRIX0_NV	/usr/include/SDL2/SDL_opengl.h	3594;"	d
GL_MATRIX10_ARB	/usr/include/SDL2/SDL_opengl.h	1401;"	d
GL_MATRIX11_ARB	/usr/include/SDL2/SDL_opengl.h	1402;"	d
GL_MATRIX12_ARB	/usr/include/SDL2/SDL_opengl.h	1403;"	d
GL_MATRIX13_ARB	/usr/include/SDL2/SDL_opengl.h	1404;"	d
GL_MATRIX14_ARB	/usr/include/SDL2/SDL_opengl.h	1405;"	d
GL_MATRIX15_ARB	/usr/include/SDL2/SDL_opengl.h	1406;"	d
GL_MATRIX16_ARB	/usr/include/SDL2/SDL_opengl.h	1407;"	d
GL_MATRIX17_ARB	/usr/include/SDL2/SDL_opengl.h	1408;"	d
GL_MATRIX18_ARB	/usr/include/SDL2/SDL_opengl.h	1409;"	d
GL_MATRIX19_ARB	/usr/include/SDL2/SDL_opengl.h	1410;"	d
GL_MATRIX1_ARB	/usr/include/SDL2/SDL_opengl.h	1392;"	d
GL_MATRIX1_NV	/usr/include/SDL2/SDL_opengl.h	3595;"	d
GL_MATRIX20_ARB	/usr/include/SDL2/SDL_opengl.h	1411;"	d
GL_MATRIX21_ARB	/usr/include/SDL2/SDL_opengl.h	1412;"	d
GL_MATRIX22_ARB	/usr/include/SDL2/SDL_opengl.h	1413;"	d
GL_MATRIX23_ARB	/usr/include/SDL2/SDL_opengl.h	1414;"	d
GL_MATRIX24_ARB	/usr/include/SDL2/SDL_opengl.h	1415;"	d
GL_MATRIX25_ARB	/usr/include/SDL2/SDL_opengl.h	1416;"	d
GL_MATRIX26_ARB	/usr/include/SDL2/SDL_opengl.h	1417;"	d
GL_MATRIX27_ARB	/usr/include/SDL2/SDL_opengl.h	1418;"	d
GL_MATRIX28_ARB	/usr/include/SDL2/SDL_opengl.h	1419;"	d
GL_MATRIX29_ARB	/usr/include/SDL2/SDL_opengl.h	1420;"	d
GL_MATRIX2_ARB	/usr/include/SDL2/SDL_opengl.h	1393;"	d
GL_MATRIX2_NV	/usr/include/SDL2/SDL_opengl.h	3596;"	d
GL_MATRIX30_ARB	/usr/include/SDL2/SDL_opengl.h	1421;"	d
GL_MATRIX31_ARB	/usr/include/SDL2/SDL_opengl.h	1422;"	d
GL_MATRIX3_ARB	/usr/include/SDL2/SDL_opengl.h	1394;"	d
GL_MATRIX3_NV	/usr/include/SDL2/SDL_opengl.h	3597;"	d
GL_MATRIX4_ARB	/usr/include/SDL2/SDL_opengl.h	1395;"	d
GL_MATRIX4_NV	/usr/include/SDL2/SDL_opengl.h	3598;"	d
GL_MATRIX5_ARB	/usr/include/SDL2/SDL_opengl.h	1396;"	d
GL_MATRIX5_NV	/usr/include/SDL2/SDL_opengl.h	3599;"	d
GL_MATRIX6_ARB	/usr/include/SDL2/SDL_opengl.h	1397;"	d
GL_MATRIX6_NV	/usr/include/SDL2/SDL_opengl.h	3600;"	d
GL_MATRIX7_ARB	/usr/include/SDL2/SDL_opengl.h	1398;"	d
GL_MATRIX7_NV	/usr/include/SDL2/SDL_opengl.h	3601;"	d
GL_MATRIX8_ARB	/usr/include/SDL2/SDL_opengl.h	1399;"	d
GL_MATRIX9_ARB	/usr/include/SDL2/SDL_opengl.h	1400;"	d
GL_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	3904;"	d
GL_MATRIX_INDEX_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1277;"	d
GL_MATRIX_INDEX_ARRAY_POINTER_ARB	/usr/include/SDL2/SDL_opengl.h	1282;"	d
GL_MATRIX_INDEX_ARRAY_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1279;"	d
GL_MATRIX_INDEX_ARRAY_STRIDE_ARB	/usr/include/SDL2/SDL_opengl.h	1281;"	d
GL_MATRIX_INDEX_ARRAY_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1280;"	d
GL_MATRIX_PALETTE_ARB	/usr/include/SDL2/SDL_opengl.h	1273;"	d
GL_MAT_AMBIENT_AND_DIFFUSE_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2740;"	d
GL_MAT_AMBIENT_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2739;"	d
GL_MAT_COLOR_INDEXES_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2743;"	d
GL_MAT_DIFFUSE_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2741;"	d
GL_MAT_EMISSION_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2742;"	d
GL_MAT_SHININESS_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2744;"	d
GL_MAT_SPECULAR_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2745;"	d
GL_MAX	/usr/include/SDL2/SDL_opengl.h	186;"	d
GL_MAX_3D_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl.h	146;"	d
GL_MAX_3D_TEXTURE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2293;"	d
GL_MAX_3D_TEXTURE_SIZE_OES	/usr/include/SDL2/SDL_opengles2.h	1121;"	d
GL_MAX_4D_TEXTURE_SIZE_SGIS	/usr/include/SDL2/SDL_opengl.h	2401;"	d
GL_MAX_ACTIVE_LIGHTS_SGIX	/usr/include/SDL2/SDL_opengl.h	2862;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	/usr/include/SDL2/SDL_opengl.h	606;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS_EXT	/usr/include/SDL2/SDL_opengl.h	4470;"	d
GL_MAX_ASYNC_DRAW_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl.h	2945;"	d
GL_MAX_ASYNC_HISTOGRAM_SGIX	/usr/include/SDL2/SDL_opengl.h	2951;"	d
GL_MAX_ASYNC_READ_PIXELS_SGIX	/usr/include/SDL2/SDL_opengl.h	2946;"	d
GL_MAX_ASYNC_TEX_IMAGE_SGIX	/usr/include/SDL2/SDL_opengl.h	2944;"	d
GL_MAX_BINDABLE_UNIFORM_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4577;"	d
GL_MAX_CLIPMAP_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2532;"	d
GL_MAX_CLIPMAP_VIRTUAL_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2533;"	d
GL_MAX_CLIP_DISTANCES	/usr/include/SDL2/SDL_opengl.h	591;"	d
GL_MAX_COLOR_ATTACHMENTS	/usr/include/SDL2/SDL_opengl.h	1673;"	d
GL_MAX_COLOR_ATTACHMENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4265;"	d
GL_MAX_COLOR_ATTACHMENTS_NV	/usr/include/SDL2/SDL_opengles2.h	1717;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH	/usr/include/SDL2/SDL_opengl.h	229;"	d
GL_MAX_COLOR_MATRIX_STACK_DEPTH_SGI	/usr/include/SDL2/SDL_opengl.h	2350;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	/usr/include/SDL2/SDL_opengl.h	1911;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	1818;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	1817;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS_EXT	/usr/include/SDL2/SDL_opengl.h	4928;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2079;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2080;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl.h	502;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengles2.h	618;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1527;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	1813;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	1816;"	d
GL_MAX_CONVOLUTION_HEIGHT	/usr/include/SDL2/SDL_opengl.h	204;"	d
GL_MAX_CONVOLUTION_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	2336;"	d
GL_MAX_CONVOLUTION_WIDTH	/usr/include/SDL2/SDL_opengl.h	203;"	d
GL_MAX_CONVOLUTION_WIDTH_EXT	/usr/include/SDL2/SDL_opengl.h	2335;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl.h	310;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengles2.h	690;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1199;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	3167;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	/usr/include/SDL2/SDL_opengles2.h	1183;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	/usr/include/SDL2/SDL_opengles2.h	1194;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_AMD	/usr/include/SDL2/SDL_opengl.h	5074;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	/usr/include/SDL2/SDL_opengl.h	2199;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	/usr/include/SDL2/SDL_opengles2.h	1193;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	2198;"	d
GL_MAX_DEFORMATION_ORDER_SGIX	/usr/include/SDL2/SDL_opengl.h	2667;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	/usr/include/SDL2/SDL_opengl.h	1912;"	d
GL_MAX_DRAW_BUFFERS	/usr/include/SDL2/SDL_opengl.h	475;"	d
GL_MAX_DRAW_BUFFERS_ARB	/usr/include/SDL2/SDL_opengl.h	1554;"	d
GL_MAX_DRAW_BUFFERS_ATI	/usr/include/SDL2/SDL_opengl.h	4079;"	d
GL_MAX_DRAW_BUFFERS_NV	/usr/include/SDL2/SDL_opengles2.h	1680;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	/usr/include/SDL2/SDL_opengl.h	1964;"	d
GL_MAX_ELEMENTS_INDICES	/usr/include/SDL2/SDL_opengl.h	157;"	d
GL_MAX_ELEMENTS_INDICES_EXT	/usr/include/SDL2/SDL_opengl.h	2891;"	d
GL_MAX_ELEMENTS_VERTICES	/usr/include/SDL2/SDL_opengl.h	156;"	d
GL_MAX_ELEMENTS_VERTICES_EXT	/usr/include/SDL2/SDL_opengl.h	2890;"	d
GL_MAX_EXT	/usr/include/SDL2/SDL_opengl.h	2557;"	d
GL_MAX_EXT	/usr/include/SDL2/SDL_opengles2.h	1412;"	d
GL_MAX_FOG_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl.h	2687;"	d
GL_MAX_FRAGMENT_BINDABLE_UNIFORMS_EXT	/usr/include/SDL2/SDL_opengl.h	4575;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	909;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	/usr/include/SDL2/SDL_opengl.h	2012;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET_NV	/usr/include/SDL2/SDL_opengl.h	5003;"	d
GL_MAX_FRAGMENT_LIGHTS_SGIX	/usr/include/SDL2/SDL_opengl.h	2861;"	d
GL_MAX_FRAGMENT_PROGRAM_LOCAL_PARAMETERS_NV	/usr/include/SDL2/SDL_opengl.h	4143;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	1812;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	498;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl.h	1534;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengl.h	2119;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengles2.h	621;"	d
GL_MAX_FRAMEZOOM_FACTOR_SGIX	/usr/include/SDL2/SDL_opengl.h	2652;"	d
GL_MAX_GENERAL_COMBINERS_NV	/usr/include/SDL2/SDL_opengl.h	3258;"	d
GL_MAX_GEOMETRY_BINDABLE_UNIFORMS_EXT	/usr/include/SDL2/SDL_opengl.h	4576;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	907;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	908;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	/usr/include/SDL2/SDL_opengl.h	904;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_ARB	/usr/include/SDL2/SDL_opengl.h	1738;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES_EXT	/usr/include/SDL2/SDL_opengl.h	4409;"	d
GL_MAX_GEOMETRY_PROGRAM_INVOCATIONS_NV	/usr/include/SDL2/SDL_opengl.h	5001;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	/usr/include/SDL2/SDL_opengl.h	2010;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl.h	896;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1727;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS_EXT	/usr/include/SDL2/SDL_opengl.h	4391;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	905;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl.h	1739;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4410;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	1811;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	903;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl.h	1737;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4408;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl.h	1735;"	d
GL_MAX_GEOMETRY_VARYING_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4405;"	d
GL_MAX_IMAGE_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl.h	4967;"	d
GL_MAX_IMAGE_UNITS_EXT	/usr/include/SDL2/SDL_opengl.h	4927;"	d
GL_MAX_INTEGER_SAMPLES	/usr/include/SDL2/SDL_opengl.h	1913;"	d
GL_MAX_LABEL_LENGTH	/usr/include/SDL2/SDL_opengles2.h	1192;"	d
GL_MAX_MAP_TESSELLATION_NV	/usr/include/SDL2/SDL_opengl.h	3471;"	d
GL_MAX_MATRIX_PALETTE_STACK_DEPTH_ARB	/usr/include/SDL2/SDL_opengl.h	1274;"	d
GL_MAX_MULTISAMPLE_COVERAGE_MODES_NV	/usr/include/SDL2/SDL_opengl.h	4516;"	d
GL_MAX_MULTIVIEW_BUFFERS_EXT	/usr/include/SDL2/SDL_opengles2.h	1470;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL2/SDL_opengl.h	3914;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3917;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL2/SDL_opengl.h	3918;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3916;"	d
GL_MAX_OPTIMIZED_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3915;"	d
GL_MAX_PALETTE_MATRICES_ARB	/usr/include/SDL2/SDL_opengl.h	1275;"	d
GL_MAX_PATCH_VERTICES	/usr/include/SDL2/SDL_opengl.h	2065;"	d
GL_MAX_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	2978;"	d
GL_MAX_PN_TRIANGLES_TESSELATION_LEVEL_ATI	/usr/include/SDL2/SDL_opengl.h	3818;"	d
GL_MAX_PROGRAM_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl.h	1384;"	d
GL_MAX_PROGRAM_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1433;"	d
GL_MAX_PROGRAM_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl.h	1380;"	d
GL_MAX_PROGRAM_ATTRIB_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4374;"	d
GL_MAX_PROGRAM_CALL_DEPTH_NV	/usr/include/SDL2/SDL_opengl.h	4232;"	d
GL_MAX_PROGRAM_ENV_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl.h	1388;"	d
GL_MAX_PROGRAM_EXEC_INSTRUCTIONS_NV	/usr/include/SDL2/SDL_opengl.h	4231;"	d
GL_MAX_PROGRAM_GENERIC_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	4376;"	d
GL_MAX_PROGRAM_GENERIC_RESULTS_NV	/usr/include/SDL2/SDL_opengl.h	4377;"	d
GL_MAX_PROGRAM_IF_DEPTH_NV	/usr/include/SDL2/SDL_opengl.h	4233;"	d
GL_MAX_PROGRAM_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1368;"	d
GL_MAX_PROGRAM_LOCAL_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl.h	1387;"	d
GL_MAX_PROGRAM_LOOP_COUNT_NV	/usr/include/SDL2/SDL_opengl.h	4235;"	d
GL_MAX_PROGRAM_LOOP_DEPTH_NV	/usr/include/SDL2/SDL_opengl.h	4234;"	d
GL_MAX_PROGRAM_MATRICES_ARB	/usr/include/SDL2/SDL_opengl.h	1354;"	d
GL_MAX_PROGRAM_MATRIX_STACK_DEPTH_ARB	/usr/include/SDL2/SDL_opengl.h	1353;"	d
GL_MAX_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl.h	1386;"	d
GL_MAX_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1436;"	d
GL_MAX_PROGRAM_NATIVE_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl.h	1382;"	d
GL_MAX_PROGRAM_NATIVE_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1370;"	d
GL_MAX_PROGRAM_NATIVE_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl.h	1378;"	d
GL_MAX_PROGRAM_NATIVE_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl.h	1374;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1438;"	d
GL_MAX_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1437;"	d
GL_MAX_PROGRAM_OUTPUT_VERTICES_NV	/usr/include/SDL2/SDL_opengl.h	4386;"	d
GL_MAX_PROGRAM_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl.h	1376;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_BINDINGS_NV	/usr/include/SDL2/SDL_opengl.h	4529;"	d
GL_MAX_PROGRAM_PARAMETER_BUFFER_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	4530;"	d
GL_MAX_PROGRAM_PATCH_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	5048;"	d
GL_MAX_PROGRAM_RESULT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4375;"	d
GL_MAX_PROGRAM_SUBROUTINE_NUM_NV	/usr/include/SDL2/SDL_opengl.h	5006;"	d
GL_MAX_PROGRAM_SUBROUTINE_PARAMETERS_NV	/usr/include/SDL2/SDL_opengl.h	5005;"	d
GL_MAX_PROGRAM_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl.h	1372;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	/usr/include/SDL2/SDL_opengl.h	608;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET_NV	/usr/include/SDL2/SDL_opengl.h	4371;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	/usr/include/SDL2/SDL_opengl.h	998;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	/usr/include/SDL2/SDL_opengl.h	1940;"	d
GL_MAX_PROGRAM_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1435;"	d
GL_MAX_PROGRAM_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1434;"	d
GL_MAX_PROGRAM_TOTAL_OUTPUT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4387;"	d
GL_MAX_RATIONAL_EVAL_ORDER_NV	/usr/include/SDL2/SDL_opengl.h	3472;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengl.h	835;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1577;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3491;"	d
GL_MAX_RENDERBUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	1644;"	d
GL_MAX_RENDERBUFFER_SIZE	/usr/include/SDL2/SDL_opengles2.h	819;"	d
GL_MAX_RENDERBUFFER_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4249;"	d
GL_MAX_SAMPLES	/usr/include/SDL2/SDL_opengl.h	1708;"	d
GL_MAX_SAMPLES_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1285;"	d
GL_MAX_SAMPLES_APPLE	/usr/include/SDL2/SDL_opengles2.h	1330;"	d
GL_MAX_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl.h	4345;"	d
GL_MAX_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2.h	1461;"	d
GL_MAX_SAMPLES_IMG	/usr/include/SDL2/SDL_opengles2.h	1652;"	d
GL_MAX_SAMPLE_MASK_WORDS	/usr/include/SDL2/SDL_opengl.h	1896;"	d
GL_MAX_SAMPLE_MASK_WORDS_NV	/usr/include/SDL2/SDL_opengl.h	4697;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	/usr/include/SDL2/SDL_opengl.h	1875;"	d
GL_MAX_SERVER_WAIT_TIMEOUT_APPLE	/usr/include/SDL2/SDL_opengles2.h	1361;"	d
GL_MAX_SHADER_BUFFER_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4882;"	d
GL_MAX_SHININESS_NV	/usr/include/SDL2/SDL_opengl.h	3205;"	d
GL_MAX_SPOT_EXPONENT_NV	/usr/include/SDL2/SDL_opengl.h	3206;"	d
GL_MAX_SUBROUTINES	/usr/include/SDL2/SDL_opengl.h	2039;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	/usr/include/SDL2/SDL_opengl.h	2040;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2077;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2071;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl.h	2069;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2073;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	2075;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2067;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2078;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2074;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl.h	2070;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	2076;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2068;"	d
GL_MAX_TESS_GEN_LEVEL	/usr/include/SDL2/SDL_opengl.h	2066;"	d
GL_MAX_TESS_PATCH_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	2072;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	828;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1763;"	d
GL_MAX_TEXTURE_BUFFER_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4477;"	d
GL_MAX_TEXTURE_COORDS	/usr/include/SDL2/SDL_opengl.h	549;"	d
GL_MAX_TEXTURE_COORDS_ARB	/usr/include/SDL2/SDL_opengl.h	1439;"	d
GL_MAX_TEXTURE_COORDS_NV	/usr/include/SDL2/SDL_opengl.h	4145;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl.h	495;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengles2.h	620;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1440;"	d
GL_MAX_TEXTURE_IMAGE_UNITS_NV	/usr/include/SDL2/SDL_opengl.h	4146;"	d
GL_MAX_TEXTURE_LOD_BIAS	/usr/include/SDL2/SDL_opengl.h	371;"	d
GL_MAX_TEXTURE_LOD_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	3178;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengl.h	3185;"	d
GL_MAX_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengles2.h	1547;"	d
GL_MAX_TEXTURE_SIZE	/usr/include/SDL2/SDL_opengles2.h	553;"	d
GL_MAX_TEXTURE_UNITS	/usr/include/SDL2/SDL_opengl.h	323;"	d
GL_MAX_TEXTURE_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1162;"	d
GL_MAX_TRACK_MATRICES_NV	/usr/include/SDL2/SDL_opengl.h	3593;"	d
GL_MAX_TRACK_MATRIX_STACK_DEPTH_NV	/usr/include/SDL2/SDL_opengl.h	3592;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	/usr/include/SDL2/SDL_opengl.h	2101;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	4559;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	632;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4661;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	/usr/include/SDL2/SDL_opengl.h	633;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_EXT	/usr/include/SDL2/SDL_opengl.h	4662;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	4560;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	625;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4663;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4549;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	/usr/include/SDL2/SDL_opengl.h	1815;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	/usr/include/SDL2/SDL_opengl.h	1814;"	d
GL_MAX_VARYING_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	611;"	d
GL_MAX_VARYING_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4407;"	d
GL_MAX_VARYING_FLOATS	/usr/include/SDL2/SDL_opengl.h	500;"	d
GL_MAX_VARYING_FLOATS_ARB	/usr/include/SDL2/SDL_opengl.h	1525;"	d
GL_MAX_VARYING_VECTORS	/usr/include/SDL2/SDL_opengl.h	2118;"	d
GL_MAX_VARYING_VECTORS	/usr/include/SDL2/SDL_opengles2.h	617;"	d
GL_MAX_VERTEX_ARRAY_RANGE_ELEMENT_NV	/usr/include/SDL2/SDL_opengl.h	3213;"	d
GL_MAX_VERTEX_ATTRIBS	/usr/include/SDL2/SDL_opengl.h	493;"	d
GL_MAX_VERTEX_ATTRIBS	/usr/include/SDL2/SDL_opengles2.h	615;"	d
GL_MAX_VERTEX_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl.h	1362;"	d
GL_MAX_VERTEX_BINDABLE_UNIFORMS_EXT	/usr/include/SDL2/SDL_opengl.h	4574;"	d
GL_MAX_VERTEX_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2734;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	906;"	d
GL_MAX_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL2/SDL_opengl.h	3909;"	d
GL_MAX_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3911;"	d
GL_MAX_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL2/SDL_opengl.h	3913;"	d
GL_MAX_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3912;"	d
GL_MAX_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3910;"	d
GL_MAX_VERTEX_STREAMS	/usr/include/SDL2/SDL_opengl.h	2102;"	d
GL_MAX_VERTEX_STREAMS_ATI	/usr/include/SDL2/SDL_opengl.h	3953;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengl.h	501;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	/usr/include/SDL2/SDL_opengles2.h	619;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1526;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	/usr/include/SDL2/SDL_opengl.h	1810;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	/usr/include/SDL2/SDL_opengl.h	499;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl.h	1524;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengl.h	2117;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	/usr/include/SDL2/SDL_opengles2.h	616;"	d
GL_MAX_VERTEX_UNITS_ARB	/usr/include/SDL2/SDL_opengl.h	1228;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_ARB	/usr/include/SDL2/SDL_opengl.h	1736;"	d
GL_MAX_VERTEX_VARYING_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4406;"	d
GL_MAX_VIEWPORTS	/usr/include/SDL2/SDL_opengl.h	2165;"	d
GL_MAX_VIEWPORT_DIMS	/usr/include/SDL2/SDL_opengles2.h	554;"	d
GL_MEDIUM_FLOAT	/usr/include/SDL2/SDL_opengl.h	2110;"	d
GL_MEDIUM_FLOAT	/usr/include/SDL2/SDL_opengles2.h	774;"	d
GL_MEDIUM_INT	/usr/include/SDL2/SDL_opengl.h	2113;"	d
GL_MEDIUM_INT	/usr/include/SDL2/SDL_opengles2.h	777;"	d
GL_MESAX_texture_stack	/usr/include/SDL2/SDL_opengl.h	9767;"	d
GL_MESA_pack_invert	/usr/include/SDL2/SDL_opengl.h	9659;"	d
GL_MESA_resize_buffers	/usr/include/SDL2/SDL_opengl.h	8579;"	d
GL_MESA_window_pos	/usr/include/SDL2/SDL_opengl.h	8587;"	d
GL_MESA_ycbcr_texture	/usr/include/SDL2/SDL_opengl.h	9663;"	d
GL_MIN	/usr/include/SDL2/SDL_opengl.h	185;"	d
GL_MINMAX	/usr/include/SDL2/SDL_opengl.h	223;"	d
GL_MINMAX_EXT	/usr/include/SDL2/SDL_opengl.h	2318;"	d
GL_MINMAX_FORMAT	/usr/include/SDL2/SDL_opengl.h	224;"	d
GL_MINMAX_FORMAT_EXT	/usr/include/SDL2/SDL_opengl.h	2319;"	d
GL_MINMAX_SINK	/usr/include/SDL2/SDL_opengl.h	225;"	d
GL_MINMAX_SINK_EXT	/usr/include/SDL2/SDL_opengl.h	2320;"	d
GL_MINOR_VERSION	/usr/include/SDL2/SDL_opengl.h	593;"	d
GL_MIN_EXT	/usr/include/SDL2/SDL_opengl.h	2556;"	d
GL_MIN_EXT	/usr/include/SDL2/SDL_opengles2.h	1411;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	/usr/include/SDL2/SDL_opengl.h	2011;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET_NV	/usr/include/SDL2/SDL_opengl.h	5002;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	/usr/include/SDL2/SDL_opengl.h	607;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET_NV	/usr/include/SDL2/SDL_opengl.h	4370;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	/usr/include/SDL2/SDL_opengl.h	997;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	/usr/include/SDL2/SDL_opengl.h	1939;"	d
GL_MIN_SAMPLE_SHADING_VALUE	/usr/include/SDL2/SDL_opengl.h	996;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	/usr/include/SDL2/SDL_opengl.h	1925;"	d
GL_MIRRORED_REPEAT	/usr/include/SDL2/SDL_opengl.h	370;"	d
GL_MIRRORED_REPEAT	/usr/include/SDL2/SDL_opengles2.h	730;"	d
GL_MIRRORED_REPEAT_ARB	/usr/include/SDL2/SDL_opengl.h	1319;"	d
GL_MIRRORED_REPEAT_IBM	/usr/include/SDL2/SDL_opengl.h	3445;"	d
GL_MIRROR_CLAMP_ATI	/usr/include/SDL2/SDL_opengl.h	3434;"	d
GL_MIRROR_CLAMP_EXT	/usr/include/SDL2/SDL_opengl.h	4200;"	d
GL_MIRROR_CLAMP_TO_BORDER_EXT	/usr/include/SDL2/SDL_opengl.h	4202;"	d
GL_MIRROR_CLAMP_TO_EDGE_ATI	/usr/include/SDL2/SDL_opengl.h	3435;"	d
GL_MIRROR_CLAMP_TO_EDGE_EXT	/usr/include/SDL2/SDL_opengl.h	4201;"	d
GL_MODELVIEW0_ARB	/usr/include/SDL2/SDL_opengl.h	1238;"	d
GL_MODELVIEW0_EXT	/usr/include/SDL2/SDL_opengl.h	3194;"	d
GL_MODELVIEW0_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	3191;"	d
GL_MODELVIEW0_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	3189;"	d
GL_MODELVIEW10_ARB	/usr/include/SDL2/SDL_opengl.h	1248;"	d
GL_MODELVIEW11_ARB	/usr/include/SDL2/SDL_opengl.h	1249;"	d
GL_MODELVIEW12_ARB	/usr/include/SDL2/SDL_opengl.h	1250;"	d
GL_MODELVIEW13_ARB	/usr/include/SDL2/SDL_opengl.h	1251;"	d
GL_MODELVIEW14_ARB	/usr/include/SDL2/SDL_opengl.h	1252;"	d
GL_MODELVIEW15_ARB	/usr/include/SDL2/SDL_opengl.h	1253;"	d
GL_MODELVIEW16_ARB	/usr/include/SDL2/SDL_opengl.h	1254;"	d
GL_MODELVIEW17_ARB	/usr/include/SDL2/SDL_opengl.h	1255;"	d
GL_MODELVIEW18_ARB	/usr/include/SDL2/SDL_opengl.h	1256;"	d
GL_MODELVIEW19_ARB	/usr/include/SDL2/SDL_opengl.h	1257;"	d
GL_MODELVIEW1_ARB	/usr/include/SDL2/SDL_opengl.h	1239;"	d
GL_MODELVIEW1_EXT	/usr/include/SDL2/SDL_opengl.h	3195;"	d
GL_MODELVIEW1_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	3192;"	d
GL_MODELVIEW1_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	3190;"	d
GL_MODELVIEW20_ARB	/usr/include/SDL2/SDL_opengl.h	1258;"	d
GL_MODELVIEW21_ARB	/usr/include/SDL2/SDL_opengl.h	1259;"	d
GL_MODELVIEW22_ARB	/usr/include/SDL2/SDL_opengl.h	1260;"	d
GL_MODELVIEW23_ARB	/usr/include/SDL2/SDL_opengl.h	1261;"	d
GL_MODELVIEW24_ARB	/usr/include/SDL2/SDL_opengl.h	1262;"	d
GL_MODELVIEW25_ARB	/usr/include/SDL2/SDL_opengl.h	1263;"	d
GL_MODELVIEW26_ARB	/usr/include/SDL2/SDL_opengl.h	1264;"	d
GL_MODELVIEW27_ARB	/usr/include/SDL2/SDL_opengl.h	1265;"	d
GL_MODELVIEW28_ARB	/usr/include/SDL2/SDL_opengl.h	1266;"	d
GL_MODELVIEW29_ARB	/usr/include/SDL2/SDL_opengl.h	1267;"	d
GL_MODELVIEW2_ARB	/usr/include/SDL2/SDL_opengl.h	1240;"	d
GL_MODELVIEW30_ARB	/usr/include/SDL2/SDL_opengl.h	1268;"	d
GL_MODELVIEW31_ARB	/usr/include/SDL2/SDL_opengl.h	1269;"	d
GL_MODELVIEW3_ARB	/usr/include/SDL2/SDL_opengl.h	1241;"	d
GL_MODELVIEW4_ARB	/usr/include/SDL2/SDL_opengl.h	1242;"	d
GL_MODELVIEW5_ARB	/usr/include/SDL2/SDL_opengl.h	1243;"	d
GL_MODELVIEW6_ARB	/usr/include/SDL2/SDL_opengl.h	1244;"	d
GL_MODELVIEW7_ARB	/usr/include/SDL2/SDL_opengl.h	1245;"	d
GL_MODELVIEW8_ARB	/usr/include/SDL2/SDL_opengl.h	1246;"	d
GL_MODELVIEW9_ARB	/usr/include/SDL2/SDL_opengl.h	1247;"	d
GL_MODELVIEW_PROJECTION_NV	/usr/include/SDL2/SDL_opengl.h	3587;"	d
GL_MODULATE_ADD_ATI	/usr/include/SDL2/SDL_opengl.h	4104;"	d
GL_MODULATE_SIGNED_ADD_ATI	/usr/include/SDL2/SDL_opengl.h	4105;"	d
GL_MODULATE_SUBTRACT_ATI	/usr/include/SDL2/SDL_opengl.h	4106;"	d
GL_MOV_ATI	/usr/include/SDL2/SDL_opengl.h	3775;"	d
GL_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	293;"	d
GL_MULTISAMPLE_3DFX	/usr/include/SDL2/SDL_opengl.h	3367;"	d
GL_MULTISAMPLE_ARB	/usr/include/SDL2/SDL_opengl.h	1173;"	d
GL_MULTISAMPLE_BIT	/usr/include/SDL2/SDL_opengl.h	328;"	d
GL_MULTISAMPLE_BIT_3DFX	/usr/include/SDL2/SDL_opengl.h	3370;"	d
GL_MULTISAMPLE_BIT_ARB	/usr/include/SDL2/SDL_opengl.h	1181;"	d
GL_MULTISAMPLE_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	3393;"	d
GL_MULTISAMPLE_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2.h	1827;"	d
GL_MULTISAMPLE_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2.h	1828;"	d
GL_MULTISAMPLE_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2.h	1829;"	d
GL_MULTISAMPLE_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2.h	1830;"	d
GL_MULTISAMPLE_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2.h	1831;"	d
GL_MULTISAMPLE_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2.h	1832;"	d
GL_MULTISAMPLE_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2.h	1833;"	d
GL_MULTISAMPLE_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2.h	1834;"	d
GL_MULTISAMPLE_COVERAGE_MODES_NV	/usr/include/SDL2/SDL_opengl.h	4517;"	d
GL_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl.h	3377;"	d
GL_MULTISAMPLE_FILTER_HINT_NV	/usr/include/SDL2/SDL_opengl.h	3981;"	d
GL_MULTISAMPLE_SGIS	/usr/include/SDL2/SDL_opengl.h	2459;"	d
GL_MULTIVIEW_EXT	/usr/include/SDL2/SDL_opengles2.h	1467;"	d
GL_MUL_ATI	/usr/include/SDL2/SDL_opengl.h	3777;"	d
GL_MVP_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	3939;"	d
GL_NAMED_STRING_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	1948;"	d
GL_NAMED_STRING_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1949;"	d
GL_NATIVE_GRAPHICS_BEGIN_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2760;"	d
GL_NATIVE_GRAPHICS_END_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2761;"	d
GL_NATIVE_GRAPHICS_HANDLE_PGI	/usr/include/SDL2/SDL_opengl.h	2759;"	d
GL_NEAREST	/usr/include/SDL2/SDL_opengles2.h	661;"	d
GL_NEAREST_CLIPMAP_LINEAR_SGIX	/usr/include/SDL2/SDL_opengl.h	2535;"	d
GL_NEAREST_CLIPMAP_NEAREST_SGIX	/usr/include/SDL2/SDL_opengl.h	2534;"	d
GL_NEAREST_MIPMAP_LINEAR	/usr/include/SDL2/SDL_opengles2.h	669;"	d
GL_NEAREST_MIPMAP_NEAREST	/usr/include/SDL2/SDL_opengles2.h	667;"	d
GL_NEGATE_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3812;"	d
GL_NEGATIVE_ONE_EXT	/usr/include/SDL2/SDL_opengl.h	3935;"	d
GL_NEGATIVE_W_EXT	/usr/include/SDL2/SDL_opengl.h	3932;"	d
GL_NEGATIVE_X_EXT	/usr/include/SDL2/SDL_opengl.h	3929;"	d
GL_NEGATIVE_Y_EXT	/usr/include/SDL2/SDL_opengl.h	3930;"	d
GL_NEGATIVE_Z_EXT	/usr/include/SDL2/SDL_opengl.h	3931;"	d
GL_NEVER	/usr/include/SDL2/SDL_opengles2.h	635;"	d
GL_NEXT_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4566;"	d
GL_NEXT_VIDEO_CAPTURE_BUFFER_STATUS_NV	/usr/include/SDL2/SDL_opengl.h	4843;"	d
GL_NICEST	/usr/include/SDL2/SDL_opengles2.h	583;"	d
GL_NONE	/usr/include/SDL2/SDL_opengles2.h	809;"	d
GL_NORMALIZED_RANGE_EXT	/usr/include/SDL2/SDL_opengl.h	3936;"	d
GL_NORMAL_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4890;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	438;"	d
GL_NORMAL_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1451;"	d
GL_NORMAL_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2494;"	d
GL_NORMAL_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	2483;"	d
GL_NORMAL_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4900;"	d
GL_NORMAL_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3322;"	d
GL_NORMAL_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3330;"	d
GL_NORMAL_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl.h	2960;"	d
GL_NORMAL_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	2509;"	d
GL_NORMAL_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	2493;"	d
GL_NORMAL_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	2492;"	d
GL_NORMAL_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2746;"	d
GL_NORMAL_MAP	/usr/include/SDL2/SDL_opengl.h	329;"	d
GL_NORMAL_MAP_ARB	/usr/include/SDL2/SDL_opengl.h	1188;"	d
GL_NORMAL_MAP_EXT	/usr/include/SDL2/SDL_opengl.h	3156;"	d
GL_NORMAL_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3151;"	d
GL_NOTEQUAL	/usr/include/SDL2/SDL_opengles2.h	640;"	d
GL_NO_ERROR	/usr/include/SDL2/SDL_opengles2.h	511;"	d
GL_NO_RESET_NOTIFICATION_ARB	/usr/include/SDL2/SDL_opengl.h	2214;"	d
GL_NO_RESET_NOTIFICATION_EXT	/usr/include/SDL2/SDL_opengles2.h	1501;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	/usr/include/SDL2/SDL_opengl.h	2041;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengl.h	316;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	/usr/include/SDL2/SDL_opengles2.h	577;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS_ARB	/usr/include/SDL2/SDL_opengl.h	1212;"	d
GL_NUM_EXTENSIONS	/usr/include/SDL2/SDL_opengl.h	594;"	d
GL_NUM_FILL_STREAMS_NV	/usr/include/SDL2/SDL_opengl.h	4646;"	d
GL_NUM_FRAGMENT_CONSTANTS_ATI	/usr/include/SDL2/SDL_opengl.h	3788;"	d
GL_NUM_FRAGMENT_REGISTERS_ATI	/usr/include/SDL2/SDL_opengl.h	3787;"	d
GL_NUM_GENERAL_COMBINERS_NV	/usr/include/SDL2/SDL_opengl.h	3259;"	d
GL_NUM_INPUT_INTERPOLATOR_COMPONENTS_ATI	/usr/include/SDL2/SDL_opengl.h	3792;"	d
GL_NUM_INSTRUCTIONS_PER_PASS_ATI	/usr/include/SDL2/SDL_opengl.h	3790;"	d
GL_NUM_INSTRUCTIONS_TOTAL_ATI	/usr/include/SDL2/SDL_opengl.h	3791;"	d
GL_NUM_LOOPBACK_COMPONENTS_ATI	/usr/include/SDL2/SDL_opengl.h	3793;"	d
GL_NUM_PASSES_ATI	/usr/include/SDL2/SDL_opengl.h	3789;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl.h	2125;"	d
GL_NUM_PROGRAM_BINARY_FORMATS_OES	/usr/include/SDL2/SDL_opengles2.h	1053;"	d
GL_NUM_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl.h	2116;"	d
GL_NUM_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengles2.h	770;"	d
GL_NUM_VIDEO_CAPTURE_STREAMS_NV	/usr/include/SDL2/SDL_opengl.h	4842;"	d
GL_NV_blend_square	/usr/include/SDL2/SDL_opengl.h	8571;"	d
GL_NV_conditional_render	/usr/include/SDL2/SDL_opengl.h	10109;"	d
GL_NV_copy_depth_to_color	/usr/include/SDL2/SDL_opengl.h	8991;"	d
GL_NV_copy_image	/usr/include/SDL2/SDL_opengl.h	10775;"	d
GL_NV_coverage_sample	/usr/include/SDL2/SDL_opengles2.h	2591;"	d
GL_NV_depth_buffer_float	/usr/include/SDL2/SDL_opengl.h	9979;"	d
GL_NV_depth_clamp	/usr/include/SDL2/SDL_opengl.h	9297;"	d
GL_NV_depth_nonlinear	/usr/include/SDL2/SDL_opengles2.h	2602;"	d
GL_NV_draw_buffers	/usr/include/SDL2/SDL_opengles2.h	2607;"	d
GL_NV_evaluators	/usr/include/SDL2/SDL_opengl.h	8779;"	d
GL_NV_explicit_multisample	/usr/include/SDL2/SDL_opengl.h	10583;"	d
GL_NV_fbo_color_attachments	/usr/include/SDL2/SDL_opengles2.h	2616;"	d
GL_NV_fence	/usr/include/SDL2/SDL_opengl.h	8759;"	d
GL_NV_fence	/usr/include/SDL2/SDL_opengles2.h	2621;"	d
GL_NV_float_buffer	/usr/include/SDL2/SDL_opengl.h	9454;"	d
GL_NV_fog_distance	/usr/include/SDL2/SDL_opengl.h	8563;"	d
GL_NV_fragment_program	/usr/include/SDL2/SDL_opengl.h	9458;"	d
GL_NV_fragment_program2	/usr/include/SDL2/SDL_opengl.h	9675;"	d
GL_NV_fragment_program4	/usr/include/SDL2/SDL_opengl.h	9991;"	d
GL_NV_fragment_program_option	/usr/include/SDL2/SDL_opengl.h	9671;"	d
GL_NV_framebuffer_multisample_coverage	/usr/include/SDL2/SDL_opengl.h	9995;"	d
GL_NV_geometry_program4	/usr/include/SDL2/SDL_opengl.h	9839;"	d
GL_NV_geometry_shader4	/usr/include/SDL2/SDL_opengl.h	10007;"	d
GL_NV_gpu_program4	/usr/include/SDL2/SDL_opengl.h	9801;"	d
GL_NV_gpu_program5	/usr/include/SDL2/SDL_opengl.h	10921;"	d
GL_NV_gpu_shader5	/usr/include/SDL2/SDL_opengl.h	10931;"	d
GL_NV_half_float	/usr/include/SDL2/SDL_opengl.h	9477;"	d
GL_NV_light_max_exponent	/usr/include/SDL2/SDL_opengl.h	8517;"	d
GL_NV_multisample_coverage	/usr/include/SDL2/SDL_opengl.h	11055;"	d
GL_NV_multisample_filter_hint	/usr/include/SDL2/SDL_opengl.h	9293;"	d
GL_NV_occlusion_query	/usr/include/SDL2/SDL_opengl.h	9301;"	d
GL_NV_packed_depth_stencil	/usr/include/SDL2/SDL_opengl.h	8803;"	d
GL_NV_parameter_buffer_object	/usr/include/SDL2/SDL_opengl.h	10011;"	d
GL_NV_parameter_buffer_object2	/usr/include/SDL2/SDL_opengl.h	10795;"	d
GL_NV_pixel_data_range	/usr/include/SDL2/SDL_opengl.h	9575;"	d
GL_NV_point_sprite	/usr/include/SDL2/SDL_opengl.h	9321;"	d
GL_NV_present_video	/usr/include/SDL2/SDL_opengl.h	10119;"	d
GL_NV_primitive_restart	/usr/include/SDL2/SDL_opengl.h	9585;"	d
GL_NV_read_buffer	/usr/include/SDL2/SDL_opengles2.h	2642;"	d
GL_NV_read_buffer_front	/usr/include/SDL2/SDL_opengles2.h	2651;"	d
GL_NV_read_depth	/usr/include/SDL2/SDL_opengles2.h	2656;"	d
GL_NV_read_depth_stencil	/usr/include/SDL2/SDL_opengles2.h	2661;"	d
GL_NV_read_stencil	/usr/include/SDL2/SDL_opengles2.h	2666;"	d
GL_NV_register_combiners	/usr/include/SDL2/SDL_opengl.h	8531;"	d
GL_NV_register_combiners2	/usr/include/SDL2/SDL_opengl.h	8807;"	d
GL_NV_shader_buffer_load	/usr/include/SDL2/SDL_opengl.h	10799;"	d
GL_NV_shader_buffer_store	/usr/include/SDL2/SDL_opengl.h	11003;"	d
GL_NV_tessellation_program5	/usr/include/SDL2/SDL_opengl.h	11007;"	d
GL_NV_texgen_emboss	/usr/include/SDL2/SDL_opengl.h	8567;"	d
GL_NV_texgen_reflection	/usr/include/SDL2/SDL_opengl.h	8485;"	d
GL_NV_texture_barrier	/usr/include/SDL2/SDL_opengl.h	10863;"	d
GL_NV_texture_compression_s3tc_update	/usr/include/SDL2/SDL_opengles2.h	2671;"	d
GL_NV_texture_compression_vtc	/usr/include/SDL2/SDL_opengl.h	8817;"	d
GL_NV_texture_env_combine4	/usr/include/SDL2/SDL_opengl.h	8575;"	d
GL_NV_texture_expand_normal	/usr/include/SDL2/SDL_opengl.h	9595;"	d
GL_NV_texture_npot_2D_mipmap	/usr/include/SDL2/SDL_opengles2.h	2676;"	d
GL_NV_texture_rectangle	/usr/include/SDL2/SDL_opengl.h	8821;"	d
GL_NV_texture_shader	/usr/include/SDL2/SDL_opengl.h	8825;"	d
GL_NV_texture_shader2	/usr/include/SDL2/SDL_opengl.h	8829;"	d
GL_NV_texture_shader3	/usr/include/SDL2/SDL_opengl.h	9331;"	d
GL_NV_transform_feedback	/usr/include/SDL2/SDL_opengl.h	10041;"	d
GL_NV_transform_feedback2	/usr/include/SDL2/SDL_opengl.h	10595;"	d
GL_NV_vdpau_interop	/usr/include/SDL2/SDL_opengl.h	11085;"	d
GL_NV_vertex_array_range	/usr/include/SDL2/SDL_opengl.h	8521;"	d
GL_NV_vertex_array_range2	/usr/include/SDL2/SDL_opengl.h	8833;"	d
GL_NV_vertex_attrib_integer_64bit	/usr/include/SDL2/SDL_opengl.h	11011;"	d
GL_NV_vertex_buffer_unified_memory	/usr/include/SDL2/SDL_opengl.h	10833;"	d
GL_NV_vertex_program	/usr/include/SDL2/SDL_opengl.h	8837;"	d
GL_NV_vertex_program1_1	/usr/include/SDL2/SDL_opengl.h	9335;"	d
GL_NV_vertex_program2	/usr/include/SDL2/SDL_opengl.h	9599;"	d
GL_NV_vertex_program2_option	/usr/include/SDL2/SDL_opengl.h	9679;"	d
GL_NV_vertex_program3	/usr/include/SDL2/SDL_opengl.h	9683;"	d
GL_NV_vertex_program4	/usr/include/SDL2/SDL_opengl.h	9861;"	d
GL_NV_video_capture	/usr/include/SDL2/SDL_opengl.h	10745;"	d
GL_OBJECT_ACTIVE_ATTRIBUTES_ARB	/usr/include/SDL2/SDL_opengl.h	1528;"	d
GL_OBJECT_ACTIVE_ATTRIBUTE_MAX_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	1529;"	d
GL_OBJECT_ACTIVE_UNIFORMS_ARB	/usr/include/SDL2/SDL_opengl.h	1517;"	d
GL_OBJECT_ACTIVE_UNIFORM_MAX_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	1518;"	d
GL_OBJECT_ATTACHED_OBJECTS_ARB	/usr/include/SDL2/SDL_opengl.h	1516;"	d
GL_OBJECT_BUFFER_SIZE_ATI	/usr/include/SDL2/SDL_opengl.h	3833;"	d
GL_OBJECT_BUFFER_USAGE_ATI	/usr/include/SDL2/SDL_opengl.h	3834;"	d
GL_OBJECT_COMPILE_STATUS_ARB	/usr/include/SDL2/SDL_opengl.h	1512;"	d
GL_OBJECT_DELETE_STATUS_ARB	/usr/include/SDL2/SDL_opengl.h	1511;"	d
GL_OBJECT_DISTANCE_TO_LINE_SGIS	/usr/include/SDL2/SDL_opengl.h	3417;"	d
GL_OBJECT_DISTANCE_TO_POINT_SGIS	/usr/include/SDL2/SDL_opengl.h	3415;"	d
GL_OBJECT_INFO_LOG_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	1515;"	d
GL_OBJECT_LINE_SGIS	/usr/include/SDL2/SDL_opengl.h	3421;"	d
GL_OBJECT_LINK_STATUS_ARB	/usr/include/SDL2/SDL_opengl.h	1513;"	d
GL_OBJECT_POINT_SGIS	/usr/include/SDL2/SDL_opengl.h	3419;"	d
GL_OBJECT_SHADER_SOURCE_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	1519;"	d
GL_OBJECT_SUBTYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1489;"	d
GL_OBJECT_TYPE	/usr/include/SDL2/SDL_opengl.h	1876;"	d
GL_OBJECT_TYPE_APPLE	/usr/include/SDL2/SDL_opengles2.h	1362;"	d
GL_OBJECT_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1488;"	d
GL_OBJECT_VALIDATE_STATUS_ARB	/usr/include/SDL2/SDL_opengl.h	1514;"	d
GL_OCCLUSION_TEST_HP	/usr/include/SDL2/SDL_opengl.h	2966;"	d
GL_OCCLUSION_TEST_RESULT_HP	/usr/include/SDL2/SDL_opengl.h	2967;"	d
GL_OES_EGL_image	/usr/include/SDL2/SDL_opengles2.h	1881;"	d
GL_OES_EGL_image_external	/usr/include/SDL2/SDL_opengles2.h	1892;"	d
GL_OES_compressed_ETC1_RGB8_texture	/usr/include/SDL2/SDL_opengles2.h	1856;"	d
GL_OES_compressed_paletted_texture	/usr/include/SDL2/SDL_opengles2.h	1861;"	d
GL_OES_depth24	/usr/include/SDL2/SDL_opengles2.h	1866;"	d
GL_OES_depth32	/usr/include/SDL2/SDL_opengles2.h	1871;"	d
GL_OES_depth_texture	/usr/include/SDL2/SDL_opengles2.h	1876;"	d
GL_OES_element_index_uint	/usr/include/SDL2/SDL_opengles2.h	1898;"	d
GL_OES_fbo_render_mipmap	/usr/include/SDL2/SDL_opengles2.h	1903;"	d
GL_OES_fragment_precision_high	/usr/include/SDL2/SDL_opengles2.h	1908;"	d
GL_OES_get_program_binary	/usr/include/SDL2/SDL_opengles2.h	1913;"	d
GL_OES_mapbuffer	/usr/include/SDL2/SDL_opengles2.h	1924;"	d
GL_OES_packed_depth_stencil	/usr/include/SDL2/SDL_opengles2.h	1937;"	d
GL_OES_read_format	/usr/include/SDL2/SDL_opengl.h	9635;"	d
GL_OES_required_internalformat	/usr/include/SDL2/SDL_opengles2.h	1942;"	d
GL_OES_rgb8_rgba8	/usr/include/SDL2/SDL_opengles2.h	1947;"	d
GL_OES_standard_derivatives	/usr/include/SDL2/SDL_opengles2.h	1952;"	d
GL_OES_stencil1	/usr/include/SDL2/SDL_opengles2.h	1957;"	d
GL_OES_stencil4	/usr/include/SDL2/SDL_opengles2.h	1962;"	d
GL_OES_surfaceless_context	/usr/include/SDL2/SDL_opengles2.h	1966;"	d
GL_OES_texture_3D	/usr/include/SDL2/SDL_opengles2.h	1971;"	d
GL_OES_texture_float	/usr/include/SDL2/SDL_opengles2.h	1990;"	d
GL_OES_texture_float_linear	/usr/include/SDL2/SDL_opengles2.h	1995;"	d
GL_OES_texture_half_float	/usr/include/SDL2/SDL_opengles2.h	2000;"	d
GL_OES_texture_half_float_linear	/usr/include/SDL2/SDL_opengles2.h	2005;"	d
GL_OES_texture_npot	/usr/include/SDL2/SDL_opengles2.h	2010;"	d
GL_OES_vertex_array_object	/usr/include/SDL2/SDL_opengles2.h	2015;"	d
GL_OES_vertex_half_float	/usr/include/SDL2/SDL_opengles2.h	2030;"	d
GL_OES_vertex_type_10_10_10_2	/usr/include/SDL2/SDL_opengles2.h	2035;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	4008;"	d
GL_OFFSET_HILO_PROJECTIVE_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	4009;"	d
GL_OFFSET_HILO_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	4006;"	d
GL_OFFSET_HILO_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	4007;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	4002;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_2D_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	4003;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	4004;"	d
GL_OFFSET_PROJECTIVE_TEXTURE_RECTANGLE_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	4005;"	d
GL_OFFSET_TEXTURE_2D_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3511;"	d
GL_OFFSET_TEXTURE_2D_MATRIX_NV	/usr/include/SDL2/SDL_opengl.h	3509;"	d
GL_OFFSET_TEXTURE_2D_NV	/usr/include/SDL2/SDL_opengl.h	3516;"	d
GL_OFFSET_TEXTURE_2D_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3510;"	d
GL_OFFSET_TEXTURE_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3508;"	d
GL_OFFSET_TEXTURE_MATRIX_NV	/usr/include/SDL2/SDL_opengl.h	3506;"	d
GL_OFFSET_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	3495;"	d
GL_OFFSET_TEXTURE_RECTANGLE_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3496;"	d
GL_OFFSET_TEXTURE_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3507;"	d
GL_OML_interlace	/usr/include/SDL2/SDL_opengl.h	8979;"	d
GL_OML_resample	/usr/include/SDL2/SDL_opengl.h	8987;"	d
GL_OML_subsample	/usr/include/SDL2/SDL_opengl.h	8983;"	d
GL_ONE	/usr/include/SDL2/SDL_opengles2.h	428;"	d
GL_ONE_EXT	/usr/include/SDL2/SDL_opengl.h	3934;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengl.h	182;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	/usr/include/SDL2/SDL_opengles2.h	465;"	d
GL_ONE_MINUS_CONSTANT_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	2228;"	d
GL_ONE_MINUS_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengl.h	180;"	d
GL_ONE_MINUS_CONSTANT_COLOR	/usr/include/SDL2/SDL_opengles2.h	463;"	d
GL_ONE_MINUS_CONSTANT_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2226;"	d
GL_ONE_MINUS_DST_ALPHA	/usr/include/SDL2/SDL_opengles2.h	434;"	d
GL_ONE_MINUS_DST_COLOR	/usr/include/SDL2/SDL_opengles2.h	440;"	d
GL_ONE_MINUS_SRC1_ALPHA	/usr/include/SDL2/SDL_opengl.h	1963;"	d
GL_ONE_MINUS_SRC1_COLOR	/usr/include/SDL2/SDL_opengl.h	1962;"	d
GL_ONE_MINUS_SRC_ALPHA	/usr/include/SDL2/SDL_opengles2.h	432;"	d
GL_ONE_MINUS_SRC_COLOR	/usr/include/SDL2/SDL_opengles2.h	430;"	d
GL_OPERAND0_ALPHA	/usr/include/SDL2/SDL_opengl.h	347;"	d
GL_OPERAND0_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1298;"	d
GL_OPERAND0_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3065;"	d
GL_OPERAND0_RGB	/usr/include/SDL2/SDL_opengl.h	344;"	d
GL_OPERAND0_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1295;"	d
GL_OPERAND0_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3062;"	d
GL_OPERAND1_ALPHA	/usr/include/SDL2/SDL_opengl.h	348;"	d
GL_OPERAND1_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1299;"	d
GL_OPERAND1_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3066;"	d
GL_OPERAND1_RGB	/usr/include/SDL2/SDL_opengl.h	345;"	d
GL_OPERAND1_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1296;"	d
GL_OPERAND1_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3063;"	d
GL_OPERAND2_ALPHA	/usr/include/SDL2/SDL_opengl.h	349;"	d
GL_OPERAND2_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1300;"	d
GL_OPERAND2_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3067;"	d
GL_OPERAND2_RGB	/usr/include/SDL2/SDL_opengl.h	346;"	d
GL_OPERAND2_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1297;"	d
GL_OPERAND2_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3064;"	d
GL_OPERAND3_ALPHA_NV	/usr/include/SDL2/SDL_opengl.h	3297;"	d
GL_OPERAND3_RGB_NV	/usr/include/SDL2/SDL_opengl.h	3296;"	d
GL_OP_ADD_EXT	/usr/include/SDL2/SDL_opengl.h	3847;"	d
GL_OP_CLAMP_EXT	/usr/include/SDL2/SDL_opengl.h	3854;"	d
GL_OP_CROSS_PRODUCT_EXT	/usr/include/SDL2/SDL_opengl.h	3863;"	d
GL_OP_DOT3_EXT	/usr/include/SDL2/SDL_opengl.h	3844;"	d
GL_OP_DOT4_EXT	/usr/include/SDL2/SDL_opengl.h	3845;"	d
GL_OP_EXP_BASE_2_EXT	/usr/include/SDL2/SDL_opengl.h	3857;"	d
GL_OP_FLOOR_EXT	/usr/include/SDL2/SDL_opengl.h	3855;"	d
GL_OP_FRAC_EXT	/usr/include/SDL2/SDL_opengl.h	3849;"	d
GL_OP_INDEX_EXT	/usr/include/SDL2/SDL_opengl.h	3842;"	d
GL_OP_LOG_BASE_2_EXT	/usr/include/SDL2/SDL_opengl.h	3858;"	d
GL_OP_MADD_EXT	/usr/include/SDL2/SDL_opengl.h	3848;"	d
GL_OP_MAX_EXT	/usr/include/SDL2/SDL_opengl.h	3850;"	d
GL_OP_MIN_EXT	/usr/include/SDL2/SDL_opengl.h	3851;"	d
GL_OP_MOV_EXT	/usr/include/SDL2/SDL_opengl.h	3865;"	d
GL_OP_MULTIPLY_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	3864;"	d
GL_OP_MUL_EXT	/usr/include/SDL2/SDL_opengl.h	3846;"	d
GL_OP_NEGATE_EXT	/usr/include/SDL2/SDL_opengl.h	3843;"	d
GL_OP_POWER_EXT	/usr/include/SDL2/SDL_opengl.h	3859;"	d
GL_OP_RECIP_EXT	/usr/include/SDL2/SDL_opengl.h	3860;"	d
GL_OP_RECIP_SQRT_EXT	/usr/include/SDL2/SDL_opengl.h	3861;"	d
GL_OP_ROUND_EXT	/usr/include/SDL2/SDL_opengl.h	3856;"	d
GL_OP_SET_GE_EXT	/usr/include/SDL2/SDL_opengl.h	3852;"	d
GL_OP_SET_LT_EXT	/usr/include/SDL2/SDL_opengl.h	3853;"	d
GL_OP_SUB_EXT	/usr/include/SDL2/SDL_opengl.h	3862;"	d
GL_OUTPUT_COLOR0_EXT	/usr/include/SDL2/SDL_opengl.h	3867;"	d
GL_OUTPUT_COLOR1_EXT	/usr/include/SDL2/SDL_opengl.h	3868;"	d
GL_OUTPUT_FOG_EXT	/usr/include/SDL2/SDL_opengl.h	3901;"	d
GL_OUTPUT_TEXTURE_COORD0_EXT	/usr/include/SDL2/SDL_opengl.h	3869;"	d
GL_OUTPUT_TEXTURE_COORD10_EXT	/usr/include/SDL2/SDL_opengl.h	3879;"	d
GL_OUTPUT_TEXTURE_COORD11_EXT	/usr/include/SDL2/SDL_opengl.h	3880;"	d
GL_OUTPUT_TEXTURE_COORD12_EXT	/usr/include/SDL2/SDL_opengl.h	3881;"	d
GL_OUTPUT_TEXTURE_COORD13_EXT	/usr/include/SDL2/SDL_opengl.h	3882;"	d
GL_OUTPUT_TEXTURE_COORD14_EXT	/usr/include/SDL2/SDL_opengl.h	3883;"	d
GL_OUTPUT_TEXTURE_COORD15_EXT	/usr/include/SDL2/SDL_opengl.h	3884;"	d
GL_OUTPUT_TEXTURE_COORD16_EXT	/usr/include/SDL2/SDL_opengl.h	3885;"	d
GL_OUTPUT_TEXTURE_COORD17_EXT	/usr/include/SDL2/SDL_opengl.h	3886;"	d
GL_OUTPUT_TEXTURE_COORD18_EXT	/usr/include/SDL2/SDL_opengl.h	3887;"	d
GL_OUTPUT_TEXTURE_COORD19_EXT	/usr/include/SDL2/SDL_opengl.h	3888;"	d
GL_OUTPUT_TEXTURE_COORD1_EXT	/usr/include/SDL2/SDL_opengl.h	3870;"	d
GL_OUTPUT_TEXTURE_COORD20_EXT	/usr/include/SDL2/SDL_opengl.h	3889;"	d
GL_OUTPUT_TEXTURE_COORD21_EXT	/usr/include/SDL2/SDL_opengl.h	3890;"	d
GL_OUTPUT_TEXTURE_COORD22_EXT	/usr/include/SDL2/SDL_opengl.h	3891;"	d
GL_OUTPUT_TEXTURE_COORD23_EXT	/usr/include/SDL2/SDL_opengl.h	3892;"	d
GL_OUTPUT_TEXTURE_COORD24_EXT	/usr/include/SDL2/SDL_opengl.h	3893;"	d
GL_OUTPUT_TEXTURE_COORD25_EXT	/usr/include/SDL2/SDL_opengl.h	3894;"	d
GL_OUTPUT_TEXTURE_COORD26_EXT	/usr/include/SDL2/SDL_opengl.h	3895;"	d
GL_OUTPUT_TEXTURE_COORD27_EXT	/usr/include/SDL2/SDL_opengl.h	3896;"	d
GL_OUTPUT_TEXTURE_COORD28_EXT	/usr/include/SDL2/SDL_opengl.h	3897;"	d
GL_OUTPUT_TEXTURE_COORD29_EXT	/usr/include/SDL2/SDL_opengl.h	3898;"	d
GL_OUTPUT_TEXTURE_COORD2_EXT	/usr/include/SDL2/SDL_opengl.h	3871;"	d
GL_OUTPUT_TEXTURE_COORD30_EXT	/usr/include/SDL2/SDL_opengl.h	3899;"	d
GL_OUTPUT_TEXTURE_COORD31_EXT	/usr/include/SDL2/SDL_opengl.h	3900;"	d
GL_OUTPUT_TEXTURE_COORD3_EXT	/usr/include/SDL2/SDL_opengl.h	3872;"	d
GL_OUTPUT_TEXTURE_COORD4_EXT	/usr/include/SDL2/SDL_opengl.h	3873;"	d
GL_OUTPUT_TEXTURE_COORD5_EXT	/usr/include/SDL2/SDL_opengl.h	3874;"	d
GL_OUTPUT_TEXTURE_COORD6_EXT	/usr/include/SDL2/SDL_opengl.h	3875;"	d
GL_OUTPUT_TEXTURE_COORD7_EXT	/usr/include/SDL2/SDL_opengl.h	3876;"	d
GL_OUTPUT_TEXTURE_COORD8_EXT	/usr/include/SDL2/SDL_opengl.h	3877;"	d
GL_OUTPUT_TEXTURE_COORD9_EXT	/usr/include/SDL2/SDL_opengl.h	3878;"	d
GL_OUTPUT_VERTEX_EXT	/usr/include/SDL2/SDL_opengl.h	3866;"	d
GL_OUT_OF_MEMORY	/usr/include/SDL2/SDL_opengles2.h	515;"	d
GL_PACK_ALIGNMENT	/usr/include/SDL2/SDL_opengles2.h	552;"	d
GL_PACK_CMYK_HINT_EXT	/usr/include/SDL2/SDL_opengl.h	2413;"	d
GL_PACK_IMAGE_DEPTH_SGIS	/usr/include/SDL2/SDL_opengl.h	2394;"	d
GL_PACK_IMAGE_HEIGHT	/usr/include/SDL2/SDL_opengl.h	139;"	d
GL_PACK_IMAGE_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	2286;"	d
GL_PACK_INVERT_MESA	/usr/include/SDL2/SDL_opengl.h	4211;"	d
GL_PACK_RESAMPLE_OML	/usr/include/SDL2/SDL_opengl.h	3685;"	d
GL_PACK_RESAMPLE_SGIX	/usr/include/SDL2/SDL_opengl.h	3406;"	d
GL_PACK_REVERSE_ROW_ORDER_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1295;"	d
GL_PACK_ROW_BYTES_APPLE	/usr/include/SDL2/SDL_opengl.h	4827;"	d
GL_PACK_SKIP_IMAGES	/usr/include/SDL2/SDL_opengl.h	138;"	d
GL_PACK_SKIP_IMAGES_EXT	/usr/include/SDL2/SDL_opengl.h	2285;"	d
GL_PACK_SKIP_VOLUMES_SGIS	/usr/include/SDL2/SDL_opengl.h	2393;"	d
GL_PACK_SUBSAMPLE_RATE_SGIX	/usr/include/SDL2/SDL_opengl.h	3340;"	d
GL_PALETTE4_R5_G6_B5_OES	/usr/include/SDL2/SDL_opengles2.h	1008;"	d
GL_PALETTE4_RGB5_A1_OES	/usr/include/SDL2/SDL_opengles2.h	1010;"	d
GL_PALETTE4_RGB8_OES	/usr/include/SDL2/SDL_opengles2.h	1006;"	d
GL_PALETTE4_RGBA4_OES	/usr/include/SDL2/SDL_opengles2.h	1009;"	d
GL_PALETTE4_RGBA8_OES	/usr/include/SDL2/SDL_opengles2.h	1007;"	d
GL_PALETTE8_R5_G6_B5_OES	/usr/include/SDL2/SDL_opengles2.h	1013;"	d
GL_PALETTE8_RGB5_A1_OES	/usr/include/SDL2/SDL_opengles2.h	1015;"	d
GL_PALETTE8_RGB8_OES	/usr/include/SDL2/SDL_opengles2.h	1011;"	d
GL_PALETTE8_RGBA4_OES	/usr/include/SDL2/SDL_opengles2.h	1014;"	d
GL_PALETTE8_RGBA8_OES	/usr/include/SDL2/SDL_opengles2.h	1012;"	d
GL_PARALLEL_ARRAYS_INTEL	/usr/include/SDL2/SDL_opengl.h	2958;"	d
GL_PARTIAL_SUCCESS_NV	/usr/include/SDL2/SDL_opengl.h	4852;"	d
GL_PASS_THROUGH_NV	/usr/include/SDL2/SDL_opengl.h	3514;"	d
GL_PATCHES	/usr/include/SDL2/SDL_opengl.h	2048;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	/usr/include/SDL2/SDL_opengl.h	2050;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	/usr/include/SDL2/SDL_opengl.h	2051;"	d
GL_PATCH_VERTICES	/usr/include/SDL2/SDL_opengl.h	2049;"	d
GL_PERCENTAGE_AMD	/usr/include/SDL2/SDL_opengl.h	4717;"	d
GL_PERCENTAGE_AMD	/usr/include/SDL2/SDL_opengles2.h	1258;"	d
GL_PERFMON_GLOBAL_MODE_QCOM	/usr/include/SDL2/SDL_opengles2.h	1793;"	d
GL_PERFMON_RESULT_AMD	/usr/include/SDL2/SDL_opengl.h	4720;"	d
GL_PERFMON_RESULT_AMD	/usr/include/SDL2/SDL_opengles2.h	1261;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	/usr/include/SDL2/SDL_opengl.h	4718;"	d
GL_PERFMON_RESULT_AVAILABLE_AMD	/usr/include/SDL2/SDL_opengles2.h	1259;"	d
GL_PERFMON_RESULT_SIZE_AMD	/usr/include/SDL2/SDL_opengl.h	4719;"	d
GL_PERFMON_RESULT_SIZE_AMD	/usr/include/SDL2/SDL_opengles2.h	1260;"	d
GL_PERFORMANCE_MONITOR_AMD	/usr/include/SDL2/SDL_opengl.h	5067;"	d
GL_PERTURB_EXT	/usr/include/SDL2/SDL_opengl.h	3006;"	d
GL_PER_STAGE_CONSTANTS_NV	/usr/include/SDL2/SDL_opengl.h	3481;"	d
GL_PGI_misc_hints	/usr/include/SDL2/SDL_opengl.h	7909;"	d
GL_PGI_vertex_hints	/usr/include/SDL2/SDL_opengl.h	7905;"	d
GL_PHONG_HINT_WIN	/usr/include/SDL2/SDL_opengl.h	2896;"	d
GL_PHONG_WIN	/usr/include/SDL2/SDL_opengl.h	2895;"	d
GL_PIXEL_BUFFER_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4975;"	d
GL_PIXEL_COUNTER_BITS_NV	/usr/include/SDL2/SDL_opengl.h	3989;"	d
GL_PIXEL_COUNT_AVAILABLE_NV	/usr/include/SDL2/SDL_opengl.h	3992;"	d
GL_PIXEL_COUNT_NV	/usr/include/SDL2/SDL_opengl.h	3991;"	d
GL_PIXEL_CUBIC_WEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	2974;"	d
GL_PIXEL_FRAGMENT_ALPHA_SOURCE_SGIS	/usr/include/SDL2/SDL_opengl.h	2383;"	d
GL_PIXEL_FRAGMENT_RGB_SOURCE_SGIS	/usr/include/SDL2/SDL_opengl.h	2382;"	d
GL_PIXEL_GROUP_COLOR_SGIS	/usr/include/SDL2/SDL_opengl.h	2384;"	d
GL_PIXEL_MAG_FILTER_EXT	/usr/include/SDL2/SDL_opengl.h	2972;"	d
GL_PIXEL_MIN_FILTER_EXT	/usr/include/SDL2/SDL_opengl.h	2973;"	d
GL_PIXEL_PACK_BUFFER	/usr/include/SDL2/SDL_opengl.h	553;"	d
GL_PIXEL_PACK_BUFFER_ARB	/usr/include/SDL2/SDL_opengl.h	1616;"	d
GL_PIXEL_PACK_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	555;"	d
GL_PIXEL_PACK_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1618;"	d
GL_PIXEL_PACK_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4223;"	d
GL_PIXEL_PACK_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4221;"	d
GL_PIXEL_SUBSAMPLE_2424_SGIX	/usr/include/SDL2/SDL_opengl.h	3343;"	d
GL_PIXEL_SUBSAMPLE_4242_SGIX	/usr/include/SDL2/SDL_opengl.h	3344;"	d
GL_PIXEL_SUBSAMPLE_4444_SGIX	/usr/include/SDL2/SDL_opengl.h	3342;"	d
GL_PIXEL_TEXTURE_SGIS	/usr/include/SDL2/SDL_opengl.h	2381;"	d
GL_PIXEL_TEX_GEN_ALPHA_LS_SGIX	/usr/include/SDL2/SDL_opengl.h	2927;"	d
GL_PIXEL_TEX_GEN_ALPHA_MS_SGIX	/usr/include/SDL2/SDL_opengl.h	2928;"	d
GL_PIXEL_TEX_GEN_ALPHA_NO_REPLACE_SGIX	/usr/include/SDL2/SDL_opengl.h	2926;"	d
GL_PIXEL_TEX_GEN_ALPHA_REPLACE_SGIX	/usr/include/SDL2/SDL_opengl.h	2925;"	d
GL_PIXEL_TEX_GEN_MODE_SGIX	/usr/include/SDL2/SDL_opengl.h	2389;"	d
GL_PIXEL_TEX_GEN_Q_CEILING_SGIX	/usr/include/SDL2/SDL_opengl.h	2922;"	d
GL_PIXEL_TEX_GEN_Q_FLOOR_SGIX	/usr/include/SDL2/SDL_opengl.h	2924;"	d
GL_PIXEL_TEX_GEN_Q_ROUND_SGIX	/usr/include/SDL2/SDL_opengl.h	2923;"	d
GL_PIXEL_TEX_GEN_SGIX	/usr/include/SDL2/SDL_opengl.h	2388;"	d
GL_PIXEL_TILE_BEST_ALIGNMENT_SGIX	/usr/include/SDL2/SDL_opengl.h	2574;"	d
GL_PIXEL_TILE_CACHE_INCREMENT_SGIX	/usr/include/SDL2/SDL_opengl.h	2575;"	d
GL_PIXEL_TILE_CACHE_SIZE_SGIX	/usr/include/SDL2/SDL_opengl.h	2581;"	d
GL_PIXEL_TILE_GRID_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2580;"	d
GL_PIXEL_TILE_GRID_HEIGHT_SGIX	/usr/include/SDL2/SDL_opengl.h	2579;"	d
GL_PIXEL_TILE_GRID_WIDTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2578;"	d
GL_PIXEL_TILE_HEIGHT_SGIX	/usr/include/SDL2/SDL_opengl.h	2577;"	d
GL_PIXEL_TILE_WIDTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2576;"	d
GL_PIXEL_TRANSFORM_2D_EXT	/usr/include/SDL2/SDL_opengl.h	2971;"	d
GL_PIXEL_TRANSFORM_2D_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	2979;"	d
GL_PIXEL_TRANSFORM_2D_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	2977;"	d
GL_PIXEL_UNPACK_BUFFER	/usr/include/SDL2/SDL_opengl.h	554;"	d
GL_PIXEL_UNPACK_BUFFER_ARB	/usr/include/SDL2/SDL_opengl.h	1617;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	556;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1619;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4224;"	d
GL_PIXEL_UNPACK_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4222;"	d
GL_PN_TRIANGLES_ATI	/usr/include/SDL2/SDL_opengl.h	3817;"	d
GL_PN_TRIANGLES_NORMAL_MODE_ATI	/usr/include/SDL2/SDL_opengl.h	3820;"	d
GL_PN_TRIANGLES_NORMAL_MODE_LINEAR_ATI	/usr/include/SDL2/SDL_opengl.h	3824;"	d
GL_PN_TRIANGLES_NORMAL_MODE_QUADRATIC_ATI	/usr/include/SDL2/SDL_opengl.h	3825;"	d
GL_PN_TRIANGLES_POINT_MODE_ATI	/usr/include/SDL2/SDL_opengl.h	3819;"	d
GL_PN_TRIANGLES_POINT_MODE_CUBIC_ATI	/usr/include/SDL2/SDL_opengl.h	3823;"	d
GL_PN_TRIANGLES_POINT_MODE_LINEAR_ATI	/usr/include/SDL2/SDL_opengl.h	3822;"	d
GL_PN_TRIANGLES_TESSELATION_LEVEL_ATI	/usr/include/SDL2/SDL_opengl.h	3821;"	d
GL_POINTS	/usr/include/SDL2/SDL_opengles2.h	408;"	d
GL_POINT_DISTANCE_ATTENUATION	/usr/include/SDL2/SDL_opengl.h	383;"	d
GL_POINT_DISTANCE_ATTENUATION_ARB	/usr/include/SDL2/SDL_opengl.h	1224;"	d
GL_POINT_FADE_THRESHOLD_SIZE	/usr/include/SDL2/SDL_opengl.h	366;"	d
GL_POINT_FADE_THRESHOLD_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1223;"	d
GL_POINT_FADE_THRESHOLD_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2626;"	d
GL_POINT_FADE_THRESHOLD_SIZE_SGIS	/usr/include/SDL2/SDL_opengl.h	2633;"	d
GL_POINT_SIZE_MAX	/usr/include/SDL2/SDL_opengl.h	382;"	d
GL_POINT_SIZE_MAX_ARB	/usr/include/SDL2/SDL_opengl.h	1222;"	d
GL_POINT_SIZE_MAX_EXT	/usr/include/SDL2/SDL_opengl.h	2625;"	d
GL_POINT_SIZE_MAX_SGIS	/usr/include/SDL2/SDL_opengl.h	2632;"	d
GL_POINT_SIZE_MIN	/usr/include/SDL2/SDL_opengl.h	381;"	d
GL_POINT_SIZE_MIN_ARB	/usr/include/SDL2/SDL_opengl.h	1221;"	d
GL_POINT_SIZE_MIN_EXT	/usr/include/SDL2/SDL_opengl.h	2624;"	d
GL_POINT_SIZE_MIN_SGIS	/usr/include/SDL2/SDL_opengl.h	2631;"	d
GL_POINT_SPRITE	/usr/include/SDL2/SDL_opengl.h	547;"	d
GL_POINT_SPRITE_ARB	/usr/include/SDL2/SDL_opengl.h	1546;"	d
GL_POINT_SPRITE_COORD_ORIGIN	/usr/include/SDL2/SDL_opengl.h	537;"	d
GL_POINT_SPRITE_NV	/usr/include/SDL2/SDL_opengl.h	3996;"	d
GL_POINT_SPRITE_R_MODE_NV	/usr/include/SDL2/SDL_opengl.h	3998;"	d
GL_POLYGON_OFFSET_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	2235;"	d
GL_POLYGON_OFFSET_EXT	/usr/include/SDL2/SDL_opengl.h	2233;"	d
GL_POLYGON_OFFSET_FACTOR	/usr/include/SDL2/SDL_opengles2.h	564;"	d
GL_POLYGON_OFFSET_FACTOR_EXT	/usr/include/SDL2/SDL_opengl.h	2234;"	d
GL_POLYGON_OFFSET_FILL	/usr/include/SDL2/SDL_opengles2.h	506;"	d
GL_POLYGON_OFFSET_UNITS	/usr/include/SDL2/SDL_opengles2.h	562;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl.h	237;"	d
GL_POST_COLOR_MATRIX_ALPHA_BIAS_SGI	/usr/include/SDL2/SDL_opengl.h	2358;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl.h	233;"	d
GL_POST_COLOR_MATRIX_ALPHA_SCALE_SGI	/usr/include/SDL2/SDL_opengl.h	2354;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS	/usr/include/SDL2/SDL_opengl.h	236;"	d
GL_POST_COLOR_MATRIX_BLUE_BIAS_SGI	/usr/include/SDL2/SDL_opengl.h	2357;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE	/usr/include/SDL2/SDL_opengl.h	232;"	d
GL_POST_COLOR_MATRIX_BLUE_SCALE_SGI	/usr/include/SDL2/SDL_opengl.h	2353;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	240;"	d
GL_POST_COLOR_MATRIX_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2364;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS	/usr/include/SDL2/SDL_opengl.h	235;"	d
GL_POST_COLOR_MATRIX_GREEN_BIAS_SGI	/usr/include/SDL2/SDL_opengl.h	2356;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE	/usr/include/SDL2/SDL_opengl.h	231;"	d
GL_POST_COLOR_MATRIX_GREEN_SCALE_SGI	/usr/include/SDL2/SDL_opengl.h	2352;"	d
GL_POST_COLOR_MATRIX_RED_BIAS	/usr/include/SDL2/SDL_opengl.h	234;"	d
GL_POST_COLOR_MATRIX_RED_BIAS_SGI	/usr/include/SDL2/SDL_opengl.h	2355;"	d
GL_POST_COLOR_MATRIX_RED_SCALE	/usr/include/SDL2/SDL_opengl.h	230;"	d
GL_POST_COLOR_MATRIX_RED_SCALE_SGI	/usr/include/SDL2/SDL_opengl.h	2351;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS	/usr/include/SDL2/SDL_opengl.h	212;"	d
GL_POST_CONVOLUTION_ALPHA_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	2344;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE	/usr/include/SDL2/SDL_opengl.h	208;"	d
GL_POST_CONVOLUTION_ALPHA_SCALE_EXT	/usr/include/SDL2/SDL_opengl.h	2340;"	d
GL_POST_CONVOLUTION_BLUE_BIAS	/usr/include/SDL2/SDL_opengl.h	211;"	d
GL_POST_CONVOLUTION_BLUE_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	2343;"	d
GL_POST_CONVOLUTION_BLUE_SCALE	/usr/include/SDL2/SDL_opengl.h	207;"	d
GL_POST_CONVOLUTION_BLUE_SCALE_EXT	/usr/include/SDL2/SDL_opengl.h	2339;"	d
GL_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	239;"	d
GL_POST_CONVOLUTION_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2363;"	d
GL_POST_CONVOLUTION_GREEN_BIAS	/usr/include/SDL2/SDL_opengl.h	210;"	d
GL_POST_CONVOLUTION_GREEN_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	2342;"	d
GL_POST_CONVOLUTION_GREEN_SCALE	/usr/include/SDL2/SDL_opengl.h	206;"	d
GL_POST_CONVOLUTION_GREEN_SCALE_EXT	/usr/include/SDL2/SDL_opengl.h	2338;"	d
GL_POST_CONVOLUTION_RED_BIAS	/usr/include/SDL2/SDL_opengl.h	209;"	d
GL_POST_CONVOLUTION_RED_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	2341;"	d
GL_POST_CONVOLUTION_RED_SCALE	/usr/include/SDL2/SDL_opengl.h	205;"	d
GL_POST_CONVOLUTION_RED_SCALE_EXT	/usr/include/SDL2/SDL_opengl.h	2337;"	d
GL_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	/usr/include/SDL2/SDL_opengl.h	2709;"	d
GL_POST_TEXTURE_FILTER_BIAS_RANGE_SGIX	/usr/include/SDL2/SDL_opengl.h	2645;"	d
GL_POST_TEXTURE_FILTER_BIAS_SGIX	/usr/include/SDL2/SDL_opengl.h	2643;"	d
GL_POST_TEXTURE_FILTER_SCALE_RANGE_SGIX	/usr/include/SDL2/SDL_opengl.h	2646;"	d
GL_POST_TEXTURE_FILTER_SCALE_SGIX	/usr/include/SDL2/SDL_opengl.h	2644;"	d
GL_PREFER_DOUBLEBUFFER_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2756;"	d
GL_PRESENT_DURATION_NV	/usr/include/SDL2/SDL_opengl.h	4648;"	d
GL_PRESENT_TIME_NV	/usr/include/SDL2/SDL_opengl.h	4647;"	d
GL_PRESERVE_ATI	/usr/include/SDL2/SDL_opengl.h	3831;"	d
GL_PREVIOUS	/usr/include/SDL2/SDL_opengl.h	356;"	d
GL_PREVIOUS_ARB	/usr/include/SDL2/SDL_opengl.h	1307;"	d
GL_PREVIOUS_EXT	/usr/include/SDL2/SDL_opengl.h	3055;"	d
GL_PREVIOUS_TEXTURE_INPUT_NV	/usr/include/SDL2/SDL_opengl.h	3512;"	d
GL_PRIMARY_COLOR	/usr/include/SDL2/SDL_opengl.h	355;"	d
GL_PRIMARY_COLOR_ARB	/usr/include/SDL2/SDL_opengl.h	1306;"	d
GL_PRIMARY_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	3054;"	d
GL_PRIMARY_COLOR_NV	/usr/include/SDL2/SDL_opengl.h	3228;"	d
GL_PRIMITIVES_GENERATED	/usr/include/SDL2/SDL_opengl.h	629;"	d
GL_PRIMITIVES_GENERATED_EXT	/usr/include/SDL2/SDL_opengl.h	4658;"	d
GL_PRIMITIVES_GENERATED_NV	/usr/include/SDL2/SDL_opengl.h	4556;"	d
GL_PRIMITIVE_ID_NV	/usr/include/SDL2/SDL_opengl.h	4545;"	d
GL_PRIMITIVE_RESTART	/usr/include/SDL2/SDL_opengl.h	849;"	d
GL_PRIMITIVE_RESTART_INDEX	/usr/include/SDL2/SDL_opengl.h	850;"	d
GL_PRIMITIVE_RESTART_INDEX_NV	/usr/include/SDL2/SDL_opengl.h	4166;"	d
GL_PRIMITIVE_RESTART_NV	/usr/include/SDL2/SDL_opengl.h	4165;"	d
GL_PROGRAM	/usr/include/SDL2/SDL_opengles2.h	1187;"	d
GL_PROGRAM_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl.h	1383;"	d
GL_PROGRAM_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1427;"	d
GL_PROGRAM_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl.h	1379;"	d
GL_PROGRAM_ATTRIB_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4372;"	d
GL_PROGRAM_BINARY_FORMATS	/usr/include/SDL2/SDL_opengl.h	2126;"	d
GL_PROGRAM_BINARY_FORMATS_OES	/usr/include/SDL2/SDL_opengles2.h	1054;"	d
GL_PROGRAM_BINARY_LENGTH	/usr/include/SDL2/SDL_opengl.h	2124;"	d
GL_PROGRAM_BINARY_LENGTH_OES	/usr/include/SDL2/SDL_opengles2.h	1052;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	/usr/include/SDL2/SDL_opengl.h	2123;"	d
GL_PROGRAM_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1361;"	d
GL_PROGRAM_ERROR_POSITION_ARB	/usr/include/SDL2/SDL_opengl.h	1360;"	d
GL_PROGRAM_ERROR_POSITION_NV	/usr/include/SDL2/SDL_opengl.h	3613;"	d
GL_PROGRAM_ERROR_STRING_ARB	/usr/include/SDL2/SDL_opengl.h	1364;"	d
GL_PROGRAM_ERROR_STRING_NV	/usr/include/SDL2/SDL_opengl.h	4148;"	d
GL_PROGRAM_FORMAT_ARB	/usr/include/SDL2/SDL_opengl.h	1366;"	d
GL_PROGRAM_FORMAT_ASCII_ARB	/usr/include/SDL2/SDL_opengl.h	1365;"	d
GL_PROGRAM_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1367;"	d
GL_PROGRAM_LENGTH_ARB	/usr/include/SDL2/SDL_opengl.h	1351;"	d
GL_PROGRAM_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	3585;"	d
GL_PROGRAM_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	4670;"	d
GL_PROGRAM_MATRIX_STACK_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	4672;"	d
GL_PROGRAM_NATIVE_ADDRESS_REGISTERS_ARB	/usr/include/SDL2/SDL_opengl.h	1385;"	d
GL_PROGRAM_NATIVE_ALU_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1430;"	d
GL_PROGRAM_NATIVE_ATTRIBS_ARB	/usr/include/SDL2/SDL_opengl.h	1381;"	d
GL_PROGRAM_NATIVE_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1369;"	d
GL_PROGRAM_NATIVE_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl.h	1377;"	d
GL_PROGRAM_NATIVE_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl.h	1373;"	d
GL_PROGRAM_NATIVE_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1432;"	d
GL_PROGRAM_NATIVE_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1431;"	d
GL_PROGRAM_OBJECT_ARB	/usr/include/SDL2/SDL_opengl.h	1486;"	d
GL_PROGRAM_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2.h	1428;"	d
GL_PROGRAM_PARAMETERS_ARB	/usr/include/SDL2/SDL_opengl.h	1375;"	d
GL_PROGRAM_PARAMETER_NV	/usr/include/SDL2/SDL_opengl.h	3606;"	d
GL_PROGRAM_PIPELINE_BINDING	/usr/include/SDL2/SDL_opengl.h	2138;"	d
GL_PROGRAM_PIPELINE_BINDING_EXT	/usr/include/SDL2/SDL_opengles2.h	1511;"	d
GL_PROGRAM_PIPELINE_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2.h	1427;"	d
GL_PROGRAM_POINT_SIZE	/usr/include/SDL2/SDL_opengl.h	895;"	d
GL_PROGRAM_POINT_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1726;"	d
GL_PROGRAM_POINT_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4396;"	d
GL_PROGRAM_RESIDENT_NV	/usr/include/SDL2/SDL_opengl.h	3609;"	d
GL_PROGRAM_RESULT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4373;"	d
GL_PROGRAM_SEPARABLE	/usr/include/SDL2/SDL_opengl.h	2136;"	d
GL_PROGRAM_SEPARABLE_EXT	/usr/include/SDL2/SDL_opengles2.h	1509;"	d
GL_PROGRAM_STRING_ARB	/usr/include/SDL2/SDL_opengl.h	1352;"	d
GL_PROGRAM_STRING_NV	/usr/include/SDL2/SDL_opengl.h	3586;"	d
GL_PROGRAM_TARGET_NV	/usr/include/SDL2/SDL_opengl.h	3608;"	d
GL_PROGRAM_TEMPORARIES_ARB	/usr/include/SDL2/SDL_opengl.h	1371;"	d
GL_PROGRAM_TEX_INDIRECTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1429;"	d
GL_PROGRAM_TEX_INSTRUCTIONS_ARB	/usr/include/SDL2/SDL_opengl.h	1428;"	d
GL_PROGRAM_UNDER_NATIVE_LIMITS_ARB	/usr/include/SDL2/SDL_opengl.h	1389;"	d
GL_PROVOKING_VERTEX	/usr/include/SDL2/SDL_opengl.h	1867;"	d
GL_PROVOKING_VERTEX_EXT	/usr/include/SDL2/SDL_opengl.h	4740;"	d
GL_PROXY_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	241;"	d
GL_PROXY_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2365;"	d
GL_PROXY_HISTOGRAM	/usr/include/SDL2/SDL_opengl.h	214;"	d
GL_PROXY_HISTOGRAM_EXT	/usr/include/SDL2/SDL_opengl.h	2309;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	243;"	d
GL_PROXY_POST_COLOR_MATRIX_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2367;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE	/usr/include/SDL2/SDL_opengl.h	242;"	d
GL_PROXY_POST_CONVOLUTION_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2366;"	d
GL_PROXY_POST_IMAGE_TRANSFORM_COLOR_TABLE_HP	/usr/include/SDL2/SDL_opengl.h	2710;"	d
GL_PROXY_TEXTURE_1D_ARRAY	/usr/include/SDL2/SDL_opengl.h	613;"	d
GL_PROXY_TEXTURE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4465;"	d
GL_PROXY_TEXTURE_1D_EXT	/usr/include/SDL2/SDL_opengl.h	2279;"	d
GL_PROXY_TEXTURE_1D_STACK_MESAX	/usr/include/SDL2/SDL_opengl.h	4351;"	d
GL_PROXY_TEXTURE_2D_ARRAY	/usr/include/SDL2/SDL_opengl.h	615;"	d
GL_PROXY_TEXTURE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4467;"	d
GL_PROXY_TEXTURE_2D_EXT	/usr/include/SDL2/SDL_opengl.h	2280;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1898;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl.h	1900;"	d
GL_PROXY_TEXTURE_2D_STACK_MESAX	/usr/include/SDL2/SDL_opengl.h	4352;"	d
GL_PROXY_TEXTURE_3D	/usr/include/SDL2/SDL_opengl.h	143;"	d
GL_PROXY_TEXTURE_3D_EXT	/usr/include/SDL2/SDL_opengl.h	2290;"	d
GL_PROXY_TEXTURE_4D_SGIS	/usr/include/SDL2/SDL_opengl.h	2398;"	d
GL_PROXY_TEXTURE_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2407;"	d
GL_PROXY_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengl.h	309;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARB	/usr/include/SDL2/SDL_opengl.h	1198;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl.h	1001;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1931;"	d
GL_PROXY_TEXTURE_CUBE_MAP_EXT	/usr/include/SDL2/SDL_opengl.h	3166;"	d
GL_PROXY_TEXTURE_RECTANGLE	/usr/include/SDL2/SDL_opengl.h	834;"	d
GL_PROXY_TEXTURE_RECTANGLE_ARB	/usr/include/SDL2/SDL_opengl.h	1576;"	d
GL_PROXY_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	3490;"	d
GL_PURGEABLE_APPLE	/usr/include/SDL2/SDL_opengl.h	4823;"	d
GL_QCOM_alpha_test	/usr/include/SDL2/SDL_opengles2.h	2685;"	d
GL_QCOM_binning_control	/usr/include/SDL2/SDL_opengles2.h	2694;"	d
GL_QCOM_driver_control	/usr/include/SDL2/SDL_opengles2.h	2699;"	d
GL_QCOM_extended_get	/usr/include/SDL2/SDL_opengles2.h	2714;"	d
GL_QCOM_extended_get2	/usr/include/SDL2/SDL_opengles2.h	2737;"	d
GL_QCOM_perfmon_global_mode	/usr/include/SDL2/SDL_opengles2.h	2752;"	d
GL_QCOM_tiled_rendering	/usr/include/SDL2/SDL_opengles2.h	2762;"	d
GL_QCOM_writeonly_rendering	/usr/include/SDL2/SDL_opengles2.h	2757;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	/usr/include/SDL2/SDL_opengl.h	1864;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION_EXT	/usr/include/SDL2/SDL_opengl.h	4737;"	d
GL_QUAD_ALPHA4_SGIS	/usr/include/SDL2/SDL_opengl.h	2599;"	d
GL_QUAD_ALPHA8_SGIS	/usr/include/SDL2/SDL_opengl.h	2600;"	d
GL_QUAD_INTENSITY4_SGIS	/usr/include/SDL2/SDL_opengl.h	2603;"	d
GL_QUAD_INTENSITY8_SGIS	/usr/include/SDL2/SDL_opengl.h	2604;"	d
GL_QUAD_LUMINANCE4_SGIS	/usr/include/SDL2/SDL_opengl.h	2601;"	d
GL_QUAD_LUMINANCE8_SGIS	/usr/include/SDL2/SDL_opengl.h	2602;"	d
GL_QUAD_MESH_SUN	/usr/include/SDL2/SDL_opengl.h	3972;"	d
GL_QUAD_TEXTURE_SELECT_SGIS	/usr/include/SDL2/SDL_opengl.h	2606;"	d
GL_QUARTER_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3808;"	d
GL_QUERY	/usr/include/SDL2/SDL_opengles2.h	1188;"	d
GL_QUERY_BY_REGION_NO_WAIT	/usr/include/SDL2/SDL_opengl.h	680;"	d
GL_QUERY_BY_REGION_NO_WAIT_NV	/usr/include/SDL2/SDL_opengl.h	4639;"	d
GL_QUERY_BY_REGION_WAIT	/usr/include/SDL2/SDL_opengl.h	679;"	d
GL_QUERY_BY_REGION_WAIT_NV	/usr/include/SDL2/SDL_opengl.h	4638;"	d
GL_QUERY_COUNTER_BITS	/usr/include/SDL2/SDL_opengl.h	409;"	d
GL_QUERY_COUNTER_BITS_ARB	/usr/include/SDL2/SDL_opengl.h	1478;"	d
GL_QUERY_NO_WAIT	/usr/include/SDL2/SDL_opengl.h	678;"	d
GL_QUERY_NO_WAIT_NV	/usr/include/SDL2/SDL_opengl.h	4637;"	d
GL_QUERY_OBJECT_AMD	/usr/include/SDL2/SDL_opengl.h	5068;"	d
GL_QUERY_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2.h	1431;"	d
GL_QUERY_RESULT	/usr/include/SDL2/SDL_opengl.h	411;"	d
GL_QUERY_RESULT_ARB	/usr/include/SDL2/SDL_opengl.h	1480;"	d
GL_QUERY_RESULT_AVAILABLE	/usr/include/SDL2/SDL_opengl.h	412;"	d
GL_QUERY_RESULT_AVAILABLE_ARB	/usr/include/SDL2/SDL_opengl.h	1481;"	d
GL_QUERY_RESULT_AVAILABLE_EXT	/usr/include/SDL2/SDL_opengles2.h	1482;"	d
GL_QUERY_RESULT_EXT	/usr/include/SDL2/SDL_opengles2.h	1481;"	d
GL_QUERY_WAIT	/usr/include/SDL2/SDL_opengl.h	677;"	d
GL_QUERY_WAIT_NV	/usr/include/SDL2/SDL_opengl.h	4636;"	d
GL_R11F_G11F_B10F	/usr/include/SDL2/SDL_opengl.h	618;"	d
GL_R11F_G11F_B10F_EXT	/usr/include/SDL2/SDL_opengl.h	4458;"	d
GL_R16	/usr/include/SDL2/SDL_opengl.h	1780;"	d
GL_R16F	/usr/include/SDL2/SDL_opengl.h	1783;"	d
GL_R16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1420;"	d
GL_R16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1586;"	d
GL_R16I	/usr/include/SDL2/SDL_opengl.h	1789;"	d
GL_R16UI	/usr/include/SDL2/SDL_opengl.h	1790;"	d
GL_R16_SNORM	/usr/include/SDL2/SDL_opengl.h	844;"	d
GL_R1UI_C3F_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3105;"	d
GL_R1UI_C4F_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3107;"	d
GL_R1UI_C4UB_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3104;"	d
GL_R1UI_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3106;"	d
GL_R1UI_T2F_C4F_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3110;"	d
GL_R1UI_T2F_N3F_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3109;"	d
GL_R1UI_T2F_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3108;"	d
GL_R1UI_V3F_SUN	/usr/include/SDL2/SDL_opengl.h	3103;"	d
GL_R32F	/usr/include/SDL2/SDL_opengl.h	1784;"	d
GL_R32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1584;"	d
GL_R32I	/usr/include/SDL2/SDL_opengl.h	1791;"	d
GL_R32UI	/usr/include/SDL2/SDL_opengl.h	1792;"	d
GL_R8	/usr/include/SDL2/SDL_opengl.h	1779;"	d
GL_R8I	/usr/include/SDL2/SDL_opengl.h	1787;"	d
GL_R8UI	/usr/include/SDL2/SDL_opengl.h	1788;"	d
GL_R8_EXT	/usr/include/SDL2/SDL_opengles2.h	1559;"	d
GL_R8_EXT	/usr/include/SDL2/SDL_opengles2.h	1582;"	d
GL_R8_SNORM	/usr/include/SDL2/SDL_opengl.h	840;"	d
GL_RASTERIZER_DISCARD	/usr/include/SDL2/SDL_opengl.h	631;"	d
GL_RASTERIZER_DISCARD_EXT	/usr/include/SDL2/SDL_opengl.h	4660;"	d
GL_RASTERIZER_DISCARD_NV	/usr/include/SDL2/SDL_opengl.h	4558;"	d
GL_RASTER_POSITION_UNCLIPPED_IBM	/usr/include/SDL2/SDL_opengl.h	2880;"	d
GL_READ_BUFFER_EXT	/usr/include/SDL2/SDL_opengles2.h	1469;"	d
GL_READ_BUFFER_NV	/usr/include/SDL2/SDL_opengles2.h	1730;"	d
GL_READ_FRAMEBUFFER	/usr/include/SDL2/SDL_opengl.h	1658;"	d
GL_READ_FRAMEBUFFER_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1275;"	d
GL_READ_FRAMEBUFFER_APPLE	/usr/include/SDL2/SDL_opengles2.h	1331;"	d
GL_READ_FRAMEBUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	1660;"	d
GL_READ_FRAMEBUFFER_BINDING_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1278;"	d
GL_READ_FRAMEBUFFER_BINDING_APPLE	/usr/include/SDL2/SDL_opengles2.h	1334;"	d
GL_READ_FRAMEBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4339;"	d
GL_READ_FRAMEBUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4336;"	d
GL_READ_ONLY	/usr/include/SDL2/SDL_opengl.h	418;"	d
GL_READ_ONLY_ARB	/usr/include/SDL2/SDL_opengl.h	1460;"	d
GL_READ_PIXEL_DATA_RANGE_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4159;"	d
GL_READ_PIXEL_DATA_RANGE_NV	/usr/include/SDL2/SDL_opengl.h	4157;"	d
GL_READ_PIXEL_DATA_RANGE_POINTER_NV	/usr/include/SDL2/SDL_opengl.h	4161;"	d
GL_READ_WRITE	/usr/include/SDL2/SDL_opengl.h	420;"	d
GL_READ_WRITE_ARB	/usr/include/SDL2/SDL_opengl.h	1462;"	d
GL_RECLAIM_MEMORY_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2758;"	d
GL_REDUCE	/usr/include/SDL2/SDL_opengl.h	199;"	d
GL_REDUCE_EXT	/usr/include/SDL2/SDL_opengl.h	2331;"	d
GL_RED_BITS	/usr/include/SDL2/SDL_opengles2.h	556;"	d
GL_RED_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3801;"	d
GL_RED_EXT	/usr/include/SDL2/SDL_opengles2.h	1557;"	d
GL_RED_INTEGER	/usr/include/SDL2/SDL_opengl.h	650;"	d
GL_RED_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4619;"	d
GL_RED_MAX_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3128;"	d
GL_RED_MIN_CLAMP_INGR	/usr/include/SDL2/SDL_opengl.h	3124;"	d
GL_RED_SNORM	/usr/include/SDL2/SDL_opengl.h	836;"	d
GL_REFERENCE_PLANE_EQUATION_SGIX	/usr/include/SDL2/SDL_opengl.h	2672;"	d
GL_REFERENCE_PLANE_SGIX	/usr/include/SDL2/SDL_opengl.h	2671;"	d
GL_REFLECTION_MAP	/usr/include/SDL2/SDL_opengl.h	330;"	d
GL_REFLECTION_MAP_ARB	/usr/include/SDL2/SDL_opengl.h	1189;"	d
GL_REFLECTION_MAP_EXT	/usr/include/SDL2/SDL_opengl.h	3157;"	d
GL_REFLECTION_MAP_NV	/usr/include/SDL2/SDL_opengl.h	3152;"	d
GL_REGISTER_COMBINERS_NV	/usr/include/SDL2/SDL_opengl.h	3218;"	d
GL_REG_0_ATI	/usr/include/SDL2/SDL_opengl.h	3711;"	d
GL_REG_10_ATI	/usr/include/SDL2/SDL_opengl.h	3721;"	d
GL_REG_11_ATI	/usr/include/SDL2/SDL_opengl.h	3722;"	d
GL_REG_12_ATI	/usr/include/SDL2/SDL_opengl.h	3723;"	d
GL_REG_13_ATI	/usr/include/SDL2/SDL_opengl.h	3724;"	d
GL_REG_14_ATI	/usr/include/SDL2/SDL_opengl.h	3725;"	d
GL_REG_15_ATI	/usr/include/SDL2/SDL_opengl.h	3726;"	d
GL_REG_16_ATI	/usr/include/SDL2/SDL_opengl.h	3727;"	d
GL_REG_17_ATI	/usr/include/SDL2/SDL_opengl.h	3728;"	d
GL_REG_18_ATI	/usr/include/SDL2/SDL_opengl.h	3729;"	d
GL_REG_19_ATI	/usr/include/SDL2/SDL_opengl.h	3730;"	d
GL_REG_1_ATI	/usr/include/SDL2/SDL_opengl.h	3712;"	d
GL_REG_20_ATI	/usr/include/SDL2/SDL_opengl.h	3731;"	d
GL_REG_21_ATI	/usr/include/SDL2/SDL_opengl.h	3732;"	d
GL_REG_22_ATI	/usr/include/SDL2/SDL_opengl.h	3733;"	d
GL_REG_23_ATI	/usr/include/SDL2/SDL_opengl.h	3734;"	d
GL_REG_24_ATI	/usr/include/SDL2/SDL_opengl.h	3735;"	d
GL_REG_25_ATI	/usr/include/SDL2/SDL_opengl.h	3736;"	d
GL_REG_26_ATI	/usr/include/SDL2/SDL_opengl.h	3737;"	d
GL_REG_27_ATI	/usr/include/SDL2/SDL_opengl.h	3738;"	d
GL_REG_28_ATI	/usr/include/SDL2/SDL_opengl.h	3739;"	d
GL_REG_29_ATI	/usr/include/SDL2/SDL_opengl.h	3740;"	d
GL_REG_2_ATI	/usr/include/SDL2/SDL_opengl.h	3713;"	d
GL_REG_30_ATI	/usr/include/SDL2/SDL_opengl.h	3741;"	d
GL_REG_31_ATI	/usr/include/SDL2/SDL_opengl.h	3742;"	d
GL_REG_3_ATI	/usr/include/SDL2/SDL_opengl.h	3714;"	d
GL_REG_4_ATI	/usr/include/SDL2/SDL_opengl.h	3715;"	d
GL_REG_5_ATI	/usr/include/SDL2/SDL_opengl.h	3716;"	d
GL_REG_6_ATI	/usr/include/SDL2/SDL_opengl.h	3717;"	d
GL_REG_7_ATI	/usr/include/SDL2/SDL_opengl.h	3718;"	d
GL_REG_8_ATI	/usr/include/SDL2/SDL_opengl.h	3719;"	d
GL_REG_9_ATI	/usr/include/SDL2/SDL_opengl.h	3720;"	d
GL_RELEASED_APPLE	/usr/include/SDL2/SDL_opengl.h	4819;"	d
GL_RENDERBUFFER	/usr/include/SDL2/SDL_opengl.h	1693;"	d
GL_RENDERBUFFER	/usr/include/SDL2/SDL_opengles2.h	782;"	d
GL_RENDERBUFFER_ALPHA_SIZE	/usr/include/SDL2/SDL_opengl.h	1704;"	d
GL_RENDERBUFFER_ALPHA_SIZE	/usr/include/SDL2/SDL_opengles2.h	796;"	d
GL_RENDERBUFFER_ALPHA_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4296;"	d
GL_RENDERBUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	1657;"	d
GL_RENDERBUFFER_BINDING	/usr/include/SDL2/SDL_opengles2.h	818;"	d
GL_RENDERBUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4251;"	d
GL_RENDERBUFFER_BLUE_SIZE	/usr/include/SDL2/SDL_opengl.h	1703;"	d
GL_RENDERBUFFER_BLUE_SIZE	/usr/include/SDL2/SDL_opengles2.h	795;"	d
GL_RENDERBUFFER_BLUE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4295;"	d
GL_RENDERBUFFER_COLOR_SAMPLES_NV	/usr/include/SDL2/SDL_opengl.h	4515;"	d
GL_RENDERBUFFER_COVERAGE_SAMPLES_NV	/usr/include/SDL2/SDL_opengl.h	4514;"	d
GL_RENDERBUFFER_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl.h	1705;"	d
GL_RENDERBUFFER_DEPTH_SIZE	/usr/include/SDL2/SDL_opengles2.h	797;"	d
GL_RENDERBUFFER_DEPTH_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4297;"	d
GL_RENDERBUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4285;"	d
GL_RENDERBUFFER_FREE_MEMORY_ATI	/usr/include/SDL2/SDL_opengl.h	4710;"	d
GL_RENDERBUFFER_GREEN_SIZE	/usr/include/SDL2/SDL_opengl.h	1702;"	d
GL_RENDERBUFFER_GREEN_SIZE	/usr/include/SDL2/SDL_opengles2.h	794;"	d
GL_RENDERBUFFER_GREEN_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4294;"	d
GL_RENDERBUFFER_HEIGHT	/usr/include/SDL2/SDL_opengl.h	1695;"	d
GL_RENDERBUFFER_HEIGHT	/usr/include/SDL2/SDL_opengles2.h	791;"	d
GL_RENDERBUFFER_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	4287;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	/usr/include/SDL2/SDL_opengl.h	1696;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	/usr/include/SDL2/SDL_opengles2.h	792;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT_EXT	/usr/include/SDL2/SDL_opengl.h	4288;"	d
GL_RENDERBUFFER_RED_SIZE	/usr/include/SDL2/SDL_opengl.h	1701;"	d
GL_RENDERBUFFER_RED_SIZE	/usr/include/SDL2/SDL_opengles2.h	793;"	d
GL_RENDERBUFFER_RED_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4293;"	d
GL_RENDERBUFFER_SAMPLES	/usr/include/SDL2/SDL_opengl.h	1661;"	d
GL_RENDERBUFFER_SAMPLES_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1283;"	d
GL_RENDERBUFFER_SAMPLES_APPLE	/usr/include/SDL2/SDL_opengles2.h	1328;"	d
GL_RENDERBUFFER_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl.h	4343;"	d
GL_RENDERBUFFER_SAMPLES_EXT	/usr/include/SDL2/SDL_opengles2.h	1459;"	d
GL_RENDERBUFFER_SAMPLES_IMG	/usr/include/SDL2/SDL_opengles2.h	1650;"	d
GL_RENDERBUFFER_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl.h	1706;"	d
GL_RENDERBUFFER_STENCIL_SIZE	/usr/include/SDL2/SDL_opengles2.h	798;"	d
GL_RENDERBUFFER_STENCIL_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4298;"	d
GL_RENDERBUFFER_WIDTH	/usr/include/SDL2/SDL_opengl.h	1694;"	d
GL_RENDERBUFFER_WIDTH	/usr/include/SDL2/SDL_opengles2.h	790;"	d
GL_RENDERBUFFER_WIDTH_EXT	/usr/include/SDL2/SDL_opengl.h	4286;"	d
GL_RENDERER	/usr/include/SDL2/SDL_opengles2.h	656;"	d
GL_RENDER_DIRECT_TO_FRAMEBUFFER_QCOM	/usr/include/SDL2/SDL_opengles2.h	1767;"	d
GL_REND_screen_coordinates	/usr/include/SDL2/SDL_opengl.h	8247;"	d
GL_REPEAT	/usr/include/SDL2/SDL_opengles2.h	728;"	d
GL_REPLACE	/usr/include/SDL2/SDL_opengles2.h	647;"	d
GL_REPLACEMENT_CODE_ARRAY_POINTER_SUN	/usr/include/SDL2/SDL_opengl.h	3102;"	d
GL_REPLACEMENT_CODE_ARRAY_STRIDE_SUN	/usr/include/SDL2/SDL_opengl.h	3101;"	d
GL_REPLACEMENT_CODE_ARRAY_SUN	/usr/include/SDL2/SDL_opengl.h	3099;"	d
GL_REPLACEMENT_CODE_ARRAY_TYPE_SUN	/usr/include/SDL2/SDL_opengl.h	3100;"	d
GL_REPLACEMENT_CODE_SUN	/usr/include/SDL2/SDL_opengl.h	3098;"	d
GL_REPLACE_EXT	/usr/include/SDL2/SDL_opengl.h	2278;"	d
GL_REPLACE_MIDDLE_SUN	/usr/include/SDL2/SDL_opengl.h	3095;"	d
GL_REPLACE_OLDEST_SUN	/usr/include/SDL2/SDL_opengl.h	3096;"	d
GL_REPLICATE_BORDER	/usr/include/SDL2/SDL_opengl.h	255;"	d
GL_REPLICATE_BORDER_HP	/usr/include/SDL2/SDL_opengl.h	2716;"	d
GL_REQUIRED_TEXTURE_IMAGE_UNITS_OES	/usr/include/SDL2/SDL_opengles2.h	1042;"	d
GL_RESAMPLE_AVERAGE_OML	/usr/include/SDL2/SDL_opengl.h	3689;"	d
GL_RESAMPLE_DECIMATE_OML	/usr/include/SDL2/SDL_opengl.h	3690;"	d
GL_RESAMPLE_DECIMATE_SGIX	/usr/include/SDL2/SDL_opengl.h	3410;"	d
GL_RESAMPLE_REPLICATE_OML	/usr/include/SDL2/SDL_opengl.h	3687;"	d
GL_RESAMPLE_REPLICATE_SGIX	/usr/include/SDL2/SDL_opengl.h	3408;"	d
GL_RESAMPLE_ZERO_FILL_OML	/usr/include/SDL2/SDL_opengl.h	3688;"	d
GL_RESAMPLE_ZERO_FILL_SGIX	/usr/include/SDL2/SDL_opengl.h	3409;"	d
GL_RESCALE_NORMAL	/usr/include/SDL2/SDL_opengl.h	171;"	d
GL_RESCALE_NORMAL_EXT	/usr/include/SDL2/SDL_opengl.h	2478;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	/usr/include/SDL2/SDL_opengl.h	2213;"	d
GL_RESET_NOTIFICATION_STRATEGY_EXT	/usr/include/SDL2/SDL_opengles2.h	1499;"	d
GL_RESTART_SUN	/usr/include/SDL2/SDL_opengl.h	3094;"	d
GL_RETAINED_APPLE	/usr/include/SDL2/SDL_opengl.h	4821;"	d
GL_RG	/usr/include/SDL2/SDL_opengl.h	1777;"	d
GL_RG16	/usr/include/SDL2/SDL_opengl.h	1782;"	d
GL_RG16F	/usr/include/SDL2/SDL_opengl.h	1785;"	d
GL_RG16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1419;"	d
GL_RG16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1587;"	d
GL_RG16I	/usr/include/SDL2/SDL_opengl.h	1795;"	d
GL_RG16UI	/usr/include/SDL2/SDL_opengl.h	1796;"	d
GL_RG16_SNORM	/usr/include/SDL2/SDL_opengl.h	845;"	d
GL_RG32F	/usr/include/SDL2/SDL_opengl.h	1786;"	d
GL_RG32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1585;"	d
GL_RG32I	/usr/include/SDL2/SDL_opengl.h	1797;"	d
GL_RG32UI	/usr/include/SDL2/SDL_opengl.h	1798;"	d
GL_RG8	/usr/include/SDL2/SDL_opengl.h	1781;"	d
GL_RG8I	/usr/include/SDL2/SDL_opengl.h	1793;"	d
GL_RG8UI	/usr/include/SDL2/SDL_opengl.h	1794;"	d
GL_RG8_EXT	/usr/include/SDL2/SDL_opengles2.h	1560;"	d
GL_RG8_EXT	/usr/include/SDL2/SDL_opengles2.h	1583;"	d
GL_RG8_SNORM	/usr/include/SDL2/SDL_opengl.h	841;"	d
GL_RGB	/usr/include/SDL2/SDL_opengles2.h	601;"	d
GL_RGB10_A2UI	/usr/include/SDL2/SDL_opengl.h	1982;"	d
GL_RGB10_A2_EXT	/usr/include/SDL2/SDL_opengl.h	2269;"	d
GL_RGB10_A2_EXT	/usr/include/SDL2/SDL_opengles2.h	1579;"	d
GL_RGB10_EXT	/usr/include/SDL2/SDL_opengl.h	2262;"	d
GL_RGB10_EXT	/usr/include/SDL2/SDL_opengles2.h	1580;"	d
GL_RGB12_EXT	/usr/include/SDL2/SDL_opengl.h	2263;"	d
GL_RGB16F	/usr/include/SDL2/SDL_opengl.h	604;"	d
GL_RGB16F_ARB	/usr/include/SDL2/SDL_opengl.h	1608;"	d
GL_RGB16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1418;"	d
GL_RGB16I	/usr/include/SDL2/SDL_opengl.h	647;"	d
GL_RGB16I_EXT	/usr/include/SDL2/SDL_opengl.h	4608;"	d
GL_RGB16UI	/usr/include/SDL2/SDL_opengl.h	641;"	d
GL_RGB16UI_EXT	/usr/include/SDL2/SDL_opengl.h	4590;"	d
GL_RGB16_EXT	/usr/include/SDL2/SDL_opengl.h	2264;"	d
GL_RGB16_SNORM	/usr/include/SDL2/SDL_opengl.h	846;"	d
GL_RGB2_EXT	/usr/include/SDL2/SDL_opengl.h	2258;"	d
GL_RGB32F	/usr/include/SDL2/SDL_opengl.h	602;"	d
GL_RGB32F_ARB	/usr/include/SDL2/SDL_opengl.h	1602;"	d
GL_RGB32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1570;"	d
GL_RGB32I	/usr/include/SDL2/SDL_opengl.h	645;"	d
GL_RGB32I_EXT	/usr/include/SDL2/SDL_opengl.h	4602;"	d
GL_RGB32UI	/usr/include/SDL2/SDL_opengl.h	639;"	d
GL_RGB32UI_EXT	/usr/include/SDL2/SDL_opengl.h	4584;"	d
GL_RGB4_EXT	/usr/include/SDL2/SDL_opengl.h	2259;"	d
GL_RGB4_S3TC	/usr/include/SDL2/SDL_opengl.h	4073;"	d
GL_RGB565	/usr/include/SDL2/SDL_opengles2.h	786;"	d
GL_RGB565_OES	/usr/include/SDL2/SDL_opengles2.h	1084;"	d
GL_RGB5_A1	/usr/include/SDL2/SDL_opengles2.h	785;"	d
GL_RGB5_A1_EXT	/usr/include/SDL2/SDL_opengl.h	2267;"	d
GL_RGB5_A1_OES	/usr/include/SDL2/SDL_opengles2.h	1083;"	d
GL_RGB5_EXT	/usr/include/SDL2/SDL_opengl.h	2260;"	d
GL_RGB8I	/usr/include/SDL2/SDL_opengl.h	649;"	d
GL_RGB8I_EXT	/usr/include/SDL2/SDL_opengl.h	4614;"	d
GL_RGB8UI	/usr/include/SDL2/SDL_opengl.h	643;"	d
GL_RGB8UI_EXT	/usr/include/SDL2/SDL_opengl.h	4596;"	d
GL_RGB8_EXT	/usr/include/SDL2/SDL_opengl.h	2261;"	d
GL_RGB8_OES	/usr/include/SDL2/SDL_opengles2.h	1093;"	d
GL_RGB8_SNORM	/usr/include/SDL2/SDL_opengl.h	842;"	d
GL_RGB9_E5	/usr/include/SDL2/SDL_opengl.h	620;"	d
GL_RGB9_E5_EXT	/usr/include/SDL2/SDL_opengl.h	4498;"	d
GL_RGBA	/usr/include/SDL2/SDL_opengles2.h	602;"	d
GL_RGBA12_EXT	/usr/include/SDL2/SDL_opengl.h	2270;"	d
GL_RGBA16F	/usr/include/SDL2/SDL_opengl.h	603;"	d
GL_RGBA16F_ARB	/usr/include/SDL2/SDL_opengl.h	1607;"	d
GL_RGBA16F_EXT	/usr/include/SDL2/SDL_opengles2.h	1417;"	d
GL_RGBA16I	/usr/include/SDL2/SDL_opengl.h	646;"	d
GL_RGBA16I_EXT	/usr/include/SDL2/SDL_opengl.h	4607;"	d
GL_RGBA16UI	/usr/include/SDL2/SDL_opengl.h	640;"	d
GL_RGBA16UI_EXT	/usr/include/SDL2/SDL_opengl.h	4589;"	d
GL_RGBA16_EXT	/usr/include/SDL2/SDL_opengl.h	2271;"	d
GL_RGBA16_SNORM	/usr/include/SDL2/SDL_opengl.h	847;"	d
GL_RGBA2_EXT	/usr/include/SDL2/SDL_opengl.h	2265;"	d
GL_RGBA32F	/usr/include/SDL2/SDL_opengl.h	601;"	d
GL_RGBA32F_ARB	/usr/include/SDL2/SDL_opengl.h	1601;"	d
GL_RGBA32F_EXT	/usr/include/SDL2/SDL_opengles2.h	1569;"	d
GL_RGBA32I	/usr/include/SDL2/SDL_opengl.h	644;"	d
GL_RGBA32I_EXT	/usr/include/SDL2/SDL_opengl.h	4601;"	d
GL_RGBA32UI	/usr/include/SDL2/SDL_opengl.h	638;"	d
GL_RGBA32UI_EXT	/usr/include/SDL2/SDL_opengl.h	4583;"	d
GL_RGBA4	/usr/include/SDL2/SDL_opengles2.h	784;"	d
GL_RGBA4_EXT	/usr/include/SDL2/SDL_opengl.h	2266;"	d
GL_RGBA4_OES	/usr/include/SDL2/SDL_opengles2.h	1082;"	d
GL_RGBA4_S3TC	/usr/include/SDL2/SDL_opengl.h	4075;"	d
GL_RGBA8I	/usr/include/SDL2/SDL_opengl.h	648;"	d
GL_RGBA8I_EXT	/usr/include/SDL2/SDL_opengl.h	4613;"	d
GL_RGBA8UI	/usr/include/SDL2/SDL_opengl.h	642;"	d
GL_RGBA8UI_EXT	/usr/include/SDL2/SDL_opengl.h	4595;"	d
GL_RGBA8_EXT	/usr/include/SDL2/SDL_opengl.h	2268;"	d
GL_RGBA8_OES	/usr/include/SDL2/SDL_opengles2.h	1094;"	d
GL_RGBA8_SNORM	/usr/include/SDL2/SDL_opengl.h	843;"	d
GL_RGBA_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl.h	4791;"	d
GL_RGBA_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl.h	4116;"	d
GL_RGBA_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl.h	4785;"	d
GL_RGBA_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl.h	4110;"	d
GL_RGBA_FLOAT_MODE_ARB	/usr/include/SDL2/SDL_opengl.h	1581;"	d
GL_RGBA_INTEGER	/usr/include/SDL2/SDL_opengl.h	654;"	d
GL_RGBA_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4624;"	d
GL_RGBA_INTEGER_MODE_EXT	/usr/include/SDL2/SDL_opengl.h	4629;"	d
GL_RGBA_S3TC	/usr/include/SDL2/SDL_opengl.h	4074;"	d
GL_RGBA_SIGNED_COMPONENTS_EXT	/usr/include/SDL2/SDL_opengl.h	4460;"	d
GL_RGBA_SNORM	/usr/include/SDL2/SDL_opengl.h	839;"	d
GL_RGBA_UNSIGNED_DOT_PRODUCT_MAPPING_NV	/usr/include/SDL2/SDL_opengl.h	3498;"	d
GL_RGB_422_APPLE	/usr/include/SDL2/SDL_opengl.h	4832;"	d
GL_RGB_422_APPLE	/usr/include/SDL2/SDL_opengles2.h	1339;"	d
GL_RGB_FLOAT16_APPLE	/usr/include/SDL2/SDL_opengl.h	4792;"	d
GL_RGB_FLOAT16_ATI	/usr/include/SDL2/SDL_opengl.h	4117;"	d
GL_RGB_FLOAT32_APPLE	/usr/include/SDL2/SDL_opengl.h	4786;"	d
GL_RGB_FLOAT32_ATI	/usr/include/SDL2/SDL_opengl.h	4111;"	d
GL_RGB_INTEGER	/usr/include/SDL2/SDL_opengl.h	653;"	d
GL_RGB_INTEGER_EXT	/usr/include/SDL2/SDL_opengl.h	4623;"	d
GL_RGB_S3TC	/usr/include/SDL2/SDL_opengl.h	4072;"	d
GL_RGB_SCALE	/usr/include/SDL2/SDL_opengl.h	350;"	d
GL_RGB_SCALE_ARB	/usr/include/SDL2/SDL_opengl.h	1301;"	d
GL_RGB_SCALE_EXT	/usr/include/SDL2/SDL_opengl.h	3050;"	d
GL_RGB_SNORM	/usr/include/SDL2/SDL_opengl.h	838;"	d
GL_RG_EXT	/usr/include/SDL2/SDL_opengles2.h	1558;"	d
GL_RG_INTEGER	/usr/include/SDL2/SDL_opengl.h	1778;"	d
GL_RG_SNORM	/usr/include/SDL2/SDL_opengl.h	837;"	d
GL_S3_s3tc	/usr/include/SDL2/SDL_opengl.h	9427;"	d
GL_SAMPLER	/usr/include/SDL2/SDL_opengles2.h	1190;"	d
GL_SAMPLER_1D	/usr/include/SDL2/SDL_opengl.h	517;"	d
GL_SAMPLER_1D_ARB	/usr/include/SDL2/SDL_opengl.h	1503;"	d
GL_SAMPLER_1D_ARRAY	/usr/include/SDL2/SDL_opengl.h	657;"	d
GL_SAMPLER_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4427;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	/usr/include/SDL2/SDL_opengl.h	659;"	d
GL_SAMPLER_1D_ARRAY_SHADOW_EXT	/usr/include/SDL2/SDL_opengl.h	4430;"	d
GL_SAMPLER_1D_SHADOW	/usr/include/SDL2/SDL_opengl.h	521;"	d
GL_SAMPLER_1D_SHADOW_ARB	/usr/include/SDL2/SDL_opengl.h	1507;"	d
GL_SAMPLER_2D	/usr/include/SDL2/SDL_opengl.h	518;"	d
GL_SAMPLER_2D	/usr/include/SDL2/SDL_opengles2.h	746;"	d
GL_SAMPLER_2D_ARB	/usr/include/SDL2/SDL_opengl.h	1504;"	d
GL_SAMPLER_2D_ARRAY	/usr/include/SDL2/SDL_opengl.h	658;"	d
GL_SAMPLER_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4428;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	/usr/include/SDL2/SDL_opengl.h	660;"	d
GL_SAMPLER_2D_ARRAY_SHADOW_EXT	/usr/include/SDL2/SDL_opengl.h	4431;"	d
GL_SAMPLER_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1905;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl.h	1908;"	d
GL_SAMPLER_2D_RECT	/usr/include/SDL2/SDL_opengl.h	820;"	d
GL_SAMPLER_2D_RECT_ARB	/usr/include/SDL2/SDL_opengl.h	1509;"	d
GL_SAMPLER_2D_RECT_SHADOW	/usr/include/SDL2/SDL_opengl.h	821;"	d
GL_SAMPLER_2D_RECT_SHADOW_ARB	/usr/include/SDL2/SDL_opengl.h	1510;"	d
GL_SAMPLER_2D_SHADOW	/usr/include/SDL2/SDL_opengl.h	522;"	d
GL_SAMPLER_2D_SHADOW_ARB	/usr/include/SDL2/SDL_opengl.h	1508;"	d
GL_SAMPLER_2D_SHADOW_EXT	/usr/include/SDL2/SDL_opengles2.h	1527;"	d
GL_SAMPLER_3D	/usr/include/SDL2/SDL_opengl.h	519;"	d
GL_SAMPLER_3D_ARB	/usr/include/SDL2/SDL_opengl.h	1505;"	d
GL_SAMPLER_3D_OES	/usr/include/SDL2/SDL_opengles2.h	1122;"	d
GL_SAMPLER_BINDING	/usr/include/SDL2/SDL_opengl.h	1975;"	d
GL_SAMPLER_BUFFER	/usr/include/SDL2/SDL_opengl.h	822;"	d
GL_SAMPLER_BUFFER_AMD	/usr/include/SDL2/SDL_opengl.h	4727;"	d
GL_SAMPLER_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4429;"	d
GL_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengl.h	520;"	d
GL_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengles2.h	747;"	d
GL_SAMPLER_CUBE_ARB	/usr/include/SDL2/SDL_opengl.h	1506;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl.h	1002;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1932;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	/usr/include/SDL2/SDL_opengl.h	1003;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	/usr/include/SDL2/SDL_opengl.h	1933;"	d
GL_SAMPLER_CUBE_SHADOW	/usr/include/SDL2/SDL_opengl.h	661;"	d
GL_SAMPLER_CUBE_SHADOW_EXT	/usr/include/SDL2/SDL_opengl.h	4432;"	d
GL_SAMPLER_EXTERNAL_OES	/usr/include/SDL2/SDL_opengles2.h	1040;"	d
GL_SAMPLER_OBJECT_AMD	/usr/include/SDL2/SDL_opengl.h	5070;"	d
GL_SAMPLER_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4694;"	d
GL_SAMPLES	/usr/include/SDL2/SDL_opengl.h	298;"	d
GL_SAMPLES	/usr/include/SDL2/SDL_opengles2.h	567;"	d
GL_SAMPLES_3DFX	/usr/include/SDL2/SDL_opengl.h	3369;"	d
GL_SAMPLES_ARB	/usr/include/SDL2/SDL_opengl.h	1178;"	d
GL_SAMPLES_EXT	/usr/include/SDL2/SDL_opengl.h	3389;"	d
GL_SAMPLES_PASSED	/usr/include/SDL2/SDL_opengl.h	433;"	d
GL_SAMPLES_PASSED_ARB	/usr/include/SDL2/SDL_opengl.h	1482;"	d
GL_SAMPLES_SGIS	/usr/include/SDL2/SDL_opengl.h	2471;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/SDL2/SDL_opengl.h	294;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	/usr/include/SDL2/SDL_opengles2.h	507;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE_ARB	/usr/include/SDL2/SDL_opengl.h	1174;"	d
GL_SAMPLE_ALPHA_TO_MASK_EXT	/usr/include/SDL2/SDL_opengl.h	3378;"	d
GL_SAMPLE_ALPHA_TO_MASK_SGIS	/usr/include/SDL2/SDL_opengl.h	2460;"	d
GL_SAMPLE_ALPHA_TO_ONE	/usr/include/SDL2/SDL_opengl.h	295;"	d
GL_SAMPLE_ALPHA_TO_ONE_ARB	/usr/include/SDL2/SDL_opengl.h	1175;"	d
GL_SAMPLE_ALPHA_TO_ONE_EXT	/usr/include/SDL2/SDL_opengl.h	3379;"	d
GL_SAMPLE_ALPHA_TO_ONE_SGIS	/usr/include/SDL2/SDL_opengl.h	2461;"	d
GL_SAMPLE_BUFFERS	/usr/include/SDL2/SDL_opengl.h	297;"	d
GL_SAMPLE_BUFFERS	/usr/include/SDL2/SDL_opengles2.h	566;"	d
GL_SAMPLE_BUFFERS_3DFX	/usr/include/SDL2/SDL_opengl.h	3368;"	d
GL_SAMPLE_BUFFERS_ARB	/usr/include/SDL2/SDL_opengl.h	1177;"	d
GL_SAMPLE_BUFFERS_EXT	/usr/include/SDL2/SDL_opengl.h	3388;"	d
GL_SAMPLE_BUFFERS_SGIS	/usr/include/SDL2/SDL_opengl.h	2470;"	d
GL_SAMPLE_COVERAGE	/usr/include/SDL2/SDL_opengl.h	296;"	d
GL_SAMPLE_COVERAGE	/usr/include/SDL2/SDL_opengles2.h	508;"	d
GL_SAMPLE_COVERAGE_ARB	/usr/include/SDL2/SDL_opengl.h	1176;"	d
GL_SAMPLE_COVERAGE_INVERT	/usr/include/SDL2/SDL_opengl.h	300;"	d
GL_SAMPLE_COVERAGE_INVERT	/usr/include/SDL2/SDL_opengles2.h	569;"	d
GL_SAMPLE_COVERAGE_INVERT_ARB	/usr/include/SDL2/SDL_opengl.h	1180;"	d
GL_SAMPLE_COVERAGE_VALUE	/usr/include/SDL2/SDL_opengl.h	299;"	d
GL_SAMPLE_COVERAGE_VALUE	/usr/include/SDL2/SDL_opengles2.h	568;"	d
GL_SAMPLE_COVERAGE_VALUE_ARB	/usr/include/SDL2/SDL_opengl.h	1179;"	d
GL_SAMPLE_MASK	/usr/include/SDL2/SDL_opengl.h	1894;"	d
GL_SAMPLE_MASK_EXT	/usr/include/SDL2/SDL_opengl.h	3380;"	d
GL_SAMPLE_MASK_INVERT_EXT	/usr/include/SDL2/SDL_opengl.h	3391;"	d
GL_SAMPLE_MASK_INVERT_SGIS	/usr/include/SDL2/SDL_opengl.h	2473;"	d
GL_SAMPLE_MASK_NV	/usr/include/SDL2/SDL_opengl.h	4689;"	d
GL_SAMPLE_MASK_SGIS	/usr/include/SDL2/SDL_opengl.h	2462;"	d
GL_SAMPLE_MASK_VALUE	/usr/include/SDL2/SDL_opengl.h	1895;"	d
GL_SAMPLE_MASK_VALUE_EXT	/usr/include/SDL2/SDL_opengl.h	3390;"	d
GL_SAMPLE_MASK_VALUE_NV	/usr/include/SDL2/SDL_opengl.h	4690;"	d
GL_SAMPLE_MASK_VALUE_SGIS	/usr/include/SDL2/SDL_opengl.h	2472;"	d
GL_SAMPLE_PATTERN_EXT	/usr/include/SDL2/SDL_opengl.h	3392;"	d
GL_SAMPLE_PATTERN_SGIS	/usr/include/SDL2/SDL_opengl.h	2474;"	d
GL_SAMPLE_POSITION	/usr/include/SDL2/SDL_opengl.h	1893;"	d
GL_SAMPLE_POSITION_NV	/usr/include/SDL2/SDL_opengl.h	4688;"	d
GL_SAMPLE_SHADING	/usr/include/SDL2/SDL_opengl.h	995;"	d
GL_SAMPLE_SHADING_ARB	/usr/include/SDL2/SDL_opengl.h	1924;"	d
GL_SATURATE_BIT_ATI	/usr/include/SDL2/SDL_opengl.h	3810;"	d
GL_SCALAR_EXT	/usr/include/SDL2/SDL_opengl.h	3902;"	d
GL_SCALEBIAS_HINT_SGIX	/usr/include/SDL2/SDL_opengl.h	3671;"	d
GL_SCALE_BY_FOUR_NV	/usr/include/SDL2/SDL_opengl.h	3244;"	d
GL_SCALE_BY_ONE_HALF_NV	/usr/include/SDL2/SDL_opengl.h	3245;"	d
GL_SCALE_BY_TWO_NV	/usr/include/SDL2/SDL_opengl.h	3243;"	d
GL_SCISSOR_BOX	/usr/include/SDL2/SDL_opengles2.h	547;"	d
GL_SCISSOR_TEST	/usr/include/SDL2/SDL_opengles2.h	505;"	d
GL_SCREEN_COORDINATES_REND	/usr/include/SDL2/SDL_opengl.h	3025;"	d
GL_SECONDARY_COLOR_ARRAY	/usr/include/SDL2/SDL_opengl.h	400;"	d
GL_SECONDARY_COLOR_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4895;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	443;"	d
GL_SECONDARY_COLOR_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1456;"	d
GL_SECONDARY_COLOR_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	3002;"	d
GL_SECONDARY_COLOR_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4905;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3328;"	d
GL_SECONDARY_COLOR_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3336;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	399;"	d
GL_SECONDARY_COLOR_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	3001;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl.h	396;"	d
GL_SECONDARY_COLOR_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2998;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	398;"	d
GL_SECONDARY_COLOR_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	3000;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	397;"	d
GL_SECONDARY_COLOR_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	2999;"	d
GL_SECONDARY_COLOR_NV	/usr/include/SDL2/SDL_opengl.h	3229;"	d
GL_SECONDARY_INTERPOLATOR_ATI	/usr/include/SDL2/SDL_opengl.h	3786;"	d
GL_SEPARABLE_2D	/usr/include/SDL2/SDL_opengl.h	195;"	d
GL_SEPARABLE_2D_EXT	/usr/include/SDL2/SDL_opengl.h	2327;"	d
GL_SEPARATE_ATTRIBS	/usr/include/SDL2/SDL_opengl.h	635;"	d
GL_SEPARATE_ATTRIBS_EXT	/usr/include/SDL2/SDL_opengl.h	4657;"	d
GL_SEPARATE_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	4562;"	d
GL_SEPARATE_SPECULAR_COLOR	/usr/include/SDL2/SDL_opengl.h	174;"	d
GL_SEPARATE_SPECULAR_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2992;"	d
GL_SGIS_detail_texture	/usr/include/SDL2/SDL_opengl.h	7627;"	d
GL_SGIS_fog_function	/usr/include/SDL2/SDL_opengl.h	7855;"	d
GL_SGIS_generate_mipmap	/usr/include/SDL2/SDL_opengl.h	7697;"	d
GL_SGIS_multisample	/usr/include/SDL2/SDL_opengl.h	7655;"	d
GL_SGIS_pixel_texture	/usr/include/SDL2/SDL_opengl.h	7573;"	d
GL_SGIS_point_line_texgen	/usr/include/SDL2/SDL_opengl.h	8731;"	d
GL_SGIS_point_parameters	/usr/include/SDL2/SDL_opengl.h	7773;"	d
GL_SGIS_sharpen_texture	/usr/include/SDL2/SDL_opengl.h	7637;"	d
GL_SGIS_texture4D	/usr/include/SDL2/SDL_opengl.h	7591;"	d
GL_SGIS_texture_border_clamp	/usr/include/SDL2/SDL_opengl.h	7713;"	d
GL_SGIS_texture_color_mask	/usr/include/SDL2/SDL_opengl.h	8735;"	d
GL_SGIS_texture_edge_clamp	/usr/include/SDL2/SDL_opengl.h	7709;"	d
GL_SGIS_texture_filter4	/usr/include/SDL2/SDL_opengl.h	7447;"	d
GL_SGIS_texture_lod	/usr/include/SDL2/SDL_opengl.h	7651;"	d
GL_SGIX_async	/usr/include/SDL2/SDL_opengl.h	8103;"	d
GL_SGIX_async_histogram	/usr/include/SDL2/SDL_opengl.h	8125;"	d
GL_SGIX_async_pixel	/usr/include/SDL2/SDL_opengl.h	8121;"	d
GL_SGIX_blend_alpha_minmax	/usr/include/SDL2/SDL_opengl.h	8095;"	d
GL_SGIX_calligraphic_fragment	/usr/include/SDL2/SDL_opengl.h	7957;"	d
GL_SGIX_clipmap	/usr/include/SDL2/SDL_opengl.h	7701;"	d
GL_SGIX_convolution_accuracy	/usr/include/SDL2/SDL_opengl.h	8723;"	d
GL_SGIX_depth_pass_instrument	/usr/include/SDL2/SDL_opengl.h	8689;"	d
GL_SGIX_depth_texture	/usr/include/SDL2/SDL_opengl.h	7851;"	d
GL_SGIX_flush_raster	/usr/include/SDL2/SDL_opengl.h	7843;"	d
GL_SGIX_fog_offset	/usr/include/SDL2/SDL_opengl.h	7865;"	d
GL_SGIX_fog_scale	/usr/include/SDL2/SDL_opengl.h	8313;"	d
GL_SGIX_fragment_lighting	/usr/include/SDL2/SDL_opengl.h	8017;"	d
GL_SGIX_framezoom	/usr/include/SDL2/SDL_opengl.h	7805;"	d
GL_SGIX_igloo_interface	/usr/include/SDL2/SDL_opengl.h	8743;"	d
GL_SGIX_instruments	/usr/include/SDL2/SDL_opengl.h	7783;"	d
GL_SGIX_interlace	/usr/include/SDL2/SDL_opengl.h	7733;"	d
GL_SGIX_ir_instrument1	/usr/include/SDL2/SDL_opengl.h	7953;"	d
GL_SGIX_list_priority	/usr/include/SDL2/SDL_opengl.h	7935;"	d
GL_SGIX_pixel_texture	/usr/include/SDL2/SDL_opengl.h	7565;"	d
GL_SGIX_pixel_tiles	/usr/include/SDL2/SDL_opengl.h	7737;"	d
GL_SGIX_polynomial_ffd	/usr/include/SDL2/SDL_opengl.h	7821;"	d
GL_SGIX_reference_plane	/usr/include/SDL2/SDL_opengl.h	7835;"	d
GL_SGIX_resample	/usr/include/SDL2/SDL_opengl.h	8727;"	d
GL_SGIX_scalebias_hint	/usr/include/SDL2/SDL_opengl.h	8975;"	d
GL_SGIX_shadow	/usr/include/SDL2/SDL_opengl.h	7705;"	d
GL_SGIX_shadow_ambient	/usr/include/SDL2/SDL_opengl.h	7965;"	d
GL_SGIX_sprite	/usr/include/SDL2/SDL_opengl.h	7745;"	d
GL_SGIX_subsample	/usr/include/SDL2/SDL_opengl.h	8677;"	d
GL_SGIX_tag_sample_buffer	/usr/include/SDL2/SDL_opengl.h	7813;"	d
GL_SGIX_texture_add_env	/usr/include/SDL2/SDL_opengl.h	7891;"	d
GL_SGIX_texture_coordinate_clamp	/usr/include/SDL2/SDL_opengl.h	8971;"	d
GL_SGIX_texture_lod_bias	/usr/include/SDL2/SDL_opengl.h	7961;"	d
GL_SGIX_texture_multi_buffer	/usr/include/SDL2/SDL_opengl.h	7759;"	d
GL_SGIX_texture_scale_bias	/usr/include/SDL2/SDL_opengl.h	7801;"	d
GL_SGIX_texture_select	/usr/include/SDL2/SDL_opengl.h	7741;"	d
GL_SGIX_vertex_preclip	/usr/include/SDL2/SDL_opengl.h	8719;"	d
GL_SGIX_ycrcb	/usr/include/SDL2/SDL_opengl.h	8013;"	d
GL_SGIX_ycrcb_subsample	/usr/include/SDL2/SDL_opengl.h	8685;"	d
GL_SGIX_ycrcba	/usr/include/SDL2/SDL_opengl.h	8681;"	d
GL_SGI_color_matrix	/usr/include/SDL2/SDL_opengl.h	7541;"	d
GL_SGI_color_table	/usr/include/SDL2/SDL_opengl.h	7545;"	d
GL_SGI_texture_color_table	/usr/include/SDL2/SDL_opengl.h	7601;"	d
GL_SGX_BINARY_IMG	/usr/include/SDL2/SDL_opengles2.h	1637;"	d
GL_SGX_PROGRAM_BINARY_IMG	/usr/include/SDL2/SDL_opengles2.h	1626;"	d
GL_SHADER	/usr/include/SDL2/SDL_opengles2.h	1186;"	d
GL_SHADER_BINARY_DMP	/usr/include/SDL2/SDL_opengles2.h	1608;"	d
GL_SHADER_BINARY_FORMATS	/usr/include/SDL2/SDL_opengles2.h	769;"	d
GL_SHADER_BINARY_VIV	/usr/include/SDL2/SDL_opengles2.h	1843;"	d
GL_SHADER_COMPILER	/usr/include/SDL2/SDL_opengl.h	2115;"	d
GL_SHADER_COMPILER	/usr/include/SDL2/SDL_opengles2.h	766;"	d
GL_SHADER_CONSISTENT_NV	/usr/include/SDL2/SDL_opengl.h	3502;"	d
GL_SHADER_GLOBAL_ACCESS_BARRIER_BIT_NV	/usr/include/SDL2/SDL_opengl.h	5042;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4973;"	d
GL_SHADER_INCLUDE_ARB	/usr/include/SDL2/SDL_opengl.h	1947;"	d
GL_SHADER_OBJECT_ARB	/usr/include/SDL2/SDL_opengl.h	1487;"	d
GL_SHADER_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2.h	1429;"	d
GL_SHADER_OPERATION_NV	/usr/include/SDL2/SDL_opengl.h	3504;"	d
GL_SHADER_SOURCE_LENGTH	/usr/include/SDL2/SDL_opengl.h	531;"	d
GL_SHADER_SOURCE_LENGTH	/usr/include/SDL2/SDL_opengles2.h	765;"	d
GL_SHADER_TYPE	/usr/include/SDL2/SDL_opengl.h	503;"	d
GL_SHADER_TYPE	/usr/include/SDL2/SDL_opengles2.h	622;"	d
GL_SHADING_LANGUAGE_VERSION	/usr/include/SDL2/SDL_opengl.h	535;"	d
GL_SHADING_LANGUAGE_VERSION	/usr/include/SDL2/SDL_opengles2.h	631;"	d
GL_SHADING_LANGUAGE_VERSION_ARB	/usr/include/SDL2/SDL_opengl.h	1539;"	d
GL_SHADOW_AMBIENT_SGIX	/usr/include/SDL2/SDL_opengl.h	2811;"	d
GL_SHADOW_ATTENUATION_EXT	/usr/include/SDL2/SDL_opengl.h	2908;"	d
GL_SHARED_TEXTURE_PALETTE_EXT	/usr/include/SDL2/SDL_opengl.h	2986;"	d
GL_SHARPEN_TEXTURE_FUNC_POINTS_SGIS	/usr/include/SDL2/SDL_opengl.h	2440;"	d
GL_SHORT	/usr/include/SDL2/SDL_opengles2.h	591;"	d
GL_SIGNALED	/usr/include/SDL2/SDL_opengl.h	1883;"	d
GL_SIGNALED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1369;"	d
GL_SIGNED_ALPHA8_NV	/usr/include/SDL2/SDL_opengl.h	3542;"	d
GL_SIGNED_ALPHA_NV	/usr/include/SDL2/SDL_opengl.h	3541;"	d
GL_SIGNED_HILO16_NV	/usr/include/SDL2/SDL_opengl.h	3532;"	d
GL_SIGNED_HILO8_NV	/usr/include/SDL2/SDL_opengl.h	4017;"	d
GL_SIGNED_HILO_NV	/usr/include/SDL2/SDL_opengl.h	3531;"	d
GL_SIGNED_IDENTITY_NV	/usr/include/SDL2/SDL_opengl.h	3241;"	d
GL_SIGNED_INTENSITY8_NV	/usr/include/SDL2/SDL_opengl.h	3544;"	d
GL_SIGNED_INTENSITY_NV	/usr/include/SDL2/SDL_opengl.h	3543;"	d
GL_SIGNED_LUMINANCE8_ALPHA8_NV	/usr/include/SDL2/SDL_opengl.h	3540;"	d
GL_SIGNED_LUMINANCE8_NV	/usr/include/SDL2/SDL_opengl.h	3538;"	d
GL_SIGNED_LUMINANCE_ALPHA_NV	/usr/include/SDL2/SDL_opengl.h	3539;"	d
GL_SIGNED_LUMINANCE_NV	/usr/include/SDL2/SDL_opengl.h	3537;"	d
GL_SIGNED_NEGATE_NV	/usr/include/SDL2/SDL_opengl.h	3242;"	d
GL_SIGNED_NORMALIZED	/usr/include/SDL2/SDL_opengl.h	848;"	d
GL_SIGNED_RGB8_NV	/usr/include/SDL2/SDL_opengl.h	3536;"	d
GL_SIGNED_RGB8_UNSIGNED_ALPHA8_NV	/usr/include/SDL2/SDL_opengl.h	3549;"	d
GL_SIGNED_RGBA8_NV	/usr/include/SDL2/SDL_opengl.h	3534;"	d
GL_SIGNED_RGBA_NV	/usr/include/SDL2/SDL_opengl.h	3533;"	d
GL_SIGNED_RGB_NV	/usr/include/SDL2/SDL_opengl.h	3535;"	d
GL_SIGNED_RGB_UNSIGNED_ALPHA_NV	/usr/include/SDL2/SDL_opengl.h	3548;"	d
GL_SINGLE_COLOR	/usr/include/SDL2/SDL_opengl.h	173;"	d
GL_SINGLE_COLOR_EXT	/usr/include/SDL2/SDL_opengl.h	2991;"	d
GL_SKIP_COMPONENTS1_NV	/usr/include/SDL2/SDL_opengl.h	4570;"	d
GL_SKIP_COMPONENTS2_NV	/usr/include/SDL2/SDL_opengl.h	4569;"	d
GL_SKIP_COMPONENTS3_NV	/usr/include/SDL2/SDL_opengl.h	4568;"	d
GL_SKIP_COMPONENTS4_NV	/usr/include/SDL2/SDL_opengl.h	4567;"	d
GL_SLICE_ACCUM_SUN	/usr/include/SDL2/SDL_opengl.h	3977;"	d
GL_SLUMINANCE	/usr/include/SDL2/SDL_opengl.h	575;"	d
GL_SLUMINANCE8	/usr/include/SDL2/SDL_opengl.h	576;"	d
GL_SLUMINANCE8_ALPHA8	/usr/include/SDL2/SDL_opengl.h	574;"	d
GL_SLUMINANCE8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl.h	4322;"	d
GL_SLUMINANCE8_EXT	/usr/include/SDL2/SDL_opengl.h	4324;"	d
GL_SLUMINANCE_ALPHA	/usr/include/SDL2/SDL_opengl.h	573;"	d
GL_SLUMINANCE_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	4321;"	d
GL_SLUMINANCE_EXT	/usr/include/SDL2/SDL_opengl.h	4323;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	/usr/include/SDL2/SDL_opengl.h	166;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	/usr/include/SDL2/SDL_opengl.h	165;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	/usr/include/SDL2/SDL_opengl.h	164;"	d
GL_SMOOTH_POINT_SIZE_RANGE	/usr/include/SDL2/SDL_opengl.h	163;"	d
GL_SOURCE0_ALPHA	/usr/include/SDL2/SDL_opengl.h	341;"	d
GL_SOURCE0_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1292;"	d
GL_SOURCE0_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3059;"	d
GL_SOURCE0_RGB	/usr/include/SDL2/SDL_opengl.h	338;"	d
GL_SOURCE0_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1289;"	d
GL_SOURCE0_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3056;"	d
GL_SOURCE1_ALPHA	/usr/include/SDL2/SDL_opengl.h	342;"	d
GL_SOURCE1_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1293;"	d
GL_SOURCE1_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3060;"	d
GL_SOURCE1_RGB	/usr/include/SDL2/SDL_opengl.h	339;"	d
GL_SOURCE1_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1290;"	d
GL_SOURCE1_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3057;"	d
GL_SOURCE2_ALPHA	/usr/include/SDL2/SDL_opengl.h	343;"	d
GL_SOURCE2_ALPHA_ARB	/usr/include/SDL2/SDL_opengl.h	1294;"	d
GL_SOURCE2_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	3061;"	d
GL_SOURCE2_RGB	/usr/include/SDL2/SDL_opengl.h	340;"	d
GL_SOURCE2_RGB_ARB	/usr/include/SDL2/SDL_opengl.h	1291;"	d
GL_SOURCE2_RGB_EXT	/usr/include/SDL2/SDL_opengl.h	3058;"	d
GL_SOURCE3_ALPHA_NV	/usr/include/SDL2/SDL_opengl.h	3295;"	d
GL_SOURCE3_RGB_NV	/usr/include/SDL2/SDL_opengl.h	3294;"	d
GL_SPARE0_NV	/usr/include/SDL2/SDL_opengl.h	3230;"	d
GL_SPARE0_PLUS_SECONDARY_COLOR_NV	/usr/include/SDL2/SDL_opengl.h	3234;"	d
GL_SPARE1_NV	/usr/include/SDL2/SDL_opengl.h	3231;"	d
GL_SPRITE_AXIAL_SGIX	/usr/include/SDL2/SDL_opengl.h	2614;"	d
GL_SPRITE_AXIS_SGIX	/usr/include/SDL2/SDL_opengl.h	2612;"	d
GL_SPRITE_EYE_ALIGNED_SGIX	/usr/include/SDL2/SDL_opengl.h	2616;"	d
GL_SPRITE_MODE_SGIX	/usr/include/SDL2/SDL_opengl.h	2611;"	d
GL_SPRITE_OBJECT_ALIGNED_SGIX	/usr/include/SDL2/SDL_opengl.h	2615;"	d
GL_SPRITE_SGIX	/usr/include/SDL2/SDL_opengl.h	2610;"	d
GL_SPRITE_TRANSLATION_SGIX	/usr/include/SDL2/SDL_opengl.h	2613;"	d
GL_SRC0_ALPHA	/usr/include/SDL2/SDL_opengl.h	457;"	d
GL_SRC0_RGB	/usr/include/SDL2/SDL_opengl.h	454;"	d
GL_SRC1_ALPHA	/usr/include/SDL2/SDL_opengl.h	458;"	d
GL_SRC1_COLOR	/usr/include/SDL2/SDL_opengl.h	1960;"	d
GL_SRC1_RGB	/usr/include/SDL2/SDL_opengl.h	455;"	d
GL_SRC2_ALPHA	/usr/include/SDL2/SDL_opengl.h	459;"	d
GL_SRC2_RGB	/usr/include/SDL2/SDL_opengl.h	456;"	d
GL_SRC_ALPHA	/usr/include/SDL2/SDL_opengles2.h	431;"	d
GL_SRC_ALPHA_SATURATE	/usr/include/SDL2/SDL_opengles2.h	441;"	d
GL_SRC_COLOR	/usr/include/SDL2/SDL_opengles2.h	429;"	d
GL_SRGB	/usr/include/SDL2/SDL_opengl.h	563;"	d
GL_SRGB8	/usr/include/SDL2/SDL_opengl.h	564;"	d
GL_SRGB8_ALPHA8	/usr/include/SDL2/SDL_opengl.h	566;"	d
GL_SRGB8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengl.h	4320;"	d
GL_SRGB8_ALPHA8_EXT	/usr/include/SDL2/SDL_opengles2.h	1534;"	d
GL_SRGB8_EXT	/usr/include/SDL2/SDL_opengl.h	4318;"	d
GL_SRGB_ALPHA	/usr/include/SDL2/SDL_opengl.h	565;"	d
GL_SRGB_ALPHA_EXT	/usr/include/SDL2/SDL_opengl.h	4319;"	d
GL_SRGB_ALPHA_EXT	/usr/include/SDL2/SDL_opengles2.h	1533;"	d
GL_SRGB_EXT	/usr/include/SDL2/SDL_opengl.h	4317;"	d
GL_SRGB_EXT	/usr/include/SDL2/SDL_opengles2.h	1532;"	d
GL_STACK_OVERFLOW	/usr/include/SDL2/SDL_opengles2.h	1201;"	d
GL_STACK_UNDERFLOW	/usr/include/SDL2/SDL_opengles2.h	1202;"	d
GL_STATE_RESTORE	/usr/include/SDL2/SDL_opengles2.h	1785;"	d
GL_STATIC_ATI	/usr/include/SDL2/SDL_opengl.h	3829;"	d
GL_STATIC_COPY	/usr/include/SDL2/SDL_opengl.h	429;"	d
GL_STATIC_COPY_ARB	/usr/include/SDL2/SDL_opengl.h	1471;"	d
GL_STATIC_DRAW	/usr/include/SDL2/SDL_opengl.h	427;"	d
GL_STATIC_DRAW	/usr/include/SDL2/SDL_opengles2.h	475;"	d
GL_STATIC_DRAW_ARB	/usr/include/SDL2/SDL_opengl.h	1469;"	d
GL_STATIC_READ	/usr/include/SDL2/SDL_opengl.h	428;"	d
GL_STATIC_READ_ARB	/usr/include/SDL2/SDL_opengl.h	1470;"	d
GL_STENCIL_ATTACHMENT	/usr/include/SDL2/SDL_opengl.h	1691;"	d
GL_STENCIL_ATTACHMENT	/usr/include/SDL2/SDL_opengles2.h	807;"	d
GL_STENCIL_ATTACHMENT_EXT	/usr/include/SDL2/SDL_opengl.h	4283;"	d
GL_STENCIL_BACK_FAIL	/usr/include/SDL2/SDL_opengl.h	472;"	d
GL_STENCIL_BACK_FAIL	/usr/include/SDL2/SDL_opengles2.h	540;"	d
GL_STENCIL_BACK_FAIL_ATI	/usr/include/SDL2/SDL_opengl.h	4181;"	d
GL_STENCIL_BACK_FUNC	/usr/include/SDL2/SDL_opengl.h	471;"	d
GL_STENCIL_BACK_FUNC	/usr/include/SDL2/SDL_opengles2.h	539;"	d
GL_STENCIL_BACK_FUNC_ATI	/usr/include/SDL2/SDL_opengl.h	4180;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengl.h	473;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengles2.h	541;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL_ATI	/usr/include/SDL2/SDL_opengl.h	4182;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengl.h	474;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengles2.h	542;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS_ATI	/usr/include/SDL2/SDL_opengl.h	4183;"	d
GL_STENCIL_BACK_REF	/usr/include/SDL2/SDL_opengl.h	540;"	d
GL_STENCIL_BACK_REF	/usr/include/SDL2/SDL_opengles2.h	543;"	d
GL_STENCIL_BACK_VALUE_MASK	/usr/include/SDL2/SDL_opengl.h	541;"	d
GL_STENCIL_BACK_VALUE_MASK	/usr/include/SDL2/SDL_opengles2.h	544;"	d
GL_STENCIL_BACK_WRITEMASK	/usr/include/SDL2/SDL_opengl.h	542;"	d
GL_STENCIL_BACK_WRITEMASK	/usr/include/SDL2/SDL_opengles2.h	545;"	d
GL_STENCIL_BITS	/usr/include/SDL2/SDL_opengles2.h	561;"	d
GL_STENCIL_BUFFER	/usr/include/SDL2/SDL_opengl.h	597;"	d
GL_STENCIL_BUFFER_BIT	/usr/include/SDL2/SDL_opengles2.h	400;"	d
GL_STENCIL_BUFFER_BIT0_QCOM	/usr/include/SDL2/SDL_opengles2.h	1819;"	d
GL_STENCIL_BUFFER_BIT1_QCOM	/usr/include/SDL2/SDL_opengles2.h	1820;"	d
GL_STENCIL_BUFFER_BIT2_QCOM	/usr/include/SDL2/SDL_opengles2.h	1821;"	d
GL_STENCIL_BUFFER_BIT3_QCOM	/usr/include/SDL2/SDL_opengles2.h	1822;"	d
GL_STENCIL_BUFFER_BIT4_QCOM	/usr/include/SDL2/SDL_opengles2.h	1823;"	d
GL_STENCIL_BUFFER_BIT5_QCOM	/usr/include/SDL2/SDL_opengles2.h	1824;"	d
GL_STENCIL_BUFFER_BIT6_QCOM	/usr/include/SDL2/SDL_opengles2.h	1825;"	d
GL_STENCIL_BUFFER_BIT7_QCOM	/usr/include/SDL2/SDL_opengles2.h	1826;"	d
GL_STENCIL_CLEAR_TAG_VALUE_EXT	/usr/include/SDL2/SDL_opengl.h	4313;"	d
GL_STENCIL_CLEAR_VALUE	/usr/include/SDL2/SDL_opengles2.h	531;"	d
GL_STENCIL_EXT	/usr/include/SDL2/SDL_opengles2.h	1442;"	d
GL_STENCIL_FAIL	/usr/include/SDL2/SDL_opengles2.h	533;"	d
GL_STENCIL_FUNC	/usr/include/SDL2/SDL_opengles2.h	532;"	d
GL_STENCIL_INDEX1	/usr/include/SDL2/SDL_opengl.h	1697;"	d
GL_STENCIL_INDEX16	/usr/include/SDL2/SDL_opengl.h	1700;"	d
GL_STENCIL_INDEX16_EXT	/usr/include/SDL2/SDL_opengl.h	4292;"	d
GL_STENCIL_INDEX1_EXT	/usr/include/SDL2/SDL_opengl.h	4289;"	d
GL_STENCIL_INDEX1_OES	/usr/include/SDL2/SDL_opengles2.h	1104;"	d
GL_STENCIL_INDEX4	/usr/include/SDL2/SDL_opengl.h	1698;"	d
GL_STENCIL_INDEX4_EXT	/usr/include/SDL2/SDL_opengl.h	4290;"	d
GL_STENCIL_INDEX4_OES	/usr/include/SDL2/SDL_opengles2.h	1109;"	d
GL_STENCIL_INDEX8	/usr/include/SDL2/SDL_opengl.h	1699;"	d
GL_STENCIL_INDEX8	/usr/include/SDL2/SDL_opengles2.h	788;"	d
GL_STENCIL_INDEX8_EXT	/usr/include/SDL2/SDL_opengl.h	4291;"	d
GL_STENCIL_PASS_DEPTH_FAIL	/usr/include/SDL2/SDL_opengles2.h	534;"	d
GL_STENCIL_PASS_DEPTH_PASS	/usr/include/SDL2/SDL_opengles2.h	535;"	d
GL_STENCIL_REF	/usr/include/SDL2/SDL_opengles2.h	536;"	d
GL_STENCIL_TAG_BITS_EXT	/usr/include/SDL2/SDL_opengl.h	4312;"	d
GL_STENCIL_TEST	/usr/include/SDL2/SDL_opengles2.h	503;"	d
GL_STENCIL_TEST_TWO_SIDE_EXT	/usr/include/SDL2/SDL_opengl.h	4028;"	d
GL_STENCIL_VALUE_MASK	/usr/include/SDL2/SDL_opengles2.h	537;"	d
GL_STENCIL_WRITEMASK	/usr/include/SDL2/SDL_opengles2.h	538;"	d
GL_STORAGE_CACHED_APPLE	/usr/include/SDL2/SDL_opengl.h	4061;"	d
GL_STORAGE_CLIENT_APPLE	/usr/include/SDL2/SDL_opengl.h	4060;"	d
GL_STORAGE_PRIVATE_APPLE	/usr/include/SDL2/SDL_opengl.h	4778;"	d
GL_STORAGE_SHARED_APPLE	/usr/include/SDL2/SDL_opengl.h	4062;"	d
GL_STREAM_COPY	/usr/include/SDL2/SDL_opengl.h	426;"	d
GL_STREAM_COPY_ARB	/usr/include/SDL2/SDL_opengl.h	1468;"	d
GL_STREAM_DRAW	/usr/include/SDL2/SDL_opengl.h	424;"	d
GL_STREAM_DRAW	/usr/include/SDL2/SDL_opengles2.h	474;"	d
GL_STREAM_DRAW_ARB	/usr/include/SDL2/SDL_opengl.h	1466;"	d
GL_STREAM_READ	/usr/include/SDL2/SDL_opengl.h	425;"	d
GL_STREAM_READ_ARB	/usr/include/SDL2/SDL_opengl.h	1467;"	d
GL_STRICT_DEPTHFUNC_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2768;"	d
GL_STRICT_LIGHTING_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2769;"	d
GL_STRICT_SCISSOR_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2770;"	d
GL_SUBPIXEL_BITS	/usr/include/SDL2/SDL_opengles2.h	555;"	d
GL_SUBTRACT	/usr/include/SDL2/SDL_opengl.h	353;"	d
GL_SUBTRACT_ARB	/usr/include/SDL2/SDL_opengl.h	1304;"	d
GL_SUB_ATI	/usr/include/SDL2/SDL_opengl.h	3778;"	d
GL_SUCCESS_NV	/usr/include/SDL2/SDL_opengl.h	4853;"	d
GL_SUNX_constant_data	/usr/include/SDL2/SDL_opengl.h	8317;"	d
GL_SUN_convolution_border_modes	/usr/include/SDL2/SDL_opengl.h	8489;"	d
GL_SUN_global_alpha	/usr/include/SDL2/SDL_opengl.h	8325;"	d
GL_SUN_mesh_array	/usr/include/SDL2/SDL_opengl.h	9281;"	d
GL_SUN_slice_accum	/usr/include/SDL2/SDL_opengl.h	9289;"	d
GL_SUN_triangle_list	/usr/include/SDL2/SDL_opengl.h	8347;"	d
GL_SUN_vertex	/usr/include/SDL2/SDL_opengl.h	8367;"	d
GL_SURFACE_MAPPED_NV	/usr/include/SDL2/SDL_opengl.h	5092;"	d
GL_SURFACE_REGISTERED_NV	/usr/include/SDL2/SDL_opengl.h	5091;"	d
GL_SURFACE_STATE_NV	/usr/include/SDL2/SDL_opengl.h	5090;"	d
GL_SWIZZLE_STQ_ATI	/usr/include/SDL2/SDL_opengl.h	3796;"	d
GL_SWIZZLE_STQ_DQ_ATI	/usr/include/SDL2/SDL_opengl.h	3798;"	d
GL_SWIZZLE_STRQ_ATI	/usr/include/SDL2/SDL_opengl.h	3799;"	d
GL_SWIZZLE_STRQ_DQ_ATI	/usr/include/SDL2/SDL_opengl.h	3800;"	d
GL_SWIZZLE_STR_ATI	/usr/include/SDL2/SDL_opengl.h	3795;"	d
GL_SWIZZLE_STR_DR_ATI	/usr/include/SDL2/SDL_opengl.h	3797;"	d
GL_SYNC_CL_EVENT_ARB	/usr/include/SDL2/SDL_opengl.h	2177;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	/usr/include/SDL2/SDL_opengl.h	2178;"	d
GL_SYNC_CONDITION	/usr/include/SDL2/SDL_opengl.h	1877;"	d
GL_SYNC_CONDITION_APPLE	/usr/include/SDL2/SDL_opengles2.h	1363;"	d
GL_SYNC_FENCE	/usr/include/SDL2/SDL_opengl.h	1880;"	d
GL_SYNC_FENCE_APPLE	/usr/include/SDL2/SDL_opengles2.h	1366;"	d
GL_SYNC_FLAGS	/usr/include/SDL2/SDL_opengl.h	1879;"	d
GL_SYNC_FLAGS_APPLE	/usr/include/SDL2/SDL_opengles2.h	1365;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	/usr/include/SDL2/SDL_opengl.h	1888;"	d
GL_SYNC_FLUSH_COMMANDS_BIT_APPLE	/usr/include/SDL2/SDL_opengles2.h	1374;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	/usr/include/SDL2/SDL_opengl.h	1881;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE_APPLE	/usr/include/SDL2/SDL_opengles2.h	1367;"	d
GL_SYNC_OBJECT_APPLE	/usr/include/SDL2/SDL_opengles2.h	1360;"	d
GL_SYNC_STATUS	/usr/include/SDL2/SDL_opengl.h	1878;"	d
GL_SYNC_STATUS_APPLE	/usr/include/SDL2/SDL_opengles2.h	1364;"	d
GL_T2F_IUI_N3F_V2F_EXT	/usr/include/SDL2/SDL_opengl.h	2836;"	d
GL_T2F_IUI_N3F_V3F_EXT	/usr/include/SDL2/SDL_opengl.h	2837;"	d
GL_T2F_IUI_V2F_EXT	/usr/include/SDL2/SDL_opengl.h	2834;"	d
GL_T2F_IUI_V3F_EXT	/usr/include/SDL2/SDL_opengl.h	2835;"	d
GL_TABLE_TOO_LARGE	/usr/include/SDL2/SDL_opengl.h	226;"	d
GL_TABLE_TOO_LARGE_EXT	/usr/include/SDL2/SDL_opengl.h	2321;"	d
GL_TANGENT_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	3030;"	d
GL_TANGENT_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	3038;"	d
GL_TANGENT_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	3035;"	d
GL_TANGENT_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3034;"	d
GL_TESSELLATION_FACTOR_AMD	/usr/include/SDL2/SDL_opengl.h	4731;"	d
GL_TESSELLATION_MODE_AMD	/usr/include/SDL2/SDL_opengl.h	4730;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	/usr/include/SDL2/SDL_opengl.h	2052;"	d
GL_TESS_CONTROL_PROGRAM_NV	/usr/include/SDL2/SDL_opengl.h	5049;"	d
GL_TESS_CONTROL_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	5051;"	d
GL_TESS_CONTROL_SHADER	/usr/include/SDL2/SDL_opengl.h	2084;"	d
GL_TESS_CONTROL_SHADER_BIT	/usr/include/SDL2/SDL_opengl.h	2133;"	d
GL_TESS_EVALUATION_PROGRAM_NV	/usr/include/SDL2/SDL_opengl.h	5050;"	d
GL_TESS_EVALUATION_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	5052;"	d
GL_TESS_EVALUATION_SHADER	/usr/include/SDL2/SDL_opengl.h	2083;"	d
GL_TESS_EVALUATION_SHADER_BIT	/usr/include/SDL2/SDL_opengl.h	2134;"	d
GL_TESS_GEN_MODE	/usr/include/SDL2/SDL_opengl.h	2053;"	d
GL_TESS_GEN_POINT_MODE	/usr/include/SDL2/SDL_opengl.h	2056;"	d
GL_TESS_GEN_SPACING	/usr/include/SDL2/SDL_opengl.h	2054;"	d
GL_TESS_GEN_VERTEX_ORDER	/usr/include/SDL2/SDL_opengl.h	2055;"	d
GL_TEXCOORD1_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2747;"	d
GL_TEXCOORD2_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2748;"	d
GL_TEXCOORD3_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2749;"	d
GL_TEXCOORD4_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2750;"	d
GL_TEXTURE	/usr/include/SDL2/SDL_opengles2.h	680;"	d
GL_TEXTURE0	/usr/include/SDL2/SDL_opengl.h	260;"	d
GL_TEXTURE0	/usr/include/SDL2/SDL_opengles2.h	693;"	d
GL_TEXTURE0_ARB	/usr/include/SDL2/SDL_opengl.h	1128;"	d
GL_TEXTURE1	/usr/include/SDL2/SDL_opengl.h	261;"	d
GL_TEXTURE1	/usr/include/SDL2/SDL_opengles2.h	694;"	d
GL_TEXTURE10	/usr/include/SDL2/SDL_opengl.h	270;"	d
GL_TEXTURE10	/usr/include/SDL2/SDL_opengles2.h	703;"	d
GL_TEXTURE10_ARB	/usr/include/SDL2/SDL_opengl.h	1138;"	d
GL_TEXTURE11	/usr/include/SDL2/SDL_opengl.h	271;"	d
GL_TEXTURE11	/usr/include/SDL2/SDL_opengles2.h	704;"	d
GL_TEXTURE11_ARB	/usr/include/SDL2/SDL_opengl.h	1139;"	d
GL_TEXTURE12	/usr/include/SDL2/SDL_opengl.h	272;"	d
GL_TEXTURE12	/usr/include/SDL2/SDL_opengles2.h	705;"	d
GL_TEXTURE12_ARB	/usr/include/SDL2/SDL_opengl.h	1140;"	d
GL_TEXTURE13	/usr/include/SDL2/SDL_opengl.h	273;"	d
GL_TEXTURE13	/usr/include/SDL2/SDL_opengles2.h	706;"	d
GL_TEXTURE13_ARB	/usr/include/SDL2/SDL_opengl.h	1141;"	d
GL_TEXTURE14	/usr/include/SDL2/SDL_opengl.h	274;"	d
GL_TEXTURE14	/usr/include/SDL2/SDL_opengles2.h	707;"	d
GL_TEXTURE14_ARB	/usr/include/SDL2/SDL_opengl.h	1142;"	d
GL_TEXTURE15	/usr/include/SDL2/SDL_opengl.h	275;"	d
GL_TEXTURE15	/usr/include/SDL2/SDL_opengles2.h	708;"	d
GL_TEXTURE15_ARB	/usr/include/SDL2/SDL_opengl.h	1143;"	d
GL_TEXTURE16	/usr/include/SDL2/SDL_opengl.h	276;"	d
GL_TEXTURE16	/usr/include/SDL2/SDL_opengles2.h	709;"	d
GL_TEXTURE16_ARB	/usr/include/SDL2/SDL_opengl.h	1144;"	d
GL_TEXTURE17	/usr/include/SDL2/SDL_opengl.h	277;"	d
GL_TEXTURE17	/usr/include/SDL2/SDL_opengles2.h	710;"	d
GL_TEXTURE17_ARB	/usr/include/SDL2/SDL_opengl.h	1145;"	d
GL_TEXTURE18	/usr/include/SDL2/SDL_opengl.h	278;"	d
GL_TEXTURE18	/usr/include/SDL2/SDL_opengles2.h	711;"	d
GL_TEXTURE18_ARB	/usr/include/SDL2/SDL_opengl.h	1146;"	d
GL_TEXTURE19	/usr/include/SDL2/SDL_opengl.h	279;"	d
GL_TEXTURE19	/usr/include/SDL2/SDL_opengles2.h	712;"	d
GL_TEXTURE19_ARB	/usr/include/SDL2/SDL_opengl.h	1147;"	d
GL_TEXTURE1_ARB	/usr/include/SDL2/SDL_opengl.h	1129;"	d
GL_TEXTURE2	/usr/include/SDL2/SDL_opengl.h	262;"	d
GL_TEXTURE2	/usr/include/SDL2/SDL_opengles2.h	695;"	d
GL_TEXTURE20	/usr/include/SDL2/SDL_opengl.h	280;"	d
GL_TEXTURE20	/usr/include/SDL2/SDL_opengles2.h	713;"	d
GL_TEXTURE20_ARB	/usr/include/SDL2/SDL_opengl.h	1148;"	d
GL_TEXTURE21	/usr/include/SDL2/SDL_opengl.h	281;"	d
GL_TEXTURE21	/usr/include/SDL2/SDL_opengles2.h	714;"	d
GL_TEXTURE21_ARB	/usr/include/SDL2/SDL_opengl.h	1149;"	d
GL_TEXTURE22	/usr/include/SDL2/SDL_opengl.h	282;"	d
GL_TEXTURE22	/usr/include/SDL2/SDL_opengles2.h	715;"	d
GL_TEXTURE22_ARB	/usr/include/SDL2/SDL_opengl.h	1150;"	d
GL_TEXTURE23	/usr/include/SDL2/SDL_opengl.h	283;"	d
GL_TEXTURE23	/usr/include/SDL2/SDL_opengles2.h	716;"	d
GL_TEXTURE23_ARB	/usr/include/SDL2/SDL_opengl.h	1151;"	d
GL_TEXTURE24	/usr/include/SDL2/SDL_opengl.h	284;"	d
GL_TEXTURE24	/usr/include/SDL2/SDL_opengles2.h	717;"	d
GL_TEXTURE24_ARB	/usr/include/SDL2/SDL_opengl.h	1152;"	d
GL_TEXTURE25	/usr/include/SDL2/SDL_opengl.h	285;"	d
GL_TEXTURE25	/usr/include/SDL2/SDL_opengles2.h	718;"	d
GL_TEXTURE25_ARB	/usr/include/SDL2/SDL_opengl.h	1153;"	d
GL_TEXTURE26	/usr/include/SDL2/SDL_opengl.h	286;"	d
GL_TEXTURE26	/usr/include/SDL2/SDL_opengles2.h	719;"	d
GL_TEXTURE26_ARB	/usr/include/SDL2/SDL_opengl.h	1154;"	d
GL_TEXTURE27	/usr/include/SDL2/SDL_opengl.h	287;"	d
GL_TEXTURE27	/usr/include/SDL2/SDL_opengles2.h	720;"	d
GL_TEXTURE27_ARB	/usr/include/SDL2/SDL_opengl.h	1155;"	d
GL_TEXTURE28	/usr/include/SDL2/SDL_opengl.h	288;"	d
GL_TEXTURE28	/usr/include/SDL2/SDL_opengles2.h	721;"	d
GL_TEXTURE28_ARB	/usr/include/SDL2/SDL_opengl.h	1156;"	d
GL_TEXTURE29	/usr/include/SDL2/SDL_opengl.h	289;"	d
GL_TEXTURE29	/usr/include/SDL2/SDL_opengles2.h	722;"	d
GL_TEXTURE29_ARB	/usr/include/SDL2/SDL_opengl.h	1157;"	d
GL_TEXTURE2_ARB	/usr/include/SDL2/SDL_opengl.h	1130;"	d
GL_TEXTURE3	/usr/include/SDL2/SDL_opengl.h	263;"	d
GL_TEXTURE3	/usr/include/SDL2/SDL_opengles2.h	696;"	d
GL_TEXTURE30	/usr/include/SDL2/SDL_opengl.h	290;"	d
GL_TEXTURE30	/usr/include/SDL2/SDL_opengles2.h	723;"	d
GL_TEXTURE30_ARB	/usr/include/SDL2/SDL_opengl.h	1158;"	d
GL_TEXTURE31	/usr/include/SDL2/SDL_opengl.h	291;"	d
GL_TEXTURE31	/usr/include/SDL2/SDL_opengles2.h	724;"	d
GL_TEXTURE31_ARB	/usr/include/SDL2/SDL_opengl.h	1159;"	d
GL_TEXTURE3_ARB	/usr/include/SDL2/SDL_opengl.h	1131;"	d
GL_TEXTURE4	/usr/include/SDL2/SDL_opengl.h	264;"	d
GL_TEXTURE4	/usr/include/SDL2/SDL_opengles2.h	697;"	d
GL_TEXTURE4_ARB	/usr/include/SDL2/SDL_opengl.h	1132;"	d
GL_TEXTURE5	/usr/include/SDL2/SDL_opengl.h	265;"	d
GL_TEXTURE5	/usr/include/SDL2/SDL_opengles2.h	698;"	d
GL_TEXTURE5_ARB	/usr/include/SDL2/SDL_opengl.h	1133;"	d
GL_TEXTURE6	/usr/include/SDL2/SDL_opengl.h	266;"	d
GL_TEXTURE6	/usr/include/SDL2/SDL_opengles2.h	699;"	d
GL_TEXTURE6_ARB	/usr/include/SDL2/SDL_opengl.h	1134;"	d
GL_TEXTURE7	/usr/include/SDL2/SDL_opengl.h	267;"	d
GL_TEXTURE7	/usr/include/SDL2/SDL_opengles2.h	700;"	d
GL_TEXTURE7_ARB	/usr/include/SDL2/SDL_opengl.h	1135;"	d
GL_TEXTURE8	/usr/include/SDL2/SDL_opengl.h	268;"	d
GL_TEXTURE8	/usr/include/SDL2/SDL_opengles2.h	701;"	d
GL_TEXTURE8_ARB	/usr/include/SDL2/SDL_opengl.h	1136;"	d
GL_TEXTURE9	/usr/include/SDL2/SDL_opengl.h	269;"	d
GL_TEXTURE9	/usr/include/SDL2/SDL_opengles2.h	702;"	d
GL_TEXTURE9_ARB	/usr/include/SDL2/SDL_opengl.h	1137;"	d
GL_TEXTURE_1D_ARRAY	/usr/include/SDL2/SDL_opengl.h	612;"	d
GL_TEXTURE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4464;"	d
GL_TEXTURE_1D_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	2420;"	d
GL_TEXTURE_1D_STACK_BINDING_MESAX	/usr/include/SDL2/SDL_opengl.h	4353;"	d
GL_TEXTURE_1D_STACK_MESAX	/usr/include/SDL2/SDL_opengl.h	4349;"	d
GL_TEXTURE_2D	/usr/include/SDL2/SDL_opengles2.h	499;"	d
GL_TEXTURE_2D_ARRAY	/usr/include/SDL2/SDL_opengl.h	614;"	d
GL_TEXTURE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4466;"	d
GL_TEXTURE_2D_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	2421;"	d
GL_TEXTURE_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1897;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl.h	1899;"	d
GL_TEXTURE_2D_STACK_BINDING_MESAX	/usr/include/SDL2/SDL_opengl.h	4354;"	d
GL_TEXTURE_2D_STACK_MESAX	/usr/include/SDL2/SDL_opengl.h	4350;"	d
GL_TEXTURE_3D	/usr/include/SDL2/SDL_opengl.h	142;"	d
GL_TEXTURE_3D_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	2422;"	d
GL_TEXTURE_3D_EXT	/usr/include/SDL2/SDL_opengl.h	2289;"	d
GL_TEXTURE_3D_OES	/usr/include/SDL2/SDL_opengles2.h	1119;"	d
GL_TEXTURE_4DSIZE_SGIS	/usr/include/SDL2/SDL_opengl.h	2399;"	d
GL_TEXTURE_4D_BINDING_SGIS	/usr/include/SDL2/SDL_opengl.h	2402;"	d
GL_TEXTURE_4D_SGIS	/usr/include/SDL2/SDL_opengl.h	2397;"	d
GL_TEXTURE_ALPHA_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2275;"	d
GL_TEXTURE_ALPHA_TYPE	/usr/include/SDL2/SDL_opengl.h	1652;"	d
GL_TEXTURE_ALPHA_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1596;"	d
GL_TEXTURE_APPLICATION_MODE_EXT	/usr/include/SDL2/SDL_opengl.h	2909;"	d
GL_TEXTURE_BASE_LEVEL	/usr/include/SDL2/SDL_opengl.h	161;"	d
GL_TEXTURE_BASE_LEVEL_SGIS	/usr/include/SDL2/SDL_opengl.h	2454;"	d
GL_TEXTURE_BINDING_1D_ARRAY	/usr/include/SDL2/SDL_opengl.h	616;"	d
GL_TEXTURE_BINDING_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4468;"	d
GL_TEXTURE_BINDING_2D	/usr/include/SDL2/SDL_opengles2.h	565;"	d
GL_TEXTURE_BINDING_2D_ARRAY	/usr/include/SDL2/SDL_opengl.h	617;"	d
GL_TEXTURE_BINDING_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4469;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1901;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl.h	1902;"	d
GL_TEXTURE_BINDING_3D	/usr/include/SDL2/SDL_opengl.h	137;"	d
GL_TEXTURE_BINDING_3D_OES	/usr/include/SDL2/SDL_opengles2.h	1120;"	d
GL_TEXTURE_BINDING_BUFFER	/usr/include/SDL2/SDL_opengl.h	829;"	d
GL_TEXTURE_BINDING_BUFFER_ARB	/usr/include/SDL2/SDL_opengl.h	1764;"	d
GL_TEXTURE_BINDING_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4478;"	d
GL_TEXTURE_BINDING_CUBE_MAP	/usr/include/SDL2/SDL_opengl.h	302;"	d
GL_TEXTURE_BINDING_CUBE_MAP	/usr/include/SDL2/SDL_opengles2.h	683;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARB	/usr/include/SDL2/SDL_opengl.h	1191;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl.h	1000;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1930;"	d
GL_TEXTURE_BINDING_CUBE_MAP_EXT	/usr/include/SDL2/SDL_opengl.h	3159;"	d
GL_TEXTURE_BINDING_EXTERNAL_OES	/usr/include/SDL2/SDL_opengles2.h	1041;"	d
GL_TEXTURE_BINDING_RECTANGLE	/usr/include/SDL2/SDL_opengl.h	833;"	d
GL_TEXTURE_BINDING_RECTANGLE_ARB	/usr/include/SDL2/SDL_opengl.h	1575;"	d
GL_TEXTURE_BINDING_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	3489;"	d
GL_TEXTURE_BINDING_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4691;"	d
GL_TEXTURE_BLUE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2274;"	d
GL_TEXTURE_BLUE_TYPE	/usr/include/SDL2/SDL_opengl.h	1651;"	d
GL_TEXTURE_BLUE_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1595;"	d
GL_TEXTURE_BORDER_VALUES_NV	/usr/include/SDL2/SDL_opengl.h	3562;"	d
GL_TEXTURE_BUFFER	/usr/include/SDL2/SDL_opengl.h	827;"	d
GL_TEXTURE_BUFFER_ARB	/usr/include/SDL2/SDL_opengl.h	1762;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	/usr/include/SDL2/SDL_opengl.h	830;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1765;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4479;"	d
GL_TEXTURE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4476;"	d
GL_TEXTURE_BUFFER_FORMAT	/usr/include/SDL2/SDL_opengl.h	831;"	d
GL_TEXTURE_BUFFER_FORMAT_ARB	/usr/include/SDL2/SDL_opengl.h	1766;"	d
GL_TEXTURE_BUFFER_FORMAT_EXT	/usr/include/SDL2/SDL_opengl.h	4480;"	d
GL_TEXTURE_CLIPMAP_CENTER_SGIX	/usr/include/SDL2/SDL_opengl.h	2526;"	d
GL_TEXTURE_CLIPMAP_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2531;"	d
GL_TEXTURE_CLIPMAP_FRAME_SGIX	/usr/include/SDL2/SDL_opengl.h	2527;"	d
GL_TEXTURE_CLIPMAP_LOD_OFFSET_SGIX	/usr/include/SDL2/SDL_opengl.h	2530;"	d
GL_TEXTURE_CLIPMAP_OFFSET_SGIX	/usr/include/SDL2/SDL_opengl.h	2528;"	d
GL_TEXTURE_CLIPMAP_VIRTUAL_DEPTH_SGIX	/usr/include/SDL2/SDL_opengl.h	2529;"	d
GL_TEXTURE_COLOR_TABLE_SGI	/usr/include/SDL2/SDL_opengl.h	2406;"	d
GL_TEXTURE_COLOR_WRITEMASK_SGIS	/usr/include/SDL2/SDL_opengl.h	3425;"	d
GL_TEXTURE_COMPARE_FAIL_VALUE_ARB	/usr/include/SDL2/SDL_opengl.h	1337;"	d
GL_TEXTURE_COMPARE_FUNC	/usr/include/SDL2/SDL_opengl.h	377;"	d
GL_TEXTURE_COMPARE_FUNC_ARB	/usr/include/SDL2/SDL_opengl.h	1332;"	d
GL_TEXTURE_COMPARE_FUNC_EXT	/usr/include/SDL2/SDL_opengles2.h	1525;"	d
GL_TEXTURE_COMPARE_MODE	/usr/include/SDL2/SDL_opengl.h	376;"	d
GL_TEXTURE_COMPARE_MODE_ARB	/usr/include/SDL2/SDL_opengl.h	1331;"	d
GL_TEXTURE_COMPARE_MODE_EXT	/usr/include/SDL2/SDL_opengles2.h	1524;"	d
GL_TEXTURE_COMPARE_OPERATOR_SGIX	/usr/include/SDL2/SDL_opengl.h	2541;"	d
GL_TEXTURE_COMPARE_SGIX	/usr/include/SDL2/SDL_opengl.h	2540;"	d
GL_TEXTURE_COMPRESSED	/usr/include/SDL2/SDL_opengl.h	315;"	d
GL_TEXTURE_COMPRESSED_ARB	/usr/include/SDL2/SDL_opengl.h	1211;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	/usr/include/SDL2/SDL_opengl.h	314;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1210;"	d
GL_TEXTURE_COMPRESSION_HINT	/usr/include/SDL2/SDL_opengl.h	313;"	d
GL_TEXTURE_COMPRESSION_HINT_ARB	/usr/include/SDL2/SDL_opengl.h	1209;"	d
GL_TEXTURE_CONSTANT_DATA_SUNX	/usr/include/SDL2/SDL_opengl.h	3085;"	d
GL_TEXTURE_COORD_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4893;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	441;"	d
GL_TEXTURE_COORD_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1454;"	d
GL_TEXTURE_COORD_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2505;"	d
GL_TEXTURE_COORD_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	2486;"	d
GL_TEXTURE_COORD_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4903;"	d
GL_TEXTURE_COORD_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3325;"	d
GL_TEXTURE_COORD_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3333;"	d
GL_TEXTURE_COORD_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl.h	2962;"	d
GL_TEXTURE_COORD_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	2512;"	d
GL_TEXTURE_COORD_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2502;"	d
GL_TEXTURE_COORD_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	2504;"	d
GL_TEXTURE_COORD_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	2503;"	d
GL_TEXTURE_COORD_NV	/usr/include/SDL2/SDL_opengl.h	4542;"	d
GL_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengl.h	301;"	d
GL_TEXTURE_CUBE_MAP	/usr/include/SDL2/SDL_opengles2.h	682;"	d
GL_TEXTURE_CUBE_MAP_ARB	/usr/include/SDL2/SDL_opengl.h	1190;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl.h	999;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1929;"	d
GL_TEXTURE_CUBE_MAP_EXT	/usr/include/SDL2/SDL_opengl.h	3158;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL2/SDL_opengl.h	304;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	/usr/include/SDL2/SDL_opengles2.h	685;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB	/usr/include/SDL2/SDL_opengl.h	1193;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X_EXT	/usr/include/SDL2/SDL_opengl.h	3161;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL2/SDL_opengl.h	306;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	/usr/include/SDL2/SDL_opengles2.h	687;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB	/usr/include/SDL2/SDL_opengl.h	1195;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y_EXT	/usr/include/SDL2/SDL_opengl.h	3163;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL2/SDL_opengl.h	308;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	/usr/include/SDL2/SDL_opengles2.h	689;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB	/usr/include/SDL2/SDL_opengl.h	1197;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z_EXT	/usr/include/SDL2/SDL_opengl.h	3165;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL2/SDL_opengl.h	303;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	/usr/include/SDL2/SDL_opengles2.h	684;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB	/usr/include/SDL2/SDL_opengl.h	1192;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X_EXT	/usr/include/SDL2/SDL_opengl.h	3160;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL2/SDL_opengl.h	305;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	/usr/include/SDL2/SDL_opengles2.h	686;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB	/usr/include/SDL2/SDL_opengl.h	1194;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y_EXT	/usr/include/SDL2/SDL_opengl.h	3162;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL2/SDL_opengl.h	307;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	/usr/include/SDL2/SDL_opengles2.h	688;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB	/usr/include/SDL2/SDL_opengl.h	1196;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z_EXT	/usr/include/SDL2/SDL_opengl.h	3164;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	/usr/include/SDL2/SDL_opengl.h	1871;"	d
GL_TEXTURE_DEFORMATION_BIT_SGIX	/usr/include/SDL2/SDL_opengl.h	2659;"	d
GL_TEXTURE_DEFORMATION_SGIX	/usr/include/SDL2/SDL_opengl.h	2665;"	d
GL_TEXTURE_DEPTH	/usr/include/SDL2/SDL_opengl.h	144;"	d
GL_TEXTURE_DEPTH_EXT	/usr/include/SDL2/SDL_opengl.h	2291;"	d
GL_TEXTURE_DEPTH_QCOM	/usr/include/SDL2/SDL_opengles2.h	1777;"	d
GL_TEXTURE_DEPTH_SIZE	/usr/include/SDL2/SDL_opengl.h	375;"	d
GL_TEXTURE_DEPTH_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1326;"	d
GL_TEXTURE_DEPTH_TYPE	/usr/include/SDL2/SDL_opengl.h	1653;"	d
GL_TEXTURE_DEPTH_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1599;"	d
GL_TEXTURE_DS_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3565;"	d
GL_TEXTURE_DT_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3566;"	d
GL_TEXTURE_ENV_BIAS_SGIX	/usr/include/SDL2/SDL_opengl.h	2724;"	d
GL_TEXTURE_EXTERNAL_OES	/usr/include/SDL2/SDL_opengles2.h	1039;"	d
GL_TEXTURE_FETCH_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4972;"	d
GL_TEXTURE_FILTER4_SIZE_SGIS	/usr/include/SDL2/SDL_opengl.h	2298;"	d
GL_TEXTURE_FILTER_CONTROL	/usr/include/SDL2/SDL_opengl.h	401;"	d
GL_TEXTURE_FILTER_CONTROL_EXT	/usr/include/SDL2/SDL_opengl.h	3179;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	/usr/include/SDL2/SDL_opengl.h	1904;"	d
GL_TEXTURE_FLOAT_COMPONENTS_NV	/usr/include/SDL2/SDL_opengl.h	4137;"	d
GL_TEXTURE_FORMAT_QCOM	/usr/include/SDL2/SDL_opengles2.h	1779;"	d
GL_TEXTURE_FREE_MEMORY_ATI	/usr/include/SDL2/SDL_opengl.h	4709;"	d
GL_TEXTURE_GEQUAL_R_SGIX	/usr/include/SDL2/SDL_opengl.h	2543;"	d
GL_TEXTURE_GREEN_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2273;"	d
GL_TEXTURE_GREEN_TYPE	/usr/include/SDL2/SDL_opengl.h	1650;"	d
GL_TEXTURE_GREEN_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1594;"	d
GL_TEXTURE_HEIGHT_QCOM	/usr/include/SDL2/SDL_opengles2.h	1776;"	d
GL_TEXTURE_HI_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3563;"	d
GL_TEXTURE_IMAGE_VALID_QCOM	/usr/include/SDL2/SDL_opengles2.h	1781;"	d
GL_TEXTURE_IMMUTABLE_FORMAT_EXT	/usr/include/SDL2/SDL_opengles2.h	1565;"	d
GL_TEXTURE_INDEX_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2785;"	d
GL_TEXTURE_INTENSITY_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2277;"	d
GL_TEXTURE_INTENSITY_TYPE	/usr/include/SDL2/SDL_opengl.h	1714;"	d
GL_TEXTURE_INTENSITY_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1598;"	d
GL_TEXTURE_INTERNAL_FORMAT_QCOM	/usr/include/SDL2/SDL_opengles2.h	1778;"	d
GL_TEXTURE_LEQUAL_R_SGIX	/usr/include/SDL2/SDL_opengl.h	2542;"	d
GL_TEXTURE_LIGHTING_MODE_HP	/usr/include/SDL2/SDL_opengl.h	2884;"	d
GL_TEXTURE_LIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	2910;"	d
GL_TEXTURE_LOD_BIAS	/usr/include/SDL2/SDL_opengl.h	372;"	d
GL_TEXTURE_LOD_BIAS_EXT	/usr/include/SDL2/SDL_opengl.h	3180;"	d
GL_TEXTURE_LOD_BIAS_R_SGIX	/usr/include/SDL2/SDL_opengl.h	2807;"	d
GL_TEXTURE_LOD_BIAS_S_SGIX	/usr/include/SDL2/SDL_opengl.h	2805;"	d
GL_TEXTURE_LOD_BIAS_T_SGIX	/usr/include/SDL2/SDL_opengl.h	2806;"	d
GL_TEXTURE_LO_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3564;"	d
GL_TEXTURE_LUMINANCE_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2276;"	d
GL_TEXTURE_LUMINANCE_TYPE	/usr/include/SDL2/SDL_opengl.h	1713;"	d
GL_TEXTURE_LUMINANCE_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1597;"	d
GL_TEXTURE_MAG_FILTER	/usr/include/SDL2/SDL_opengles2.h	673;"	d
GL_TEXTURE_MAG_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3567;"	d
GL_TEXTURE_MATERIAL_FACE_EXT	/usr/include/SDL2/SDL_opengl.h	2911;"	d
GL_TEXTURE_MATERIAL_PARAMETER_EXT	/usr/include/SDL2/SDL_opengl.h	2912;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengl.h	3184;"	d
GL_TEXTURE_MAX_ANISOTROPY_EXT	/usr/include/SDL2/SDL_opengles2.h	1546;"	d
GL_TEXTURE_MAX_CLAMP_R_SGIX	/usr/include/SDL2/SDL_opengl.h	3667;"	d
GL_TEXTURE_MAX_CLAMP_S_SGIX	/usr/include/SDL2/SDL_opengl.h	3665;"	d
GL_TEXTURE_MAX_CLAMP_T_SGIX	/usr/include/SDL2/SDL_opengl.h	3666;"	d
GL_TEXTURE_MAX_LEVEL	/usr/include/SDL2/SDL_opengl.h	162;"	d
GL_TEXTURE_MAX_LEVEL_APPLE	/usr/include/SDL2/SDL_opengles2.h	1385;"	d
GL_TEXTURE_MAX_LEVEL_SGIS	/usr/include/SDL2/SDL_opengl.h	2455;"	d
GL_TEXTURE_MAX_LOD	/usr/include/SDL2/SDL_opengl.h	160;"	d
GL_TEXTURE_MAX_LOD_SGIS	/usr/include/SDL2/SDL_opengl.h	2453;"	d
GL_TEXTURE_MIN_FILTER	/usr/include/SDL2/SDL_opengles2.h	674;"	d
GL_TEXTURE_MIN_LOD	/usr/include/SDL2/SDL_opengl.h	159;"	d
GL_TEXTURE_MIN_LOD_SGIS	/usr/include/SDL2/SDL_opengl.h	2452;"	d
GL_TEXTURE_MULTI_BUFFER_HINT_SGIX	/usr/include/SDL2/SDL_opengl.h	2620;"	d
GL_TEXTURE_NORMAL_EXT	/usr/include/SDL2/SDL_opengl.h	3007;"	d
GL_TEXTURE_NUM_LEVELS_QCOM	/usr/include/SDL2/SDL_opengles2.h	1782;"	d
GL_TEXTURE_OBJECT_VALID_QCOM	/usr/include/SDL2/SDL_opengles2.h	1784;"	d
GL_TEXTURE_POST_SPECULAR_HP	/usr/include/SDL2/SDL_opengl.h	2885;"	d
GL_TEXTURE_PRE_SPECULAR_HP	/usr/include/SDL2/SDL_opengl.h	2886;"	d
GL_TEXTURE_PRIORITY_EXT	/usr/include/SDL2/SDL_opengl.h	2418;"	d
GL_TEXTURE_RANGE_LENGTH_APPLE	/usr/include/SDL2/SDL_opengl.h	4775;"	d
GL_TEXTURE_RANGE_POINTER_APPLE	/usr/include/SDL2/SDL_opengl.h	4776;"	d
GL_TEXTURE_RECTANGLE	/usr/include/SDL2/SDL_opengl.h	832;"	d
GL_TEXTURE_RECTANGLE_ARB	/usr/include/SDL2/SDL_opengl.h	1574;"	d
GL_TEXTURE_RECTANGLE_NV	/usr/include/SDL2/SDL_opengl.h	3488;"	d
GL_TEXTURE_RED_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2272;"	d
GL_TEXTURE_RED_TYPE	/usr/include/SDL2/SDL_opengl.h	1649;"	d
GL_TEXTURE_RED_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1593;"	d
GL_TEXTURE_RENDERBUFFER_DATA_STORE_BINDING_NV	/usr/include/SDL2/SDL_opengl.h	4692;"	d
GL_TEXTURE_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4693;"	d
GL_TEXTURE_RESIDENT_EXT	/usr/include/SDL2/SDL_opengl.h	2419;"	d
GL_TEXTURE_SAMPLES	/usr/include/SDL2/SDL_opengl.h	1903;"	d
GL_TEXTURE_SAMPLES_IMG	/usr/include/SDL2/SDL_opengles2.h	1653;"	d
GL_TEXTURE_SHADER_NV	/usr/include/SDL2/SDL_opengl.h	3503;"	d
GL_TEXTURE_SHARED_SIZE	/usr/include/SDL2/SDL_opengl.h	622;"	d
GL_TEXTURE_SHARED_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4500;"	d
GL_TEXTURE_STENCIL_SIZE	/usr/include/SDL2/SDL_opengl.h	1648;"	d
GL_TEXTURE_STENCIL_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4308;"	d
GL_TEXTURE_STORAGE_HINT_APPLE	/usr/include/SDL2/SDL_opengl.h	4777;"	d
GL_TEXTURE_SWIZZLE_A	/usr/include/SDL2/SDL_opengl.h	1989;"	d
GL_TEXTURE_SWIZZLE_A_EXT	/usr/include/SDL2/SDL_opengl.h	4683;"	d
GL_TEXTURE_SWIZZLE_B	/usr/include/SDL2/SDL_opengl.h	1988;"	d
GL_TEXTURE_SWIZZLE_B_EXT	/usr/include/SDL2/SDL_opengl.h	4682;"	d
GL_TEXTURE_SWIZZLE_G	/usr/include/SDL2/SDL_opengl.h	1987;"	d
GL_TEXTURE_SWIZZLE_G_EXT	/usr/include/SDL2/SDL_opengl.h	4681;"	d
GL_TEXTURE_SWIZZLE_R	/usr/include/SDL2/SDL_opengl.h	1986;"	d
GL_TEXTURE_SWIZZLE_RGBA	/usr/include/SDL2/SDL_opengl.h	1990;"	d
GL_TEXTURE_SWIZZLE_RGBA_EXT	/usr/include/SDL2/SDL_opengl.h	4684;"	d
GL_TEXTURE_SWIZZLE_R_EXT	/usr/include/SDL2/SDL_opengl.h	4680;"	d
GL_TEXTURE_TARGET_QCOM	/usr/include/SDL2/SDL_opengles2.h	1783;"	d
GL_TEXTURE_TOO_LARGE_EXT	/usr/include/SDL2/SDL_opengl.h	2281;"	d
GL_TEXTURE_TYPE_QCOM	/usr/include/SDL2/SDL_opengles2.h	1780;"	d
GL_TEXTURE_UNSIGNED_REMAP_MODE_NV	/usr/include/SDL2/SDL_opengl.h	4170;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4976;"	d
GL_TEXTURE_USAGE_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1310;"	d
GL_TEXTURE_WIDTH_QCOM	/usr/include/SDL2/SDL_opengles2.h	1775;"	d
GL_TEXTURE_WRAP_Q_SGIS	/usr/include/SDL2/SDL_opengl.h	2400;"	d
GL_TEXTURE_WRAP_R	/usr/include/SDL2/SDL_opengl.h	145;"	d
GL_TEXTURE_WRAP_R_EXT	/usr/include/SDL2/SDL_opengl.h	2292;"	d
GL_TEXTURE_WRAP_R_OES	/usr/include/SDL2/SDL_opengles2.h	1118;"	d
GL_TEXTURE_WRAP_S	/usr/include/SDL2/SDL_opengles2.h	675;"	d
GL_TEXTURE_WRAP_T	/usr/include/SDL2/SDL_opengles2.h	676;"	d
GL_TEXT_FRAGMENT_SHADER_ATI	/usr/include/SDL2/SDL_opengl.h	4033;"	d
GL_TIMEOUT_EXPIRED	/usr/include/SDL2/SDL_opengl.h	1885;"	d
GL_TIMEOUT_EXPIRED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1371;"	d
GL_TIMEOUT_IGNORED	/usr/include/SDL2/SDL_opengl.h	1889;"	d
GL_TIMEOUT_IGNORED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1375;"	d
GL_TIMESTAMP	/usr/include/SDL2/SDL_opengl.h	1995;"	d
GL_TIME_ELAPSED	/usr/include/SDL2/SDL_opengl.h	1994;"	d
GL_TIME_ELAPSED_EXT	/usr/include/SDL2/SDL_opengl.h	4358;"	d
GL_TRACK_MATRIX_NV	/usr/include/SDL2/SDL_opengl.h	3610;"	d
GL_TRACK_MATRIX_TRANSFORM_NV	/usr/include/SDL2/SDL_opengl.h	3611;"	d
GL_TRANSFORM_FEEDBACK	/usr/include/SDL2/SDL_opengl.h	2094;"	d
GL_TRANSFORM_FEEDBACK_ATTRIBS_NV	/usr/include/SDL2/SDL_opengl.h	4547;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4979;"	d
GL_TRANSFORM_FEEDBACK_BINDING	/usr/include/SDL2/SDL_opengl.h	2097;"	d
GL_TRANSFORM_FEEDBACK_BINDING_NV	/usr/include/SDL2/SDL_opengl.h	4704;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	/usr/include/SDL2/SDL_opengl.h	636;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	/usr/include/SDL2/SDL_opengl.h	2096;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE_NV	/usr/include/SDL2/SDL_opengl.h	4703;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	637;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4655;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING_NV	/usr/include/SDL2/SDL_opengl.h	4564;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4652;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	/usr/include/SDL2/SDL_opengl.h	624;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_EXT	/usr/include/SDL2/SDL_opengl.h	4665;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE_NV	/usr/include/SDL2/SDL_opengl.h	4548;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4563;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	/usr/include/SDL2/SDL_opengl.h	2095;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED_NV	/usr/include/SDL2/SDL_opengl.h	4702;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	628;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	4654;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	4554;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	/usr/include/SDL2/SDL_opengl.h	627;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_EXT	/usr/include/SDL2/SDL_opengl.h	4653;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START_NV	/usr/include/SDL2/SDL_opengl.h	4553;"	d
GL_TRANSFORM_FEEDBACK_NV	/usr/include/SDL2/SDL_opengl.h	4701;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	/usr/include/SDL2/SDL_opengl.h	630;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_EXT	/usr/include/SDL2/SDL_opengl.h	4659;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN_NV	/usr/include/SDL2/SDL_opengl.h	4557;"	d
GL_TRANSFORM_FEEDBACK_RECORD_NV	/usr/include/SDL2/SDL_opengl.h	4555;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	/usr/include/SDL2/SDL_opengl.h	626;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_EXT	/usr/include/SDL2/SDL_opengl.h	4664;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS_NV	/usr/include/SDL2/SDL_opengl.h	4552;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	/usr/include/SDL2/SDL_opengl.h	623;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH_EXT	/usr/include/SDL2/SDL_opengl.h	4666;"	d
GL_TRANSFORM_HINT_APPLE	/usr/include/SDL2/SDL_opengl.h	3075;"	d
GL_TRANSLATED_SHADER_SOURCE_LENGTH_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1316;"	d
GL_TRANSPOSE_COLOR_MATRIX	/usr/include/SDL2/SDL_opengl.h	327;"	d
GL_TRANSPOSE_COLOR_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1169;"	d
GL_TRANSPOSE_CURRENT_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1390;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX	/usr/include/SDL2/SDL_opengl.h	324;"	d
GL_TRANSPOSE_MODELVIEW_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1166;"	d
GL_TRANSPOSE_NV	/usr/include/SDL2/SDL_opengl.h	3590;"	d
GL_TRANSPOSE_PROGRAM_MATRIX_EXT	/usr/include/SDL2/SDL_opengl.h	4671;"	d
GL_TRANSPOSE_PROJECTION_MATRIX	/usr/include/SDL2/SDL_opengl.h	325;"	d
GL_TRANSPOSE_PROJECTION_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1167;"	d
GL_TRANSPOSE_TEXTURE_MATRIX	/usr/include/SDL2/SDL_opengl.h	326;"	d
GL_TRANSPOSE_TEXTURE_MATRIX_ARB	/usr/include/SDL2/SDL_opengl.h	1168;"	d
GL_TRIANGLES	/usr/include/SDL2/SDL_opengles2.h	412;"	d
GL_TRIANGLES_ADJACENCY	/usr/include/SDL2/SDL_opengl.h	893;"	d
GL_TRIANGLES_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl.h	1724;"	d
GL_TRIANGLES_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl.h	4383;"	d
GL_TRIANGLE_FAN	/usr/include/SDL2/SDL_opengles2.h	414;"	d
GL_TRIANGLE_LIST_SUN	/usr/include/SDL2/SDL_opengl.h	3097;"	d
GL_TRIANGLE_MESH_SUN	/usr/include/SDL2/SDL_opengl.h	3973;"	d
GL_TRIANGLE_STRIP	/usr/include/SDL2/SDL_opengles2.h	413;"	d
GL_TRIANGLE_STRIP_ADJACENCY	/usr/include/SDL2/SDL_opengl.h	894;"	d
GL_TRIANGLE_STRIP_ADJACENCY_ARB	/usr/include/SDL2/SDL_opengl.h	1725;"	d
GL_TRIANGLE_STRIP_ADJACENCY_EXT	/usr/include/SDL2/SDL_opengl.h	4384;"	d
GL_TRUE	/usr/include/SDL2/SDL_opengles2.h	405;"	d
GL_TYPE_RGBA_FLOAT_ATI	/usr/include/SDL2/SDL_opengl.h	4099;"	d
GL_UNDEFINED_APPLE	/usr/include/SDL2/SDL_opengl.h	4822;"	d
GL_UNDEFINED_VERTEX	/usr/include/SDL2/SDL_opengl.h	2170;"	d
GL_UNIFORM_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	1827;"	d
GL_UNIFORM_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4971;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	/usr/include/SDL2/SDL_opengl.h	1833;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	/usr/include/SDL2/SDL_opengl.h	1834;"	d
GL_UNIFORM_BLOCK_BINDING	/usr/include/SDL2/SDL_opengl.h	1830;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	/usr/include/SDL2/SDL_opengl.h	1831;"	d
GL_UNIFORM_BLOCK_INDEX	/usr/include/SDL2/SDL_opengl.h	1825;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	/usr/include/SDL2/SDL_opengl.h	1832;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	/usr/include/SDL2/SDL_opengl.h	1837;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	/usr/include/SDL2/SDL_opengl.h	1836;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	/usr/include/SDL2/SDL_opengl.h	2081;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	/usr/include/SDL2/SDL_opengl.h	2082;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	/usr/include/SDL2/SDL_opengl.h	1835;"	d
GL_UNIFORM_BUFFER	/usr/include/SDL2/SDL_opengl.h	1806;"	d
GL_UNIFORM_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	1807;"	d
GL_UNIFORM_BUFFER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	4579;"	d
GL_UNIFORM_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4578;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	/usr/include/SDL2/SDL_opengl.h	1819;"	d
GL_UNIFORM_BUFFER_SIZE	/usr/include/SDL2/SDL_opengl.h	1809;"	d
GL_UNIFORM_BUFFER_START	/usr/include/SDL2/SDL_opengl.h	1808;"	d
GL_UNIFORM_IS_ROW_MAJOR	/usr/include/SDL2/SDL_opengl.h	1829;"	d
GL_UNIFORM_MATRIX_STRIDE	/usr/include/SDL2/SDL_opengl.h	1828;"	d
GL_UNIFORM_NAME_LENGTH	/usr/include/SDL2/SDL_opengl.h	1824;"	d
GL_UNIFORM_OFFSET	/usr/include/SDL2/SDL_opengl.h	1826;"	d
GL_UNIFORM_SIZE	/usr/include/SDL2/SDL_opengl.h	1823;"	d
GL_UNIFORM_TYPE	/usr/include/SDL2/SDL_opengl.h	1822;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	/usr/include/SDL2/SDL_opengl.h	2212;"	d
GL_UNKNOWN_CONTEXT_RESET_EXT	/usr/include/SDL2/SDL_opengles2.h	1497;"	d
GL_UNPACK_ALIGNMENT	/usr/include/SDL2/SDL_opengles2.h	551;"	d
GL_UNPACK_CLIENT_STORAGE_APPLE	/usr/include/SDL2/SDL_opengl.h	4037;"	d
GL_UNPACK_CMYK_HINT_EXT	/usr/include/SDL2/SDL_opengl.h	2414;"	d
GL_UNPACK_CONSTANT_DATA_SUNX	/usr/include/SDL2/SDL_opengl.h	3084;"	d
GL_UNPACK_IMAGE_DEPTH_SGIS	/usr/include/SDL2/SDL_opengl.h	2396;"	d
GL_UNPACK_IMAGE_HEIGHT	/usr/include/SDL2/SDL_opengl.h	141;"	d
GL_UNPACK_IMAGE_HEIGHT_EXT	/usr/include/SDL2/SDL_opengl.h	2288;"	d
GL_UNPACK_RESAMPLE_OML	/usr/include/SDL2/SDL_opengl.h	3686;"	d
GL_UNPACK_RESAMPLE_SGIX	/usr/include/SDL2/SDL_opengl.h	3407;"	d
GL_UNPACK_ROW_BYTES_APPLE	/usr/include/SDL2/SDL_opengl.h	4828;"	d
GL_UNPACK_ROW_LENGTH	/usr/include/SDL2/SDL_opengles2.h	1597;"	d
GL_UNPACK_SKIP_IMAGES	/usr/include/SDL2/SDL_opengl.h	140;"	d
GL_UNPACK_SKIP_IMAGES_EXT	/usr/include/SDL2/SDL_opengl.h	2287;"	d
GL_UNPACK_SKIP_PIXELS	/usr/include/SDL2/SDL_opengles2.h	1599;"	d
GL_UNPACK_SKIP_ROWS	/usr/include/SDL2/SDL_opengles2.h	1598;"	d
GL_UNPACK_SKIP_VOLUMES_SGIS	/usr/include/SDL2/SDL_opengl.h	2395;"	d
GL_UNPACK_SUBSAMPLE_RATE_SGIX	/usr/include/SDL2/SDL_opengl.h	3341;"	d
GL_UNSIGNALED	/usr/include/SDL2/SDL_opengl.h	1882;"	d
GL_UNSIGNALED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1368;"	d
GL_UNSIGNED_BYTE	/usr/include/SDL2/SDL_opengles2.h	590;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	/usr/include/SDL2/SDL_opengl.h	147;"	d
GL_UNSIGNED_BYTE_3_3_2	/usr/include/SDL2/SDL_opengl.h	132;"	d
GL_UNSIGNED_BYTE_3_3_2_EXT	/usr/include/SDL2/SDL_opengl.h	2444;"	d
GL_UNSIGNED_IDENTITY_NV	/usr/include/SDL2/SDL_opengl.h	3235;"	d
GL_UNSIGNED_INT	/usr/include/SDL2/SDL_opengles2.h	1047;"	d
GL_UNSIGNED_INT	/usr/include/SDL2/SDL_opengles2.h	594;"	d
GL_UNSIGNED_INT16_NV	/usr/include/SDL2/SDL_opengl.h	5027;"	d
GL_UNSIGNED_INT16_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5028;"	d
GL_UNSIGNED_INT16_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5029;"	d
GL_UNSIGNED_INT16_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5030;"	d
GL_UNSIGNED_INT64_AMD	/usr/include/SDL2/SDL_opengl.h	4716;"	d
GL_UNSIGNED_INT64_AMD	/usr/include/SDL2/SDL_opengles2.h	1257;"	d
GL_UNSIGNED_INT64_NV	/usr/include/SDL2/SDL_opengl.h	5011;"	d
GL_UNSIGNED_INT64_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5031;"	d
GL_UNSIGNED_INT64_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5032;"	d
GL_UNSIGNED_INT64_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5033;"	d
GL_UNSIGNED_INT8_NV	/usr/include/SDL2/SDL_opengl.h	5023;"	d
GL_UNSIGNED_INT8_VEC2_NV	/usr/include/SDL2/SDL_opengl.h	5024;"	d
GL_UNSIGNED_INT8_VEC3_NV	/usr/include/SDL2/SDL_opengl.h	5025;"	d
GL_UNSIGNED_INT8_VEC4_NV	/usr/include/SDL2/SDL_opengl.h	5026;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	/usr/include/SDL2/SDL_opengl.h	619;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV_EXT	/usr/include/SDL2/SDL_opengl.h	4459;"	d
GL_UNSIGNED_INT_10_10_10_2	/usr/include/SDL2/SDL_opengl.h	136;"	d
GL_UNSIGNED_INT_10_10_10_2_EXT	/usr/include/SDL2/SDL_opengl.h	2448;"	d
GL_UNSIGNED_INT_10_10_10_2_OES	/usr/include/SDL2/SDL_opengles2.h	1153;"	d
GL_UNSIGNED_INT_24_8	/usr/include/SDL2/SDL_opengl.h	1646;"	d
GL_UNSIGNED_INT_24_8_EXT	/usr/include/SDL2/SDL_opengl.h	4306;"	d
GL_UNSIGNED_INT_24_8_NV	/usr/include/SDL2/SDL_opengl.h	3477;"	d
GL_UNSIGNED_INT_24_8_OES	/usr/include/SDL2/SDL_opengles2.h	1068;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	/usr/include/SDL2/SDL_opengl.h	153;"	d
GL_UNSIGNED_INT_2_10_10_10_REV_EXT	/usr/include/SDL2/SDL_opengles2.h	1592;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	/usr/include/SDL2/SDL_opengl.h	621;"	d
GL_UNSIGNED_INT_5_9_9_9_REV_EXT	/usr/include/SDL2/SDL_opengl.h	4499;"	d
GL_UNSIGNED_INT_8_8_8_8	/usr/include/SDL2/SDL_opengl.h	135;"	d
GL_UNSIGNED_INT_8_8_8_8_EXT	/usr/include/SDL2/SDL_opengl.h	2447;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	/usr/include/SDL2/SDL_opengl.h	152;"	d
GL_UNSIGNED_INT_8_8_S8_S8_REV_NV	/usr/include/SDL2/SDL_opengl.h	3500;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4962;"	d
GL_UNSIGNED_INT_IMAGE_1D_EXT	/usr/include/SDL2/SDL_opengl.h	4956;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4963;"	d
GL_UNSIGNED_INT_IMAGE_2D_EXT	/usr/include/SDL2/SDL_opengl.h	4957;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4966;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_EXT	/usr/include/SDL2/SDL_opengl.h	4965;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl.h	4959;"	d
GL_UNSIGNED_INT_IMAGE_3D_EXT	/usr/include/SDL2/SDL_opengl.h	4958;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4961;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_EXT	/usr/include/SDL2/SDL_opengl.h	4960;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4964;"	d
GL_UNSIGNED_INT_S8_S8_8_8_NV	/usr/include/SDL2/SDL_opengl.h	3499;"	d
GL_UNSIGNED_INT_SAMPLER_1D	/usr/include/SDL2/SDL_opengl.h	671;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	/usr/include/SDL2/SDL_opengl.h	675;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4449;"	d
GL_UNSIGNED_INT_SAMPLER_1D_EXT	/usr/include/SDL2/SDL_opengl.h	4444;"	d
GL_UNSIGNED_INT_SAMPLER_2D	/usr/include/SDL2/SDL_opengl.h	672;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	/usr/include/SDL2/SDL_opengl.h	676;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	4450;"	d
GL_UNSIGNED_INT_SAMPLER_2D_EXT	/usr/include/SDL2/SDL_opengl.h	4445;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	/usr/include/SDL2/SDL_opengl.h	1907;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	/usr/include/SDL2/SDL_opengl.h	1910;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	/usr/include/SDL2/SDL_opengl.h	825;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT_EXT	/usr/include/SDL2/SDL_opengl.h	4448;"	d
GL_UNSIGNED_INT_SAMPLER_3D	/usr/include/SDL2/SDL_opengl.h	673;"	d
GL_UNSIGNED_INT_SAMPLER_3D_EXT	/usr/include/SDL2/SDL_opengl.h	4446;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	/usr/include/SDL2/SDL_opengl.h	826;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_AMD	/usr/include/SDL2/SDL_opengl.h	4729;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER_EXT	/usr/include/SDL2/SDL_opengl.h	4451;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	/usr/include/SDL2/SDL_opengl.h	674;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_EXT	/usr/include/SDL2/SDL_opengl.h	4447;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	/usr/include/SDL2/SDL_opengl.h	1005;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1935;"	d
GL_UNSIGNED_INT_SAMPLER_RENDERBUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4696;"	d
GL_UNSIGNED_INT_VEC2	/usr/include/SDL2/SDL_opengl.h	662;"	d
GL_UNSIGNED_INT_VEC2_EXT	/usr/include/SDL2/SDL_opengl.h	4433;"	d
GL_UNSIGNED_INT_VEC3	/usr/include/SDL2/SDL_opengl.h	663;"	d
GL_UNSIGNED_INT_VEC3_EXT	/usr/include/SDL2/SDL_opengl.h	4434;"	d
GL_UNSIGNED_INT_VEC4	/usr/include/SDL2/SDL_opengl.h	664;"	d
GL_UNSIGNED_INT_VEC4_EXT	/usr/include/SDL2/SDL_opengl.h	4435;"	d
GL_UNSIGNED_INVERT_NV	/usr/include/SDL2/SDL_opengl.h	3236;"	d
GL_UNSIGNED_NORMALIZED	/usr/include/SDL2/SDL_opengl.h	1654;"	d
GL_UNSIGNED_NORMALIZED_ARB	/usr/include/SDL2/SDL_opengl.h	1600;"	d
GL_UNSIGNED_NORMALIZED_EXT	/usr/include/SDL2/SDL_opengles2.h	1422;"	d
GL_UNSIGNED_SHORT	/usr/include/SDL2/SDL_opengles2.h	592;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	/usr/include/SDL2/SDL_opengl.h	151;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV_EXT	/usr/include/SDL2/SDL_opengles2.h	1489;"	d
GL_UNSIGNED_SHORT_4_4_4_4	/usr/include/SDL2/SDL_opengl.h	133;"	d
GL_UNSIGNED_SHORT_4_4_4_4	/usr/include/SDL2/SDL_opengles2.h	608;"	d
GL_UNSIGNED_SHORT_4_4_4_4_EXT	/usr/include/SDL2/SDL_opengl.h	2445;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	/usr/include/SDL2/SDL_opengl.h	150;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_EXT	/usr/include/SDL2/SDL_opengles2.h	1488;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV_IMG	/usr/include/SDL2/SDL_opengles2.h	1632;"	d
GL_UNSIGNED_SHORT_5_5_5_1	/usr/include/SDL2/SDL_opengl.h	134;"	d
GL_UNSIGNED_SHORT_5_5_5_1	/usr/include/SDL2/SDL_opengles2.h	609;"	d
GL_UNSIGNED_SHORT_5_5_5_1_EXT	/usr/include/SDL2/SDL_opengl.h	2446;"	d
GL_UNSIGNED_SHORT_5_6_5	/usr/include/SDL2/SDL_opengl.h	148;"	d
GL_UNSIGNED_SHORT_5_6_5	/usr/include/SDL2/SDL_opengles2.h	610;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	/usr/include/SDL2/SDL_opengl.h	149;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	/usr/include/SDL2/SDL_opengl.h	4067;"	d
GL_UNSIGNED_SHORT_8_8_APPLE	/usr/include/SDL2/SDL_opengles2.h	1340;"	d
GL_UNSIGNED_SHORT_8_8_MESA	/usr/include/SDL2/SDL_opengl.h	4215;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	/usr/include/SDL2/SDL_opengl.h	4068;"	d
GL_UNSIGNED_SHORT_8_8_REV_APPLE	/usr/include/SDL2/SDL_opengles2.h	1341;"	d
GL_UNSIGNED_SHORT_8_8_REV_MESA	/usr/include/SDL2/SDL_opengl.h	4216;"	d
GL_UPPER_LEFT	/usr/include/SDL2/SDL_opengl.h	539;"	d
GL_VALIDATE_STATUS	/usr/include/SDL2/SDL_opengl.h	526;"	d
GL_VALIDATE_STATUS	/usr/include/SDL2/SDL_opengles2.h	625;"	d
GL_VARIABLE_A_NV	/usr/include/SDL2/SDL_opengl.h	3219;"	d
GL_VARIABLE_B_NV	/usr/include/SDL2/SDL_opengl.h	3220;"	d
GL_VARIABLE_C_NV	/usr/include/SDL2/SDL_opengl.h	3221;"	d
GL_VARIABLE_D_NV	/usr/include/SDL2/SDL_opengl.h	3222;"	d
GL_VARIABLE_E_NV	/usr/include/SDL2/SDL_opengl.h	3223;"	d
GL_VARIABLE_F_NV	/usr/include/SDL2/SDL_opengl.h	3224;"	d
GL_VARIABLE_G_NV	/usr/include/SDL2/SDL_opengl.h	3225;"	d
GL_VARIANT_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	3944;"	d
GL_VARIANT_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	3945;"	d
GL_VARIANT_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	3942;"	d
GL_VARIANT_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3943;"	d
GL_VARIANT_DATATYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3941;"	d
GL_VARIANT_EXT	/usr/include/SDL2/SDL_opengl.h	3905;"	d
GL_VARIANT_VALUE_EXT	/usr/include/SDL2/SDL_opengl.h	3940;"	d
GL_VBO_FREE_MEMORY_ATI	/usr/include/SDL2/SDL_opengl.h	4708;"	d
GL_VECTOR_EXT	/usr/include/SDL2/SDL_opengl.h	3903;"	d
GL_VENDOR	/usr/include/SDL2/SDL_opengles2.h	655;"	d
GL_VERSION	/usr/include/SDL2/SDL_opengles2.h	657;"	d
GL_VERSION_1_2	/usr/include/SDL2/SDL_opengl.h	5217;"	d
GL_VERSION_1_2_DEPRECATED	/usr/include/SDL2/SDL_opengl.h	5235;"	d
GL_VERSION_1_3	/usr/include/SDL2/SDL_opengl.h	5305;"	d
GL_VERSION_1_3_DEPRECATED	/usr/include/SDL2/SDL_opengl.h	5329;"	d
GL_VERSION_1_4	/usr/include/SDL2/SDL_opengl.h	5409;"	d
GL_VERSION_1_4_DEPRECATED	/usr/include/SDL2/SDL_opengl.h	5429;"	d
GL_VERSION_1_5	/usr/include/SDL2/SDL_opengl.h	5511;"	d
GL_VERSION_2_0	/usr/include/SDL2/SDL_opengl.h	5555;"	d
GL_VERSION_2_1	/usr/include/SDL2/SDL_opengl.h	5747;"	d
GL_VERSION_3_0	/usr/include/SDL2/SDL_opengl.h	5765;"	d
GL_VERSION_3_1	/usr/include/SDL2/SDL_opengl.h	5891;"	d
GL_VERSION_3_2	/usr/include/SDL2/SDL_opengl.h	5908;"	d
GL_VERSION_3_3	/usr/include/SDL2/SDL_opengl.h	5925;"	d
GL_VERSION_4_0	/usr/include/SDL2/SDL_opengl.h	5943;"	d
GL_VERSION_4_1	/usr/include/SDL2/SDL_opengl.h	5971;"	d
GL_VERTEX23_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2751;"	d
GL_VERTEX4_BIT_PGI	/usr/include/SDL2/SDL_opengl.h	2752;"	d
GL_VERTEX_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4889;"	d
GL_VERTEX_ARRAY_BINDING	/usr/include/SDL2/SDL_opengl.h	1802;"	d
GL_VERTEX_ARRAY_BINDING_APPLE	/usr/include/SDL2/SDL_opengl.h	4052;"	d
GL_VERTEX_ARRAY_BINDING_OES	/usr/include/SDL2/SDL_opengles2.h	1145;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	437;"	d
GL_VERTEX_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1450;"	d
GL_VERTEX_ARRAY_COUNT_EXT	/usr/include/SDL2/SDL_opengl.h	2491;"	d
GL_VERTEX_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	2482;"	d
GL_VERTEX_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4899;"	d
GL_VERTEX_ARRAY_LIST_IBM	/usr/include/SDL2/SDL_opengl.h	3321;"	d
GL_VERTEX_ARRAY_LIST_STRIDE_IBM	/usr/include/SDL2/SDL_opengl.h	3329;"	d
GL_VERTEX_ARRAY_OBJECT_AMD	/usr/include/SDL2/SDL_opengl.h	5069;"	d
GL_VERTEX_ARRAY_OBJECT_EXT	/usr/include/SDL2/SDL_opengles2.h	1432;"	d
GL_VERTEX_ARRAY_PARALLEL_POINTERS_INTEL	/usr/include/SDL2/SDL_opengl.h	2959;"	d
GL_VERTEX_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	2508;"	d
GL_VERTEX_ARRAY_RANGE_APPLE	/usr/include/SDL2/SDL_opengl.h	4056;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_APPLE	/usr/include/SDL2/SDL_opengl.h	4057;"	d
GL_VERTEX_ARRAY_RANGE_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	3211;"	d
GL_VERTEX_ARRAY_RANGE_NV	/usr/include/SDL2/SDL_opengl.h	3210;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_APPLE	/usr/include/SDL2/SDL_opengl.h	4059;"	d
GL_VERTEX_ARRAY_RANGE_POINTER_NV	/usr/include/SDL2/SDL_opengl.h	3214;"	d
GL_VERTEX_ARRAY_RANGE_VALID_NV	/usr/include/SDL2/SDL_opengl.h	3212;"	d
GL_VERTEX_ARRAY_RANGE_WITHOUT_FLUSH_NV	/usr/include/SDL2/SDL_opengl.h	3575;"	d
GL_VERTEX_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	2488;"	d
GL_VERTEX_ARRAY_STORAGE_HINT_APPLE	/usr/include/SDL2/SDL_opengl.h	4058;"	d
GL_VERTEX_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	2490;"	d
GL_VERTEX_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	2489;"	d
GL_VERTEX_ATTRIB_ARRAY0_NV	/usr/include/SDL2/SDL_opengl.h	3614;"	d
GL_VERTEX_ATTRIB_ARRAY10_NV	/usr/include/SDL2/SDL_opengl.h	3624;"	d
GL_VERTEX_ATTRIB_ARRAY11_NV	/usr/include/SDL2/SDL_opengl.h	3625;"	d
GL_VERTEX_ATTRIB_ARRAY12_NV	/usr/include/SDL2/SDL_opengl.h	3626;"	d
GL_VERTEX_ATTRIB_ARRAY13_NV	/usr/include/SDL2/SDL_opengl.h	3627;"	d
GL_VERTEX_ATTRIB_ARRAY14_NV	/usr/include/SDL2/SDL_opengl.h	3628;"	d
GL_VERTEX_ATTRIB_ARRAY15_NV	/usr/include/SDL2/SDL_opengl.h	3629;"	d
GL_VERTEX_ATTRIB_ARRAY1_NV	/usr/include/SDL2/SDL_opengl.h	3615;"	d
GL_VERTEX_ATTRIB_ARRAY2_NV	/usr/include/SDL2/SDL_opengl.h	3616;"	d
GL_VERTEX_ATTRIB_ARRAY3_NV	/usr/include/SDL2/SDL_opengl.h	3617;"	d
GL_VERTEX_ATTRIB_ARRAY4_NV	/usr/include/SDL2/SDL_opengl.h	3618;"	d
GL_VERTEX_ATTRIB_ARRAY5_NV	/usr/include/SDL2/SDL_opengl.h	3619;"	d
GL_VERTEX_ATTRIB_ARRAY6_NV	/usr/include/SDL2/SDL_opengl.h	3620;"	d
GL_VERTEX_ATTRIB_ARRAY7_NV	/usr/include/SDL2/SDL_opengl.h	3621;"	d
GL_VERTEX_ATTRIB_ARRAY8_NV	/usr/include/SDL2/SDL_opengl.h	3622;"	d
GL_VERTEX_ATTRIB_ARRAY9_NV	/usr/include/SDL2/SDL_opengl.h	3623;"	d
GL_VERTEX_ATTRIB_ARRAY_ADDRESS_NV	/usr/include/SDL2/SDL_opengl.h	4888;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT_EXT	/usr/include/SDL2/SDL_opengl.h	4969;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	417;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengles2.h	756;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1459;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	/usr/include/SDL2/SDL_opengl.h	967;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE	/usr/include/SDL2/SDL_opengles2.h	1290;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR_ARB	/usr/include/SDL2/SDL_opengl.h	1749;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	/usr/include/SDL2/SDL_opengl.h	464;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	/usr/include/SDL2/SDL_opengles2.h	750;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED_ARB	/usr/include/SDL2/SDL_opengl.h	1346;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	/usr/include/SDL2/SDL_opengl.h	605;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER_NV	/usr/include/SDL2/SDL_opengl.h	4423;"	d
GL_VERTEX_ATTRIB_ARRAY_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4898;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/include/SDL2/SDL_opengl.h	494;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	/usr/include/SDL2/SDL_opengles2.h	754;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED_ARB	/usr/include/SDL2/SDL_opengl.h	1363;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	/usr/include/SDL2/SDL_opengl.h	470;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	/usr/include/SDL2/SDL_opengles2.h	755;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER_ARB	/usr/include/SDL2/SDL_opengl.h	1359;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	/usr/include/SDL2/SDL_opengl.h	465;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	/usr/include/SDL2/SDL_opengles2.h	751;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1347;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengl.h	466;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	/usr/include/SDL2/SDL_opengles2.h	752;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE_ARB	/usr/include/SDL2/SDL_opengl.h	1348;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	/usr/include/SDL2/SDL_opengl.h	467;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	/usr/include/SDL2/SDL_opengles2.h	753;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1349;"	d
GL_VERTEX_ATTRIB_ARRAY_UNIFIED_NV	/usr/include/SDL2/SDL_opengl.h	4886;"	d
GL_VERTEX_ATTRIB_MAP1_APPLE	/usr/include/SDL2/SDL_opengl.h	4801;"	d
GL_VERTEX_ATTRIB_MAP1_COEFF_APPLE	/usr/include/SDL2/SDL_opengl.h	4804;"	d
GL_VERTEX_ATTRIB_MAP1_DOMAIN_APPLE	/usr/include/SDL2/SDL_opengl.h	4806;"	d
GL_VERTEX_ATTRIB_MAP1_ORDER_APPLE	/usr/include/SDL2/SDL_opengl.h	4805;"	d
GL_VERTEX_ATTRIB_MAP1_SIZE_APPLE	/usr/include/SDL2/SDL_opengl.h	4803;"	d
GL_VERTEX_ATTRIB_MAP2_APPLE	/usr/include/SDL2/SDL_opengl.h	4802;"	d
GL_VERTEX_ATTRIB_MAP2_COEFF_APPLE	/usr/include/SDL2/SDL_opengl.h	4808;"	d
GL_VERTEX_ATTRIB_MAP2_DOMAIN_APPLE	/usr/include/SDL2/SDL_opengl.h	4810;"	d
GL_VERTEX_ATTRIB_MAP2_ORDER_APPLE	/usr/include/SDL2/SDL_opengl.h	4809;"	d
GL_VERTEX_ATTRIB_MAP2_SIZE_APPLE	/usr/include/SDL2/SDL_opengl.h	4807;"	d
GL_VERTEX_BLEND_ARB	/usr/include/SDL2/SDL_opengl.h	1231;"	d
GL_VERTEX_CONSISTENT_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2732;"	d
GL_VERTEX_DATA_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2731;"	d
GL_VERTEX_ID_NV	/usr/include/SDL2/SDL_opengl.h	4544;"	d
GL_VERTEX_PRECLIP_HINT_SGIX	/usr/include/SDL2/SDL_opengl.h	3398;"	d
GL_VERTEX_PRECLIP_SGIX	/usr/include/SDL2/SDL_opengl.h	3397;"	d
GL_VERTEX_PROGRAM_ARB	/usr/include/SDL2/SDL_opengl.h	1345;"	d
GL_VERTEX_PROGRAM_BINDING_NV	/usr/include/SDL2/SDL_opengl.h	3612;"	d
GL_VERTEX_PROGRAM_NV	/usr/include/SDL2/SDL_opengl.h	3579;"	d
GL_VERTEX_PROGRAM_PARAMETER_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4531;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	/usr/include/SDL2/SDL_opengl.h	469;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1357;"	d
GL_VERTEX_PROGRAM_POINT_SIZE_NV	/usr/include/SDL2/SDL_opengl.h	3604;"	d
GL_VERTEX_PROGRAM_TWO_SIDE	/usr/include/SDL2/SDL_opengl.h	546;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_ARB	/usr/include/SDL2/SDL_opengl.h	1358;"	d
GL_VERTEX_PROGRAM_TWO_SIDE_NV	/usr/include/SDL2/SDL_opengl.h	3605;"	d
GL_VERTEX_SHADER	/usr/include/SDL2/SDL_opengl.h	497;"	d
GL_VERTEX_SHADER	/usr/include/SDL2/SDL_opengles2.h	614;"	d
GL_VERTEX_SHADER_ARB	/usr/include/SDL2/SDL_opengl.h	1523;"	d
GL_VERTEX_SHADER_BINDING_EXT	/usr/include/SDL2/SDL_opengl.h	3841;"	d
GL_VERTEX_SHADER_BIT	/usr/include/SDL2/SDL_opengl.h	2130;"	d
GL_VERTEX_SHADER_BIT_EXT	/usr/include/SDL2/SDL_opengles2.h	1506;"	d
GL_VERTEX_SHADER_EXT	/usr/include/SDL2/SDL_opengl.h	3840;"	d
GL_VERTEX_SHADER_INSTRUCTIONS_EXT	/usr/include/SDL2/SDL_opengl.h	3919;"	d
GL_VERTEX_SHADER_INVARIANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3921;"	d
GL_VERTEX_SHADER_LOCALS_EXT	/usr/include/SDL2/SDL_opengl.h	3923;"	d
GL_VERTEX_SHADER_LOCAL_CONSTANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3922;"	d
GL_VERTEX_SHADER_OPTIMIZED_EXT	/usr/include/SDL2/SDL_opengl.h	3924;"	d
GL_VERTEX_SHADER_VARIANTS_EXT	/usr/include/SDL2/SDL_opengl.h	3920;"	d
GL_VERTEX_SOURCE_ATI	/usr/include/SDL2/SDL_opengl.h	3962;"	d
GL_VERTEX_STATE_PROGRAM_NV	/usr/include/SDL2/SDL_opengl.h	3580;"	d
GL_VERTEX_STREAM0_ATI	/usr/include/SDL2/SDL_opengl.h	3954;"	d
GL_VERTEX_STREAM1_ATI	/usr/include/SDL2/SDL_opengl.h	3955;"	d
GL_VERTEX_STREAM2_ATI	/usr/include/SDL2/SDL_opengl.h	3956;"	d
GL_VERTEX_STREAM3_ATI	/usr/include/SDL2/SDL_opengl.h	3957;"	d
GL_VERTEX_STREAM4_ATI	/usr/include/SDL2/SDL_opengl.h	3958;"	d
GL_VERTEX_STREAM5_ATI	/usr/include/SDL2/SDL_opengl.h	3959;"	d
GL_VERTEX_STREAM6_ATI	/usr/include/SDL2/SDL_opengl.h	3960;"	d
GL_VERTEX_STREAM7_ATI	/usr/include/SDL2/SDL_opengl.h	3961;"	d
GL_VERTEX_WEIGHTING_EXT	/usr/include/SDL2/SDL_opengl.h	3193;"	d
GL_VERTEX_WEIGHT_ARRAY_EXT	/usr/include/SDL2/SDL_opengl.h	3197;"	d
GL_VERTEX_WEIGHT_ARRAY_POINTER_EXT	/usr/include/SDL2/SDL_opengl.h	3201;"	d
GL_VERTEX_WEIGHT_ARRAY_SIZE_EXT	/usr/include/SDL2/SDL_opengl.h	3198;"	d
GL_VERTEX_WEIGHT_ARRAY_STRIDE_EXT	/usr/include/SDL2/SDL_opengl.h	3200;"	d
GL_VERTEX_WEIGHT_ARRAY_TYPE_EXT	/usr/include/SDL2/SDL_opengl.h	3199;"	d
GL_VIBRANCE_BIAS_NV	/usr/include/SDL2/SDL_opengl.h	3561;"	d
GL_VIBRANCE_SCALE_NV	/usr/include/SDL2/SDL_opengl.h	3555;"	d
GL_VIDEO_BUFFER_BINDING_NV	/usr/include/SDL2/SDL_opengl.h	4839;"	d
GL_VIDEO_BUFFER_INTERNAL_FORMAT_NV	/usr/include/SDL2/SDL_opengl.h	4851;"	d
GL_VIDEO_BUFFER_NV	/usr/include/SDL2/SDL_opengl.h	4838;"	d
GL_VIDEO_BUFFER_PITCH_NV	/usr/include/SDL2/SDL_opengl.h	4846;"	d
GL_VIDEO_CAPTURE_FIELD_LOWER_HEIGHT_NV	/usr/include/SDL2/SDL_opengl.h	4865;"	d
GL_VIDEO_CAPTURE_FIELD_UPPER_HEIGHT_NV	/usr/include/SDL2/SDL_opengl.h	4864;"	d
GL_VIDEO_CAPTURE_FRAME_HEIGHT_NV	/usr/include/SDL2/SDL_opengl.h	4863;"	d
GL_VIDEO_CAPTURE_FRAME_WIDTH_NV	/usr/include/SDL2/SDL_opengl.h	4862;"	d
GL_VIDEO_CAPTURE_SURFACE_ORIGIN_NV	/usr/include/SDL2/SDL_opengl.h	4866;"	d
GL_VIDEO_CAPTURE_TO_422_SUPPORTED_NV	/usr/include/SDL2/SDL_opengl.h	4844;"	d
GL_VIDEO_COLOR_CONVERSION_MATRIX_NV	/usr/include/SDL2/SDL_opengl.h	4847;"	d
GL_VIDEO_COLOR_CONVERSION_MAX_NV	/usr/include/SDL2/SDL_opengl.h	4848;"	d
GL_VIDEO_COLOR_CONVERSION_MIN_NV	/usr/include/SDL2/SDL_opengl.h	4849;"	d
GL_VIDEO_COLOR_CONVERSION_OFFSET_NV	/usr/include/SDL2/SDL_opengl.h	4850;"	d
GL_VIEWPORT	/usr/include/SDL2/SDL_opengles2.h	546;"	d
GL_VIEWPORT_BOUNDS_RANGE	/usr/include/SDL2/SDL_opengl.h	2167;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	/usr/include/SDL2/SDL_opengl.h	2169;"	d
GL_VIEWPORT_SUBPIXEL_BITS	/usr/include/SDL2/SDL_opengl.h	2166;"	d
GL_VIV_shader_binary	/usr/include/SDL2/SDL_opengles2.h	2777;"	d
GL_VOLATILE_APPLE	/usr/include/SDL2/SDL_opengl.h	4820;"	d
GL_WAIT_FAILED	/usr/include/SDL2/SDL_opengl.h	1887;"	d
GL_WAIT_FAILED_APPLE	/usr/include/SDL2/SDL_opengles2.h	1373;"	d
GL_WEIGHT_ARRAY_ARB	/usr/include/SDL2/SDL_opengl.h	1237;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING	/usr/include/SDL2/SDL_opengl.h	445;"	d
GL_WEIGHT_ARRAY_BUFFER_BINDING_ARB	/usr/include/SDL2/SDL_opengl.h	1458;"	d
GL_WEIGHT_ARRAY_POINTER_ARB	/usr/include/SDL2/SDL_opengl.h	1236;"	d
GL_WEIGHT_ARRAY_SIZE_ARB	/usr/include/SDL2/SDL_opengl.h	1235;"	d
GL_WEIGHT_ARRAY_STRIDE_ARB	/usr/include/SDL2/SDL_opengl.h	1234;"	d
GL_WEIGHT_ARRAY_TYPE_ARB	/usr/include/SDL2/SDL_opengl.h	1233;"	d
GL_WEIGHT_SUM_UNITY_ARB	/usr/include/SDL2/SDL_opengl.h	1230;"	d
GL_WIDE_LINE_HINT_PGI	/usr/include/SDL2/SDL_opengl.h	2774;"	d
GL_WIN_phong_shading	/usr/include/SDL2/SDL_opengl.h	8075;"	d
GL_WIN_specular_fog	/usr/include/SDL2/SDL_opengl.h	8079;"	d
GL_WRAP_BORDER_SUN	/usr/include/SDL2/SDL_opengl.h	3171;"	d
GL_WRITEONLY_RENDERING_QCOM	/usr/include/SDL2/SDL_opengles2.h	1798;"	d
GL_WRITE_DISCARD_NV	/usr/include/SDL2/SDL_opengl.h	5093;"	d
GL_WRITE_ONLY	/usr/include/SDL2/SDL_opengl.h	419;"	d
GL_WRITE_ONLY_ARB	/usr/include/SDL2/SDL_opengl.h	1461;"	d
GL_WRITE_ONLY_OES	/usr/include/SDL2/SDL_opengles2.h	1059;"	d
GL_WRITE_PIXEL_DATA_RANGE_LENGTH_NV	/usr/include/SDL2/SDL_opengl.h	4158;"	d
GL_WRITE_PIXEL_DATA_RANGE_NV	/usr/include/SDL2/SDL_opengl.h	4156;"	d
GL_WRITE_PIXEL_DATA_RANGE_POINTER_NV	/usr/include/SDL2/SDL_opengl.h	4160;"	d
GL_W_EXT	/usr/include/SDL2/SDL_opengl.h	3928;"	d
GL_X_EXT	/usr/include/SDL2/SDL_opengl.h	3925;"	d
GL_YCBAYCR8A_4224_NV	/usr/include/SDL2/SDL_opengl.h	4856;"	d
GL_YCBCR_422_APPLE	/usr/include/SDL2/SDL_opengl.h	4066;"	d
GL_YCBCR_MESA	/usr/include/SDL2/SDL_opengl.h	4217;"	d
GL_YCBYCR8_422_NV	/usr/include/SDL2/SDL_opengl.h	4855;"	d
GL_YCRCBA_SGIX	/usr/include/SDL2/SDL_opengl.h	3352;"	d
GL_YCRCB_422_SGIX	/usr/include/SDL2/SDL_opengl.h	2852;"	d
GL_YCRCB_444_SGIX	/usr/include/SDL2/SDL_opengl.h	2853;"	d
GL_YCRCB_SGIX	/usr/include/SDL2/SDL_opengl.h	3351;"	d
GL_Y_EXT	/usr/include/SDL2/SDL_opengl.h	3926;"	d
GL_Z400_BINARY_AMD	/usr/include/SDL2/SDL_opengles2.h	1266;"	d
GL_Z4Y12Z4CB12Z4A12Z4Y12Z4CR12Z4A12_4224_NV	/usr/include/SDL2/SDL_opengl.h	4860;"	d
GL_Z4Y12Z4CB12Z4CR12_444_NV	/usr/include/SDL2/SDL_opengl.h	4861;"	d
GL_Z4Y12Z4CB12Z4Y12Z4CR12_422_NV	/usr/include/SDL2/SDL_opengl.h	4859;"	d
GL_Z6Y10Z6CB10Z6A10Z6Y10Z6CR10Z6A10_4224_NV	/usr/include/SDL2/SDL_opengl.h	4858;"	d
GL_Z6Y10Z6CB10Z6Y10Z6CR10_422_NV	/usr/include/SDL2/SDL_opengl.h	4857;"	d
GL_ZERO	/usr/include/SDL2/SDL_opengles2.h	427;"	d
GL_ZERO_EXT	/usr/include/SDL2/SDL_opengl.h	3933;"	d
GL_Z_EXT	/usr/include/SDL2/SDL_opengl.h	3927;"	d
GLbitfield	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned int     GLbitfield;$/;"	t
GLboolean	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned char    GLboolean;$/;"	t
GLbyte	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_int8_t   GLbyte;$/;"	t
GLchar	/usr/include/SDL2/SDL_opengl.h	/^typedef char GLchar;$/;"	t
GLchar	/usr/include/SDL2/SDL_opengles2.h	/^typedef char             GLchar;$/;"	t
GLcharARB	/usr/include/SDL2/SDL_opengl.h	/^typedef char GLcharARB;$/;"	t
GLclampf	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_float_t  GLclampf;$/;"	t
GLeglImageOES	/usr/include/SDL2/SDL_opengles2.h	/^typedef void* GLeglImageOES;$/;"	t
GLenum	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned int     GLenum;$/;"	t
GLfixed	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_int32_t  GLfixed;$/;"	t
GLfloat	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_float_t  GLfloat;$/;"	t
GLhalfARB	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLhandleARB	/usr/include/SDL2/SDL_opengl.h	/^typedef void *GLhandleARB;$/;"	t
GLint	/usr/include/SDL2/SDL_opengles2.h	/^typedef int              GLint;$/;"	t
GLint64	/usr/include/SDL2/SDL_opengl.h	/^typedef int64_t GLint64;$/;"	t
GLint64	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_int64_t GLint64;$/;"	t
GLint64EXT	/usr/include/SDL2/SDL_opengl.h	/^typedef int64_t GLint64EXT;$/;"	t
GLintptr	/usr/include/SDL2/SDL_opengl.h	/^typedef long GLintptr;$/;"	t
GLintptr	/usr/include/SDL2/SDL_opengl.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptr	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_intptr_t GLintptr;$/;"	t
GLintptrARB	/usr/include/SDL2/SDL_opengl.h	/^typedef long GLintptrARB;$/;"	t
GLintptrARB	/usr/include/SDL2/SDL_opengl.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLshort	/usr/include/SDL2/SDL_opengles2.h	/^typedef short            GLshort;$/;"	t
GLsizei	/usr/include/SDL2/SDL_opengles2.h	/^typedef int              GLsizei;$/;"	t
GLsizeiptr	/usr/include/SDL2/SDL_opengl.h	/^typedef long GLsizeiptr;$/;"	t
GLsizeiptr	/usr/include/SDL2/SDL_opengl.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptr	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_ssize_t  GLsizeiptr;$/;"	t
GLsizeiptrARB	/usr/include/SDL2/SDL_opengl.h	/^typedef long GLsizeiptrARB;$/;"	t
GLsizeiptrARB	/usr/include/SDL2/SDL_opengl.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsync	/usr/include/SDL2/SDL_opengl.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLsync	/usr/include/SDL2/SDL_opengles2.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_uint8_t  GLubyte;$/;"	t
GLuint	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned int     GLuint;$/;"	t
GLuint64	/usr/include/SDL2/SDL_opengl.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_uint64_t GLuint64;$/;"	t
GLuint64EXT	/usr/include/SDL2/SDL_opengl.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLushort	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned short   GLushort;$/;"	t
GLvdpauSurfaceNV	/usr/include/SDL2/SDL_opengl.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t
GLvoid	/usr/include/SDL2/SDL_opengles2.h	/^typedef void             GLvoid;$/;"	t
Gloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gloss;$/;"	m	struct:SDL_PixelFormat	access:public
Gmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Gmask;$/;"	m	struct:SDL_PixelFormat	access:public
Gshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gshift;$/;"	m	struct:SDL_PixelFormat	access:public
HAVE_ABS	/usr/include/SDL2/SDL_config.h	94;"	d
HAVE_ACOS	/usr/include/SDL2/SDL_config.h	138;"	d
HAVE_ALLOCA	/usr/include/SDL2/SDL_config.h	86;"	d
HAVE_ALLOCA_H	/usr/include/SDL2/SDL_config.h	60;"	d
HAVE_ASIN	/usr/include/SDL2/SDL_config.h	139;"	d
HAVE_ATAN	/usr/include/SDL2/SDL_config.h	136;"	d
HAVE_ATAN2	/usr/include/SDL2/SDL_config.h	137;"	d
HAVE_ATOF	/usr/include/SDL2/SDL_config.h	124;"	d
HAVE_ATOI	/usr/include/SDL2/SDL_config.h	123;"	d
HAVE_BCOPY	/usr/include/SDL2/SDL_config.h	95;"	d
HAVE_CALLOC	/usr/include/SDL2/SDL_config.h	83;"	d
HAVE_CEIL	/usr/include/SDL2/SDL_config.h	140;"	d
HAVE_CLOCK_GETTIME	/usr/include/SDL2/SDL_config.h	160;"	d
HAVE_COPYSIGN	/usr/include/SDL2/SDL_config.h	141;"	d
HAVE_COS	/usr/include/SDL2/SDL_config.h	142;"	d
HAVE_COSF	/usr/include/SDL2/SDL_config.h	143;"	d
HAVE_CTYPE_H	/usr/include/SDL2/SDL_config.h	72;"	d
HAVE_DBUS_DBUS_H	/usr/include/SDL2/SDL_config.h	79;"	d
HAVE_FABS	/usr/include/SDL2/SDL_config.h	144;"	d
HAVE_FLOOR	/usr/include/SDL2/SDL_config.h	145;"	d
HAVE_FREE	/usr/include/SDL2/SDL_config.h	85;"	d
HAVE_FSEEKO	/usr/include/SDL2/SDL_config.h	152;"	d
HAVE_FSEEKO64	/usr/include/SDL2/SDL_config.h	153;"	d
HAVE_GCC_ATOMICS	/usr/include/SDL2/SDL_config.h	51;"	d
HAVE_GETENV	/usr/include/SDL2/SDL_config.h	88;"	d
HAVE_ICONV	/usr/include/SDL2/SDL_config.h	163;"	d
HAVE_ICONV_H	/usr/include/SDL2/SDL_config.h	74;"	d
HAVE_INTTYPES_H	/usr/include/SDL2/SDL_config.h	70;"	d
HAVE_LIBC	/usr/include/SDL2/SDL_config.h	56;"	d
HAVE_LIBUDEV_H	/usr/include/SDL2/SDL_config.h	78;"	d
HAVE_LOG	/usr/include/SDL2/SDL_config.h	146;"	d
HAVE_MALLOC	/usr/include/SDL2/SDL_config.h	82;"	d
HAVE_MALLOC_H	/usr/include/SDL2/SDL_config.h	66;"	d
HAVE_MATH_H	/usr/include/SDL2/SDL_config.h	73;"	d
HAVE_MEMCMP	/usr/include/SDL2/SDL_config.h	99;"	d
HAVE_MEMCPY	/usr/include/SDL2/SDL_config.h	97;"	d
HAVE_MEMMOVE	/usr/include/SDL2/SDL_config.h	98;"	d
HAVE_MEMORY_H	/usr/include/SDL2/SDL_config.h	67;"	d
HAVE_MEMSET	/usr/include/SDL2/SDL_config.h	96;"	d
HAVE_MPROTECT	/usr/include/SDL2/SDL_config.h	162;"	d
HAVE_M_PI	/usr/include/SDL2/SDL_config.h	135;"	d
HAVE_NANOSLEEP	/usr/include/SDL2/SDL_config.h	157;"	d
HAVE_POW	/usr/include/SDL2/SDL_config.h	147;"	d
HAVE_PTHREAD_SETNAME_NP	/usr/include/SDL2/SDL_config.h	164;"	d
HAVE_PTHREAD_SPINLOCK	/usr/include/SDL2/SDL_config.h	53;"	d
HAVE_PUTENV	/usr/include/SDL2/SDL_config.h	90;"	d
HAVE_QSORT	/usr/include/SDL2/SDL_config.h	93;"	d
HAVE_REALLOC	/usr/include/SDL2/SDL_config.h	84;"	d
HAVE_SA_SIGACTION	/usr/include/SDL2/SDL_config.h	155;"	d
HAVE_SCALBN	/usr/include/SDL2/SDL_config.h	148;"	d
HAVE_SEM_TIMEDWAIT	/usr/include/SDL2/SDL_config.h	166;"	d
HAVE_SETENV	/usr/include/SDL2/SDL_config.h	89;"	d
HAVE_SETJMP	/usr/include/SDL2/SDL_config.h	156;"	d
HAVE_SIGACTION	/usr/include/SDL2/SDL_config.h	154;"	d
HAVE_SIGNAL_H	/usr/include/SDL2/SDL_config.h	75;"	d
HAVE_SIN	/usr/include/SDL2/SDL_config.h	149;"	d
HAVE_SINF	/usr/include/SDL2/SDL_config.h	150;"	d
HAVE_SQRT	/usr/include/SDL2/SDL_config.h	151;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config.h	169;"	d
HAVE_STDARG_H	/usr/include/SDL2/SDL_config.h	65;"	d
HAVE_STDDEF_H	/usr/include/SDL2/SDL_config.h	170;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config.h	171;"	d
HAVE_STDINT_H	/usr/include/SDL2/SDL_config.h	71;"	d
HAVE_STDIO_H	/usr/include/SDL2/SDL_config.h	62;"	d
HAVE_STDLIB_H	/usr/include/SDL2/SDL_config.h	64;"	d
HAVE_STRCASECMP	/usr/include/SDL2/SDL_config.h	128;"	d
HAVE_STRCHR	/usr/include/SDL2/SDL_config.h	109;"	d
HAVE_STRCMP	/usr/include/SDL2/SDL_config.h	125;"	d
HAVE_STRDUP	/usr/include/SDL2/SDL_config.h	103;"	d
HAVE_STRINGS_H	/usr/include/SDL2/SDL_config.h	69;"	d
HAVE_STRING_H	/usr/include/SDL2/SDL_config.h	68;"	d
HAVE_STRLEN	/usr/include/SDL2/SDL_config.h	100;"	d
HAVE_STRNCASECMP	/usr/include/SDL2/SDL_config.h	130;"	d
HAVE_STRNCMP	/usr/include/SDL2/SDL_config.h	126;"	d
HAVE_STRRCHR	/usr/include/SDL2/SDL_config.h	110;"	d
HAVE_STRSTR	/usr/include/SDL2/SDL_config.h	111;"	d
HAVE_STRTOD	/usr/include/SDL2/SDL_config.h	122;"	d
HAVE_STRTOL	/usr/include/SDL2/SDL_config.h	116;"	d
HAVE_STRTOLL	/usr/include/SDL2/SDL_config.h	120;"	d
HAVE_STRTOUL	/usr/include/SDL2/SDL_config.h	117;"	d
HAVE_STRTOULL	/usr/include/SDL2/SDL_config.h	121;"	d
HAVE_SYSCONF	/usr/include/SDL2/SDL_config.h	158;"	d
HAVE_SYS_TYPES_H	/usr/include/SDL2/SDL_config.h	61;"	d
HAVE_UNSETENV	/usr/include/SDL2/SDL_config.h	91;"	d
HAVE_VSNPRINTF	/usr/include/SDL2/SDL_config.h	134;"	d
HAVE_VSSCANF	/usr/include/SDL2/SDL_config.h	132;"	d
IDirect3DDevice9	/usr/include/SDL2/SDL_system.h	/^typedef struct IDirect3DDevice9 IDirect3DDevice9;$/;"	t	typeref:struct:IDirect3DDevice9
KHRONOS_APIATTRIBUTES	/usr/include/SDL2/SDL_opengles2.h	166;"	d
KHRONOS_APIATTRIBUTES	/usr/include/SDL2/SDL_opengles2.h	168;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_opengles2.h	140;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_opengles2.h	142;"	d
KHRONOS_APICALL	/usr/include/SDL2/SDL_opengles2.h	144;"	d
KHRONOS_APIENTRY	/usr/include/SDL2/SDL_opengles2.h	155;"	d
KHRONOS_APIENTRY	/usr/include/SDL2/SDL_opengles2.h	157;"	d
KHRONOS_BOOLEAN_ENUM_FORCE_SIZE	/usr/include/SDL2/SDL_opengles2.h	/^    KHRONOS_BOOLEAN_ENUM_FORCE_SIZE = KHRONOS_MAX_ENUM$/;"	e	enum:__anon3
KHRONOS_FALSE	/usr/include/SDL2/SDL_opengles2.h	/^    KHRONOS_FALSE = 0,$/;"	e	enum:__anon3
KHRONOS_MAX_ENUM	/usr/include/SDL2/SDL_opengles2.h	306;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2.h	186;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2.h	199;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2.h	211;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2.h	228;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2.h	238;"	d
KHRONOS_SUPPORT_FLOAT	/usr/include/SDL2/SDL_opengles2.h	251;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2.h	185;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2.h	198;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2.h	210;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2.h	227;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2.h	237;"	d
KHRONOS_SUPPORT_INT64	/usr/include/SDL2/SDL_opengles2.h	250;"	d
KHRONOS_TRUE	/usr/include/SDL2/SDL_opengles2.h	/^    KHRONOS_TRUE = 1,$/;"	e	enum:__anon3
KMOD_ALT	/usr/include/SDL2/SDL_keycode.h	336;"	d
KMOD_CAPS	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_CAPS = 0x2000,$/;"	e	enum:__anon70
KMOD_CTRL	/usr/include/SDL2/SDL_keycode.h	334;"	d
KMOD_GUI	/usr/include/SDL2/SDL_keycode.h	337;"	d
KMOD_LALT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LALT = 0x0100,$/;"	e	enum:__anon70
KMOD_LCTRL	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LCTRL = 0x0040,$/;"	e	enum:__anon70
KMOD_LGUI	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LGUI = 0x0400,$/;"	e	enum:__anon70
KMOD_LSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_LSHIFT = 0x0001,$/;"	e	enum:__anon70
KMOD_MODE	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_MODE = 0x4000,$/;"	e	enum:__anon70
KMOD_NONE	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_NONE = 0x0000,$/;"	e	enum:__anon70
KMOD_NUM	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_NUM = 0x1000,$/;"	e	enum:__anon70
KMOD_RALT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RALT = 0x0200,$/;"	e	enum:__anon70
KMOD_RCTRL	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RCTRL = 0x0080,$/;"	e	enum:__anon70
KMOD_RESERVED	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RESERVED = 0x8000$/;"	e	enum:__anon70
KMOD_RGUI	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RGUI = 0x0800,$/;"	e	enum:__anon70
KMOD_RSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    KMOD_RSHIFT = 0x0002,$/;"	e	enum:__anon70
KMOD_SHIFT	/usr/include/SDL2/SDL_keycode.h	335;"	d
MD5UINT4	/usr/include/SDL2/SDL_test_md5.h	/^  typedef unsigned long int MD5UINT4;$/;"	t
M_PI	/usr/include/SDL2/SDL_stdinc.h	340;"	d
NOMINMAX	/usr/include/SDL2/SDL_opengl.h	38;"	d
NO_SDL_GLEXT	/usr/include/SDL2/SDL_opengl.h	45;"	d
NSWindow	/usr/include/SDL2/SDL_syswm.h	/^typedef struct _NSWindow NSWindow;$/;"	t	typeref:struct:_NSWindow
NULL	/usr/include/SDL2/begin_code.h	135;"	d
NULL	/usr/include/SDL2/begin_code.h	137;"	d
NeedFunctionPrototypes	/usr/include/SDL2/SDL_name.h	6;"	d
PFLGLDRAWARRAYSINSTANCEDANGLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFLGLDRAWARRAYSINSTANCEDANGLEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFLGLDRAWELEMENTSINSTANCEDANGLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFLGLDRAWELEMENTSINSTANCEDANGLEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	t
PFLGLGETTRANSLATEDSHADERSOURCEANGLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFLGLGETTRANSLATEDSHADERSOURCEANGLEPROC) (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);$/;"	t
PFLGLVERTEXATTRIBDIVISORANGLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFLGLVERTEXATTRIBDIVISORANGLEPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLACTIVEPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVEPROGRAMEXTPROC) (GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLACTIVESHADERPROGRAMEXTPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVESTENCILFACEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVESTENCILFACEEXTPROC) (GLenum face);$/;"	t
PFNGLACTIVETEXTUREARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVEVARYINGNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLACTIVEVARYINGNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLALPHAFRAGMENTOP1ATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLALPHAFRAGMENTOP2ATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLALPHAFRAGMENTOP3ATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLALPHAFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLALPHAFUNCQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLALPHAFUNCQCOMPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLAPPLYTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLAPPLYTEXTUREEXTPROC) (GLenum mode);$/;"	t
PFNGLAREPROGRAMSRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLAREPROGRAMSRESIDENTNVPROC) (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	t
PFNGLARETEXTURESRESIDENTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLARETEXTURESRESIDENTEXTPROC) (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	t
PFNGLARRAYELEMENTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLARRAYELEMENTEXTPROC) (GLint i);$/;"	t
PFNGLARRAYOBJECTATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLARRAYOBJECTATIPROC) (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLASYNCMARKERSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLATTACHOBJECTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLATTACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB obj);$/;"	t
PFNGLATTACHSHADERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERNVPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLBEGINOCCLUSIONQUERYNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLBEGINPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLBEGINQUERYARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYARBPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLBEGINQUERYEXTPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKEXTPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKNVPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLBEGINVIDEOCAPTURENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBEGINVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLBINDATTRIBLOCATIONARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONARBPROC) (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERARBPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEEXTPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASENVPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFEROFFSETEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFEROFFSETNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFEROFFSETNVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	t
PFNGLBINDBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEEXTPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGENVPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDFRAGDATALOCATIONEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONEXTPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLBINDFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFEREXTPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREEXTPROC) (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);$/;"	t
PFNGLBINDLIGHTPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDLIGHTPARAMETEREXTPROC) (GLenum light, GLenum value);$/;"	t
PFNGLBINDMATERIALPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDMATERIALPARAMETEREXTPROC) (GLenum face, GLenum value);$/;"	t
PFNGLBINDMULTITEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDMULTITEXTUREEXTPROC) (GLenum texunit, GLenum target, GLuint texture);$/;"	t
PFNGLBINDPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDPARAMETEREXTPROC) (GLenum value);$/;"	t
PFNGLBINDPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMARBPROC) (GLenum target, GLuint program);$/;"	t
PFNGLBINDPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDPROGRAMPIPELINEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLBINDPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFEREXTPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDTEXGENPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXGENPARAMETEREXTPROC) (GLenum unit, GLenum coord, GLenum value);$/;"	t
PFNGLBINDTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREEXTPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREUNITPARAMETEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLBINDTEXTUREUNITPARAMETEREXTPROC) (GLenum unit, GLenum value);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKNVPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLBINDVERTEXARRAYOESPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMBUFFERNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	t
PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINDVIDEOCAPTURESTREAMTEXTURENVPROC) (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	t
PFNGLBINORMAL3BEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BEXTPROC) (GLbyte bx, GLbyte by, GLbyte bz);$/;"	t
PFNGLBINORMAL3BVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLBINORMAL3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DEXTPROC) (GLdouble bx, GLdouble by, GLdouble bz);$/;"	t
PFNGLBINORMAL3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLBINORMAL3FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FEXTPROC) (GLfloat bx, GLfloat by, GLfloat bz);$/;"	t
PFNGLBINORMAL3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLBINORMAL3IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IEXTPROC) (GLint bx, GLint by, GLint bz);$/;"	t
PFNGLBINORMAL3IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLBINORMAL3SEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SEXTPROC) (GLshort bx, GLshort by, GLshort bz);$/;"	t
PFNGLBINORMAL3SVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMAL3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLBINORMALPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBINORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLBLENDCOLOREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDCOLOREXTPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDCOLORPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	t
PFNGLBLENDEQUATIONEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONEXTPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONINDEXEDAMDPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEEXTPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCINDEXEDAMDPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCSEPARATEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEEXTPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINDEXEDAMDPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEINGRPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEINGRPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLITFRAMEBUFFERANGLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLBLITFRAMEBUFFERANGLEPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFEREXTPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERADDRESSRANGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERADDRESSRANGENVPROC) (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	t
PFNGLBUFFERDATAARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAARBPROC) (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERPARAMETERIAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERPARAMETERIAPPLEPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLBUFFERSUBDATAARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC) (GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLCHECKNAMEDFRAMEBUFFERSTATUSEXTPROC) (GLuint framebuffer, GLenum target);$/;"	t
PFNGLCLAMPCOLORARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORARBPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARBUFFERFIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORIIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIIEXTPROC) (GLint red, GLint green, GLint blue, GLint alpha);$/;"	t
PFNGLCLEARCOLORIUIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORIUIEXTPROC) (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	t
PFNGLCLEARDEPTHDNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHDNVPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLclampf d);$/;"	t
PFNGLCLIENTACTIVETEXTUREARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREARBPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVETEXTUREPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTACTIVEVERTEXSTREAMATIPROC) (GLenum stream);$/;"	t
PFNGLCLIENTATTRIBDEFAULTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLCLIENTWAITSYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLenum (GL_APIENTRYP PFNGLCLIENTWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIENTWAITSYNCPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCOLOR3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLCOLOR3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLCOLOR3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLCOLOR4HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	t
PFNGLCOLOR4HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLCOLOR4UBVERTEX2FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	t
PFNGLCOLOR4UBVERTEX2FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX2FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FSUNPROC) (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLCOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLOR4UBVERTEX3FVSUNPROC) (const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLCOLORFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLCOLORFRAGMENTOP1ATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP1ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	t
PFNGLCOLORFRAGMENTOP2ATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP2ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	t
PFNGLCOLORFRAGMENTOP3ATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORFRAGMENTOP3ATIPROC) (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	t
PFNGLCOLORMASKINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORMASKINDEXEDEXTPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORP4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLCOLORPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLCOLORPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLCOLORSUBTABLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORSUBTABLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	t
PFNGLCOLORTABLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEEXTPROC) (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLEPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERFVSGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPARAMETERIVSGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOLORTABLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOLORTABLESGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	t
PFNGLCOMBINERINPUTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERINPUTNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLCOMBINEROUTPUTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINEROUTPUTNVPROC) (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	t
PFNGLCOMBINERPARAMETERFNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFNVPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLCOMBINERPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERFVNVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMBINERPARAMETERINVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLCOMBINERPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLCOMBINERSTAGEPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCOMPILESHADERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERARBPROC) (GLhandleARB shaderObj);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DARBPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DARBPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DARBPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	t
PFNGLCONVOLUTIONFILTER1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONFILTER2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	t
PFNGLCONVOLUTIONPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIPROC) (GLenum target, GLenum pname, GLint params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCONVOLUTIONPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYCOLORSUBTABLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEEXTPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORSUBTABLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORSUBTABLEPROC) (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLEPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCOLORTABLESGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCOLORTABLESGIPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER1DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYCONVOLUTIONFILTER2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYCONVOLUTIONFILTER2DPROC) (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYIMAGESUBDATANVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATANVPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLCOPYMULTITEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYMULTITEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTUREIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXTUREIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXTURELEVELSAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLCOPYTEXTURELEVELSAPPLEPROC) (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCOPYTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOVERAGEMASKNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEMASKNVPROC) (GLboolean mask);$/;"	t
PFNGLCOVERAGEOPERATIONNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLCOVERAGEOPERATIONNVPROC) (GLenum operation);$/;"	t
PFNGLCREATEPROGRAMOBJECTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATEPROGRAMOBJECTARBPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATESHADEROBJECTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLhandleARB (APIENTRYP PFNGLCREATESHADEROBJECTARBPROC) (GLenum shaderType);$/;"	t
PFNGLCREATESHADERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMEXTPROC) (GLenum type, const GLchar *string);$/;"	t
PFNGLCREATESHADERPROGRAMVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLuint (GL_APIENTRYP PFNGLCREATESHADERPROGRAMVEXTPROC) (GLenum type, GLsizei count, const GLchar **strings);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar* *strings);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	t
PFNGLCULLPARAMETERDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERDVEXTPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLCULLPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCULLPARAMETERFVEXTPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLCURRENTPALETTEMATRIXARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLCURRENTPALETTEMATRIXARBPROC) (GLint index);$/;"	t
PFNGLDEBUGMESSAGECALLBACKAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKAMDPROC) (GLDEBUGPROCAMD callback, GLvoid *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEENABLEAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEENABLEAMDPROC) (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTAMDPROC) (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEFORMATIONMAP3DSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3DSGIXPROC) (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	t
PFNGLDEFORMATIONMAP3FSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEFORMATIONMAP3FSGIXPROC) (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	t
PFNGLDEFORMSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEFORMSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLDELETEASYNCMARKERSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEASYNCMARKERSSGIXPROC) (GLuint marker, GLsizei range);$/;"	t
PFNGLDELETEBUFFERSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSARBPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFENCESAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESAPPLEPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFENCESNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDELETEFENCESNVPROC) (GLsizei n, const GLuint *fences);$/;"	t
PFNGLDELETEFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFRAGMENTSHADERATIPROC) (GLuint id);$/;"	t
PFNGLDELETEFRAMEBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSEXTPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETENAMESAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETENAMESAMDPROC) (GLenum identifier, GLuint num, const GLuint *names);$/;"	t
PFNGLDELETEOBJECTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEOBJECTARBPROC) (GLhandleARB obj);$/;"	t
PFNGLDELETEOCCLUSIONQUERIESNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEOCCLUSIONQUERIESNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLDELETEPROGRAMPIPELINESEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDELETEPROGRAMPIPELINESEXTPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSARBPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEPROGRAMSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLDELETEQUERIESARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESARBPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDELETEQUERIESEXTPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSEXTPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESHADERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDELETESYNCAPPLEPROC) (GLsync sync);$/;"	t
PFNGLDELETESYNCPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESEXTPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSNVPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSAPPLEPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDELETEVERTEXARRAYSOESPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXSHADEREXTPROC) (GLuint id);$/;"	t
PFNGLDEPTHBOUNDSDNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSDNVPROC) (GLdouble zmin, GLdouble zmax);$/;"	t
PFNGLDEPTHBOUNDSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHBOUNDSEXTPROC) (GLclampd zmin, GLclampd zmax);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLclampd *v);$/;"	t
PFNGLDEPTHRANGEDNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEDNVPROC) (GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLDEPTHRANGEFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLclampf n, GLclampf f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLclampd n, GLclampd f);$/;"	t
PFNGLDETACHOBJECTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDETACHOBJECTARBPROC) (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	t
PFNGLDETACHSHADERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETAILTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDETAILTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLDISABLEDRIVERCONTROLQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDISABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t
PFNGLDISABLEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLDISABLEVERTEXATTRIBAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISCARDFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDISCARDFRAMEBUFFEREXTPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLDRAWARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSEXTPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDARBPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDEXTPROC) (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	t
PFNGLDRAWBUFFERSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSARBPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSATIPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSINDEXEDEXTPROC) (GLint n, const GLenum *location, const GLint *indices);$/;"	t
PFNGLDRAWBUFFERSNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLDRAWBUFFERSNVPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWELEMENTARRAYATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTARRAYATIPROC) (GLenum mode, GLsizei count);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDARBPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDEXTPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	t
PFNGLDRAWMESHARRAYSSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWMESHARRAYSSUNPROC) (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTARRAYATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTARRAYATIPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSEXTPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKNVPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLEDGEFLAGFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGFORMATNVPROC) (GLsizei stride);$/;"	t
PFNGLEDGEFLAGPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTEREXTPROC) (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	t
PFNGLEDGEFLAGPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEDGEFLAGPOINTERLISTIBMPROC) (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	t
PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETRENDERBUFFERSTORAGEOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLEGLIMAGETARGETTEXTURE2DOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEGLIMAGETARGETTEXTURE2DOESPROC) (GLenum target, GLeglImageOES image);$/;"	t
PFNGLELEMENTPOINTERAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERAPPLEPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLELEMENTPOINTERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLELEMENTPOINTERATIPROC) (GLenum type, const GLvoid *pointer);$/;"	t
PFNGLENABLECLIENTSTATEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLECLIENTSTATEINDEXEDEXTPROC) (GLenum array, GLuint index);$/;"	t
PFNGLENABLEDRIVERCONTROLQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLENABLEDRIVERCONTROLQCOMPROC) (GLuint driverControl);$/;"	t
PFNGLENABLEINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEVARIANTCLIENTSTATEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVARIANTCLIENTSTATEEXTPROC) (GLuint id);$/;"	t
PFNGLENABLEVERTEXATTRIBAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYARBPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERNVPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDFRAGMENTSHADERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDFRAGMENTSHADERATIPROC) (void);$/;"	t
PFNGLENDOCCLUSIONQUERYNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDOCCLUSIONQUERYNVPROC) (void);$/;"	t
PFNGLENDPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDPERFMONITORAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLENDPERFMONITORAMDPROC) (GLuint monitor);$/;"	t
PFNGLENDQUERYARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDQUERYARBPROC) (GLenum target);$/;"	t
PFNGLENDQUERYEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLENDQUERYEXTPROC) (GLenum target);$/;"	t
PFNGLENDQUERYINDEXEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDTILINGQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLENDTILINGQCOMPROC) (GLbitfield preserveMask);$/;"	t
PFNGLENDTRANSFORMFEEDBACKEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKEXTPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLENDVERTEXSHADEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDVERTEXSHADEREXTPROC) (void);$/;"	t
PFNGLENDVIDEOCAPTURENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLENDVIDEOCAPTURENVPROC) (GLuint video_capture_slot);$/;"	t
PFNGLEVALMAPSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEVALMAPSNVPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLEXECUTEPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEXECUTEPROGRAMNVPROC) (GLenum target, GLuint id, const GLfloat *params);$/;"	t
PFNGLEXTGETBUFFERPOINTERVQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERPOINTERVQCOMPROC) (GLenum target, GLvoid **params);$/;"	t
PFNGLEXTGETBUFFERSQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETBUFFERSQCOMPROC) (GLuint *buffers, GLint maxBuffers, GLint *numBuffers);$/;"	t
PFNGLEXTGETFRAMEBUFFERSQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETFRAMEBUFFERSQCOMPROC) (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);$/;"	t
PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMBINARYSOURCEQCOMPROC) (GLuint program, GLenum shadertype, GLchar *source, GLint *length);$/;"	t
PFNGLEXTGETPROGRAMSQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETPROGRAMSQCOMPROC) (GLuint *programs, GLint maxPrograms, GLint *numPrograms);$/;"	t
PFNGLEXTGETRENDERBUFFERSQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETRENDERBUFFERSQCOMPROC) (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);$/;"	t
PFNGLEXTGETSHADERSQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETSHADERSQCOMPROC) (GLuint *shaders, GLint maxShaders, GLint *numShaders);$/;"	t
PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXLEVELPARAMETERIVQCOMPROC) (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLEXTGETTEXSUBIMAGEQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXSUBIMAGEQCOMPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid *texels);$/;"	t
PFNGLEXTGETTEXTURESQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTGETTEXTURESQCOMPROC) (GLuint *textures, GLint maxTextures, GLint *numTextures);$/;"	t
PFNGLEXTISPROGRAMBINARYQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLEXTISPROGRAMBINARYQCOMPROC) (GLuint program);$/;"	t
PFNGLEXTRACTCOMPONENTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLEXTRACTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLEXTTEXOBJECTSTATEOVERRIDEIQCOMPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFENCESYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLsync (GL_APIENTRYP PFNGLFENCESYNCAPPLEPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFENCESYNCPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINALCOMBINERINPUTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINALCOMBINERINPUTNVPROC) (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	t
PFNGLFINISHASYNCSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLFINISHASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLFINISHFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHFENCENVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLFINISHFENCENVPROC) (GLuint fence);$/;"	t
PFNGLFINISHOBJECTAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHOBJECTAPPLEPROC) (GLenum object, GLint name);$/;"	t
PFNGLFINISHTEXTURESUNXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFINISHTEXTURESUNXPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEAPPLEPROC) (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPIXELDATARANGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHPIXELDATARANGENVPROC) (GLenum target);$/;"	t
PFNGLFLUSHRASTERSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHRASTERSGIXPROC) (void);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLFLUSHVERTEXARRAYRANGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFLUSHVERTEXARRAYRANGENVPROC) (void);$/;"	t
PFNGLFOGCOORDDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDEXTPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDPROC) (GLdouble coord);$/;"	t
PFNGLFOGCOORDDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVEXTPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDDVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDDVPROC) (const GLdouble *coord);$/;"	t
PFNGLFOGCOORDFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFEXTPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLFOGCOORDFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFPROC) (GLfloat coord);$/;"	t
PFNGLFOGCOORDFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVEXTPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDFVPROC) (const GLfloat *coord);$/;"	t
PFNGLFOGCOORDHNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHNVPROC) (GLhalfNV fog);$/;"	t
PFNGLFOGCOORDHVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDHVNVPROC) (const GLhalfNV *fog);$/;"	t
PFNGLFOGCOORDPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGCOORDPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLFOGCOORDPOINTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGCOORDPOINTERPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLFOGFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFOGFUNCSGISPROC) (GLsizei n, const GLfloat *points);$/;"	t
PFNGLFRAGMENTCOLORMATERIALSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTCOLORMATERIALSGIXPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLFRAGMENTLIGHTFSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFSGIXPROC) (GLenum light, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTISGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTISGIXPROC) (GLenum light, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELFSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTLIGHTMODELFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTLIGHTMODELISGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTLIGHTMODELIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTLIGHTMODELIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLFRAGMENTMATERIALFSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFSGIXPROC) (GLenum face, GLenum pname, GLfloat param);$/;"	t
PFNGLFRAGMENTMATERIALFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, const GLfloat *params);$/;"	t
PFNGLFRAGMENTMATERIALISGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALISGIXPROC) (GLenum face, GLenum pname, GLint param);$/;"	t
PFNGLFRAGMENTMATERIALIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, const GLint *params);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERDRAWBUFFERSEXTPROC) (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	t
PFNGLFRAMEBUFFERREADBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERREADBUFFEREXTPROC) (GLuint framebuffer, GLenum mode);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DMULTISAMPLEIMGPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DEXTPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DOES	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DOES) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTUREARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREFACEEXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERARBPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYEREXTPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMETERMINATORGREMEDYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMETERMINATORGREMEDYPROC) (void);$/;"	t
PFNGLFRAMEZOOMSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFRAMEZOOMSGIXPROC) (GLint factor);$/;"	t
PFNGLFREEOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLFREEOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLGENASYNCMARKERSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENASYNCMARKERSSGIXPROC) (GLsizei range);$/;"	t
PFNGLGENBUFFERSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSARBPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPEXTPROC) (GLenum target);$/;"	t
PFNGLGENERATEMIPMAPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMULTITEXMIPMAPEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENERATEMULTITEXMIPMAPEXTPROC) (GLenum texunit, GLenum target);$/;"	t
PFNGLGENERATETEXTUREMIPMAPEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENERATETEXTUREMIPMAPEXTPROC) (GLuint texture, GLenum target);$/;"	t
PFNGLGENFENCESAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFENCESAPPLEPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFENCESNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGENFENCESNVPROC) (GLsizei n, GLuint *fences);$/;"	t
PFNGLGENFRAGMENTSHADERSATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENFRAGMENTSHADERSATIPROC) (GLuint range);$/;"	t
PFNGLGENFRAMEBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSEXTPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENNAMESAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENNAMESAMDPROC) (GLenum identifier, GLuint num, GLuint *names);$/;"	t
PFNGLGENOCCLUSIONQUERIESNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENOCCLUSIONQUERIESNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPERFMONITORSAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGENPERFMONITORSAMDPROC) (GLsizei n, GLuint *monitors);$/;"	t
PFNGLGENPROGRAMPIPELINESEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGENPROGRAMPIPELINESEXTPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENPROGRAMSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSARBPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENPROGRAMSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMSNVPROC) (GLsizei n, GLuint *programs);$/;"	t
PFNGLGENQUERIESARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENQUERIESARBPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGENQUERIESEXTPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSEXTPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENSYMBOLSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENSYMBOLSEXTPROC) (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	t
PFNGLGENTEXTURESEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESEXTPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSNVPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSAPPLEPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGENVERTEXARRAYSOESPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXSHADERSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGENVERTEXSHADERSEXTPROC) (GLuint range);$/;"	t
PFNGLGETACTIVEATTRIBARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMARBPROC) (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEVARYINGNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETACTIVEVARYINGNVPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETARRAYOBJECTFVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTFVATIPROC) (GLenum array, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETARRAYOBJECTIVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETARRAYOBJECTIVATIPROC) (GLenum array, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDOBJECTSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDOBJECTSARBPROC) (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTRIBLOCATIONARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANINDEXEDVEXTPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERUI64VNVPROC) (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETBUFFERPOINTERVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVARBPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETBUFFERPOINTERVOESPROC) (GLenum target, GLenum pname, GLvoid** params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAARBPROC) (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEEXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERFVSGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERFVSGIPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPARAMETERIVSGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPARAMETERIVSGIPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOLORTABLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLEPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOLORTABLESGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOLORTABLESGIPROC) (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERINPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERFVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINEROUTPUTPARAMETERIVNVPROC) (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	t
PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMBINERSTAGEPARAMETERFVNVPROC) (GLenum stage, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint lod, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint lod, GLvoid *img);$/;"	t
PFNGLGETCONVOLUTIONFILTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONFILTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETCONVOLUTIONPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETCONVOLUTIONPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETDEBUGMESSAGELOGAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGAMDPROC) (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLuint (GL_APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDETAILTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETDETAILTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETDOUBLEINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEINDEXEDVEXTPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDRIVERCONTROLSQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSQCOMPROC) (GLint *num, GLsizei size, GLuint *driverControls);$/;"	t
PFNGLGETDRIVERCONTROLSTRINGQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETDRIVERCONTROLSTRINGQCOMPROC) (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);$/;"	t
PFNGLGETFENCEIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFENCEIVNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETFENCEIVNVPROC) (GLuint fence, GLenum pname, GLint *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERFVNVPROC) (GLenum variable, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFINALCOMBINERINPUTPARAMETERIVNVPROC) (GLenum variable, GLenum pname, GLint *params);$/;"	t
PFNGLGETFLOATINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFLOATINDEXEDVEXTPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFOGFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFOGFUNCSGISPROC) (GLfloat *points);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONEXTPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGMENTLIGHTFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTFVSGIXPROC) (GLenum light, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTLIGHTIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTLIGHTIVSGIXPROC) (GLenum light, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAGMENTMATERIALFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALFVSGIXPROC) (GLenum face, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGMENTMATERIALIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAGMENTMATERIALIVSGIXPROC) (GLenum face, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLenum (GL_APIENTRYP PFNGLGETGRAPHICSRESETSTATUSEXTPROC) (void);$/;"	t
PFNGLGETHANDLEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLhandleARB (APIENTRYP PFNGLGETHANDLEARBPROC) (GLenum pname);$/;"	t
PFNGLGETHISTOGRAMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETHISTOGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETHISTOGRAMPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETINFOLOGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINFOLOGARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	t
PFNGLGETINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLGETINTEGER64I_VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGER64VAPPLEPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGER64VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGERINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINTEGERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETINTEGERI_VEXTPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERUI64I_VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64I_VNVPROC) (GLenum value, GLuint index, GLuint64EXT *result);$/;"	t
PFNGLGETINTEGERUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINTEGERUI64VNVPROC) (GLenum value, GLuint64EXT *result);$/;"	t
PFNGLGETINVARIANTBOOLEANVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETINVARIANTFLOATVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETINVARIANTINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETINVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETLISTPARAMETERFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETLISTPARAMETERIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, GLint *params);$/;"	t
PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETLOCALCONSTANTFLOATVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETLOCALCONSTANTINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETLOCALCONSTANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETMAPATTRIBPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPATTRIBPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPATTRIBPARAMETERIVNVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETMAPCONTROLPOINTSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	t
PFNGLGETMAPPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMAPPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXEXTPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMINMAXPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVEXTPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMINMAXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMINMAXPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	t
PFNGLGETMULTISAMPLEFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVNVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTITEXENVFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXENVIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXGENDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETMULTITEXGENFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXGENIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXIMAGEEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXLEVELPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETMULTITEXPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERIVEXTPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPARAMETERUI64VNVPROC) (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETNAMEDBUFFERPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERPOINTERVEXTPROC) (GLuint buffer, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETNAMEDBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMIVEXTPROC) (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERDVEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERFVEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMLOCALPARAMETERIUIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETNAMEDPROGRAMSTRINGEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDRENDERBUFFERPARAMETERIVEXTPROC) (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOLORTABLEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNCOLORTABLEARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNCONVOLUTIONFILTERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNCONVOLUTIONFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);$/;"	t
PFNGLGETNHISTOGRAMARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNHISTOGRAMARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	t
PFNGLGETNMAPDVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNMAPDVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	t
PFNGLGETNMAPFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNMAPFVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	t
PFNGLGETNMAPIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNMAPIVARBPROC) (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	t
PFNGLGETNMINMAXARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNMINMAXARBPROC) (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	t
PFNGLGETNPIXELMAPFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPFVARBPROC) (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	t
PFNGLGETNPIXELMAPUIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUIVARBPROC) (GLenum map, GLsizei bufSize, GLuint *values);$/;"	t
PFNGLGETNPIXELMAPUSVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNPIXELMAPUSVARBPROC) (GLenum map, GLsizei bufSize, GLushort *values);$/;"	t
PFNGLGETNPOLYGONSTIPPLEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNPOLYGONSTIPPLEARBPROC) (GLsizei bufSize, GLubyte *pattern);$/;"	t
PFNGLGETNSEPARABLEFILTERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNSEPARABLEFILTERARBPROC) (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMFVEXTPROC) (GLuint program, GLint location, GLsizei bufSize, float *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETNUNIFORMIVEXTPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTBUFFERFVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERFVATIPROC) (GLuint buffer, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTBUFFERIVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTBUFFERIVATIPROC) (GLuint buffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTLABELEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELEXTPROC) (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERFVARBPROC) (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVAPPLEPROC) (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPARAMETERIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPARAMETERIVARBPROC) (GLhandleARB obj, GLenum pname, GLint *params);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOCCLUSIONQUERYIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETOCCLUSIONQUERYUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETOCCLUSIONQUERYUIVNVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERDATAAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERDATAAMDPROC) (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERINFOAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERINFOAMDPROC) (GLuint group, GLuint counter, GLenum pname, GLvoid *data);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSAMDPROC) (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORCOUNTERSTRINGAMDPROC) (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSAMDPROC) (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPERFMONITORGROUPSTRINGAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPERFMONITORGROUPSTRINGAMDPROC) (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETPOINTERINDEXEDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPOINTERINDEXEDVEXTPROC) (GLenum target, GLuint index, GLvoid* *data);$/;"	t
PFNGLGETPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVEXTPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPOINTERVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, void **params);$/;"	t
PFNGLGETPROGRAMBINARYOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMBINARYOESPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
PFNGLGETPROGRAMBINARYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
PFNGLGETPROGRAMENVPARAMETERDVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMENVPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVNVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERDVARBPROC) (GLenum target, GLuint index, GLdouble *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERFVARBPROC) (GLenum target, GLuint index, GLfloat *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIIVNVPROC) (GLenum target, GLuint index, GLint *params);$/;"	t
PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMLOCALPARAMETERIUIVNVPROC) (GLenum target, GLuint index, GLuint *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERDVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	t
PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMNAMEDPARAMETERFVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPARAMETERDVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERDVNVPROC) (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETPROGRAMPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPARAMETERFVNVPROC) (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGEXTPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETPROGRAMPIPELINEIVEXTPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETPROGRAMSTRINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGARBPROC) (GLenum target, GLenum pname, GLvoid *string);$/;"	t
PFNGLGETPROGRAMSTRINGNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTRINGNVPROC) (GLuint id, GLenum pname, GLubyte *program);$/;"	t
PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSUBROUTINEPARAMETERUIVNVPROC) (GLenum target, GLuint index, GLuint *param);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVARBPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VEXTPROC) (GLuint id, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVARBPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VEXTPROC) (GLuint id, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVARBPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETQUERYOBJECTUIVEXTPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSEPARABLEFILTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTEREXTPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSEPARABLEFILTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSEPARABLEFILTERPROC) (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	t
PFNGLGETSHADERINFOLOGPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEARBPROC) (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHARPENTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSHARPENTEXFUNCSGISPROC) (GLenum target, GLfloat *points);$/;"	t
PFNGLGETSTRINGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLGETSYNCIVAPPLEPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETSYNCIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXBUMPPARAMETERFVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERFVATIPROC) (GLenum pname, GLfloat *param);$/;"	t
PFNGLGETTEXBUMPPARAMETERIVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXBUMPPARAMETERIVATIPROC) (GLenum pname, GLint *param);$/;"	t
PFNGLGETTEXFILTERFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLfloat *weights);$/;"	t
PFNGLGETTEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERPOINTERVAPPLEPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETTEXTUREIMAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREIMAGEEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTURELEVELPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXTUREPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRACKMATRIXIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTRACKMATRIXIVNVPROC) (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGEXTPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGNVPROC) (GLuint program, GLuint index, GLint *location);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMBUFFERSIZEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMBUFFERSIZEEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMDVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVARBPROC) (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMI64VNVPROC) (GLuint program, GLint location, GLint64EXT *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* *uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVARBPROC) (GLhandleARB programObj, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONARBPROC) (GLhandleARB programObj, const GLcharARB *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLintptr (APIENTRYP PFNGLGETUNIFORMOFFSETEXTPROC) (GLuint program, GLint location);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLuint64EXT *params);$/;"	t
PFNGLGETUNIFORMUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVEXTPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTFVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTFVATIPROC) (GLuint id, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVARIANTARRAYOBJECTIVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTARRAYOBJECTIVATIPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETVARIANTBOOLEANVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTBOOLEANVEXTPROC) (GLuint id, GLenum value, GLboolean *data);$/;"	t
PFNGLGETVARIANTFLOATVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTFLOATVEXTPROC) (GLuint id, GLenum value, GLfloat *data);$/;"	t
PFNGLGETVARIANTINTEGERVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTINTEGERVEXTPROC) (GLuint id, GLenum value, GLint *data);$/;"	t
PFNGLGETVARIANTPOINTERVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVARIANTPOINTERVEXTPROC) (GLuint id, GLenum value, GLvoid* *data);$/;"	t
PFNGLGETVARYINGLOCATIONNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLGETVARYINGLOCATIONNVPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTFVATIPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBARRAYOBJECTIVATIPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVARBPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVNVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVARBPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVNVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVEXTPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVEXTPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVARBPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVNVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVEXTPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLI64VNVPROC) (GLuint index, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBLUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLUI64VNVPROC) (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVARBPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVNVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVIDEOCAPTUREIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTUREIVNVPROC) (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMDVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVIDEOCAPTURESTREAMIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOCAPTURESTREAMIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOI64VNVPROC) (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	t
PFNGLGETVIDEOIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOIVNVPROC) (GLuint video_slot, GLenum pname, GLint *params);$/;"	t
PFNGLGETVIDEOUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUI64VNVPROC) (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	t
PFNGLGETVIDEOUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGETVIDEOUIVNVPROC) (GLuint video_slot, GLenum pname, GLuint *params);$/;"	t
PFNGLGLOBALALPHAFACTORBSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORBSUNPROC) (GLbyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORDSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORDSUNPROC) (GLdouble factor);$/;"	t
PFNGLGLOBALALPHAFACTORFSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORFSUNPROC) (GLfloat factor);$/;"	t
PFNGLGLOBALALPHAFACTORISUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORISUNPROC) (GLint factor);$/;"	t
PFNGLGLOBALALPHAFACTORSSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORSSUNPROC) (GLshort factor);$/;"	t
PFNGLGLOBALALPHAFACTORUBSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUBSUNPROC) (GLubyte factor);$/;"	t
PFNGLGLOBALALPHAFACTORUISUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUISUNPROC) (GLuint factor);$/;"	t
PFNGLGLOBALALPHAFACTORUSSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLGLOBALALPHAFACTORUSSUNPROC) (GLushort factor);$/;"	t
PFNGLHINTPGIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLHINTPGIPROC) (GLenum target, GLint mode);$/;"	t
PFNGLHISTOGRAMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMEXTPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLHISTOGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLHISTOGRAMPROC) (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLIGLOOINTERFACESGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIGLOOINTERFACESGIXPROC) (GLenum pname, const GLvoid *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFHPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFHPPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERFVHPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERFVHPPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIHPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIHPPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLIMAGETRANSFORMPARAMETERIVHPPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLIMAGETRANSFORMPARAMETERIVHPPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLINDEXFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLINDEXFUNCEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXFUNCEXTPROC) (GLenum func, GLclampf ref);$/;"	t
PFNGLINDEXMATERIALEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLINDEXPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLINDEXPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINDEXPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLINSERTCOMPONENTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINSERTCOMPONENTEXTPROC) (GLuint res, GLuint src, GLuint num);$/;"	t
PFNGLINSERTEVENTMARKEREXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLINSERTEVENTMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLINSTRUMENTSBUFFERSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLINSTRUMENTSBUFFERSGIXPROC) (GLsizei size, GLint *buffer);$/;"	t
PFNGLISASYNCMARKERSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISASYNCMARKERSGIXPROC) (GLuint marker);$/;"	t
PFNGLISBUFFERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERARBPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLISENABLEDINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDINDEXEDEXTPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFENCENVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISFENCENVPROC) (GLuint fence);$/;"	t
PFNGLISFRAMEBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFEREXTPROC) (GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISNAMEAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEAMDPROC) (GLenum identifier, GLuint name);$/;"	t
PFNGLISNAMEDBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDBUFFERRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLISOCCLUSIONQUERYNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISOCCLUSIONQUERYNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMARBPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMNVPROC) (GLuint id);$/;"	t
PFNGLISPROGRAMPIPELINEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYARBPROC) (GLuint id);$/;"	t
PFNGLISQUERYEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISQUERYEXTPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFEREXTPROC) (GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSHADERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISSYNCAPPLEPROC) (GLsync sync);$/;"	t
PFNGLISSYNCPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREEXTPROC) (GLuint texture);$/;"	t
PFNGLISTRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKNVPROC) (GLuint id);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVARIANTENABLEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISVARIANTENABLEDEXTPROC) (GLuint id, GLenum cap);$/;"	t
PFNGLISVERTEXARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYAPPLEPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLISVERTEXARRAYOESPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLISVERTEXATTRIBENABLEDAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXATTRIBENABLEDAPPLEPROC) (GLuint index, GLenum pname);$/;"	t
PFNGLLABELOBJECTEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLLABELOBJECTEXTPROC) (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	t
PFNGLLIGHTENVISGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLIGHTENVISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLLINKPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLLINKPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLISTPARAMETERFSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFSGIXPROC) (GLuint list, GLenum pname, GLfloat param);$/;"	t
PFNGLLISTPARAMETERFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERFVSGIXPROC) (GLuint list, GLenum pname, const GLfloat *params);$/;"	t
PFNGLLISTPARAMETERISGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERISGIXPROC) (GLuint list, GLenum pname, GLint param);$/;"	t
PFNGLLISTPARAMETERIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLISTPARAMETERIVSGIXPROC) (GLuint list, GLenum pname, const GLint *params);$/;"	t
PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADIDENTITYDEFORMATIONMAPSGIXPROC) (GLbitfield mask);$/;"	t
PFNGLLOADPROGRAMNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADPROGRAMNVPROC) (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLLOADTRANSPOSEMATRIXFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOADTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLLOCKARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLLOCKARRAYSEXTPROC) (GLint first, GLsizei count);$/;"	t
PFNGLMAKEBUFFERNONRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERNONRESIDENTNVPROC) (GLenum target);$/;"	t
PFNGLMAKEBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAKEBUFFERRESIDENTNVPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERNONRESIDENTNVPROC) (GLuint buffer);$/;"	t
PFNGLMAKENAMEDBUFFERRESIDENTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAKENAMEDBUFFERRESIDENTNVPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPBUFFERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERARBPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFEROESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFEROESPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void* (GL_APIENTRYP PFNGLMAPBUFFERRANGEEXTPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPCONTROLPOINTSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPCONTROLPOINTSNVPROC) (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	t
PFNGLMAPNAMEDBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPNAMEDBUFFEREXTPROC) (GLuint buffer, GLenum access);$/;"	t
PFNGLMAPNAMEDBUFFERRANGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPNAMEDBUFFERRANGEEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLMAPPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERFVNVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMAPPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPPARAMETERIVNVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMAPVERTEXATTRIB1DAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB1FAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB1FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	t
PFNGLMAPVERTEXATTRIB2DAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2DAPPLEPROC) (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	t
PFNGLMAPVERTEXATTRIB2FAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMAPVERTEXATTRIB2FAPPLEPROC) (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	t
PFNGLMATRIXFRUSTUMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXFRUSTUMEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXINDEXPOINTERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMATRIXINDEXUBVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUBVARBPROC) (GLint size, const GLubyte *indices);$/;"	t
PFNGLMATRIXINDEXUIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUIVARBPROC) (GLint size, const GLuint *indices);$/;"	t
PFNGLMATRIXINDEXUSVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXINDEXUSVARBPROC) (GLint size, const GLushort *indices);$/;"	t
PFNGLMATRIXLOADDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXLOADIDENTITYEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADIDENTITYEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXLOADTRANSPOSEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXLOADTRANSPOSEFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXLOADTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEDEXTPROC) (GLenum mode, const GLdouble *m);$/;"	t
PFNGLMATRIXMULTTRANSPOSEFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXMULTTRANSPOSEFEXTPROC) (GLenum mode, const GLfloat *m);$/;"	t
PFNGLMATRIXORTHOEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXORTHOEXTPROC) (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	t
PFNGLMATRIXPOPEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXPOPEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXPUSHEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXPUSHEXTPROC) (GLenum mode);$/;"	t
PFNGLMATRIXROTATEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEDEXTPROC) (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXROTATEFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXROTATEFEXTPROC) (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXSCALEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXSCALEFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXSCALEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMATRIXTRANSLATEDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEDEXTPROC) (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLMATRIXTRANSLATEFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMATRIXTRANSLATEFEXTPROC) (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLMEMORYBARRIEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIEREXTPROC) (GLbitfield barriers);$/;"	t
PFNGLMINMAXEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMINMAXEXTPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINMAXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMINMAXPROC) (GLenum target, GLenum internalformat, GLboolean sink);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLclampf value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLclampf value);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWARRAYSEXTPROC) (GLenum mode, GLint *first, GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTARRAYAPPLEPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLMULTIDRAWELEMENTSEXTPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	t
PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWRANGEELEMENTARRAYAPPLEPROC) (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	t
PFNGLMULTIMODEDRAWARRAYSIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWARRAYSIBMPROC) (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTIMODEDRAWELEMENTSIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTIMODEDRAWELEMENTSIBMPROC) (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	t
PFNGLMULTITEXBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXBUFFEREXTPROC) (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLMULTITEXCOORD1DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DARBPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DPROC) (GLenum target, GLdouble s);$/;"	t
PFNGLMULTITEXCOORD1DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD1FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FARBPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FPROC) (GLenum target, GLfloat s);$/;"	t
PFNGLMULTITEXCOORD1FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD1HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HNVPROC) (GLenum target, GLhalfNV s);$/;"	t
PFNGLMULTITEXCOORD1HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD1IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IARBPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IPROC) (GLenum target, GLint s);$/;"	t
PFNGLMULTITEXCOORD1IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD1SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SARBPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SPROC) (GLenum target, GLshort s);$/;"	t
PFNGLMULTITEXCOORD1SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD1SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD1SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DARBPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DPROC) (GLenum target, GLdouble s, GLdouble t);$/;"	t
PFNGLMULTITEXCOORD2DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD2FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FARBPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FPROC) (GLenum target, GLfloat s, GLfloat t);$/;"	t
PFNGLMULTITEXCOORD2FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD2HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLMULTITEXCOORD2HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD2IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IARBPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IPROC) (GLenum target, GLint s, GLint t);$/;"	t
PFNGLMULTITEXCOORD2IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD2SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SARBPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SPROC) (GLenum target, GLshort s, GLshort t);$/;"	t
PFNGLMULTITEXCOORD2SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD2SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD2SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	t
PFNGLMULTITEXCOORD3DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD3FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	t
PFNGLMULTITEXCOORD3FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLMULTITEXCOORD3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD3IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IARBPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IPROC) (GLenum target, GLint s, GLint t, GLint r);$/;"	t
PFNGLMULTITEXCOORD3IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD3SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SPROC) (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	t
PFNGLMULTITEXCOORD3SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD3SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD3SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DARBPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DPROC) (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	t
PFNGLMULTITEXCOORD4DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVARBPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4DVPROC) (GLenum target, const GLdouble *v);$/;"	t
PFNGLMULTITEXCOORD4FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FARBPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FPROC) (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	t
PFNGLMULTITEXCOORD4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVARBPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4FVPROC) (GLenum target, const GLfloat *v);$/;"	t
PFNGLMULTITEXCOORD4HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HNVPROC) (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLMULTITEXCOORD4HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4HVNVPROC) (GLenum target, const GLhalfNV *v);$/;"	t
PFNGLMULTITEXCOORD4IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IARBPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IPROC) (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	t
PFNGLMULTITEXCOORD4IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVARBPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4IVPROC) (GLenum target, const GLint *v);$/;"	t
PFNGLMULTITEXCOORD4SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SARBPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SPROC) (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	t
PFNGLMULTITEXCOORD4SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVARBPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORD4SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORD4SVPROC) (GLenum target, const GLshort *v);$/;"	t
PFNGLMULTITEXCOORDP1UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP1UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDPOINTEREXTPROC) (GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLMULTITEXENVFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXENVFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXENVIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXENVIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXENVIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXGENDEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	t
PFNGLMULTITEXGENDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENDVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	t
PFNGLMULTITEXGENFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXGENFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENFVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXGENIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXGENIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXGENIVEXTPROC) (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLMULTITEXPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERFVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLMULTITEXPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIEXTPROC) (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLMULTITEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIUIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLMULTITEXPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXPARAMETERIVEXTPROC) (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLMULTITEXRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXRENDERBUFFEREXTPROC) (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLMULTITEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE1DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE2DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTITEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTITEXSUBIMAGE3DEXTPROC) (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDARBPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXDPROC) (const GLdouble *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFARBPROC) (const GLfloat *m);$/;"	t
PFNGLMULTTRANSPOSEMATRIXFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLMULTTRANSPOSEMATRIXFPROC) (const GLfloat *m);$/;"	t
PFNGLNAMEDBUFFERDATAEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLNAMEDBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDCOPYBUFFERSUBDATAEXTPROC) (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERRENDERBUFFEREXTPROC) (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE1DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE2DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURE3DEXTPROC) (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTUREFACEEXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	t
PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERTEXTURELAYEREXTPROC) (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DEXTPROC) (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4DVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FEXTPROC) (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETER4FVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IEXTPROC) (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIEXTPROC) (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4IVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMLOCALPARAMETERSI4UIVEXTPROC) (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLNAMEDPROGRAMSTRINGEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDPROGRAMSTRINGEXTPROC) (GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEEXTPROC) (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLECOVERAGEEXTPROC) (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLNAMEDSTRINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNEWOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLuint (APIENTRYP PFNGLNEWOBJECTBUFFERATIPROC) (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	t
PFNGLNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FSUNPROC) (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLNORMAL3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3HNVPROC) (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	t
PFNGLNORMAL3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMAL3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLNORMALFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALFORMATNVPROC) (GLenum type, GLsizei stride);$/;"	t
PFNGLNORMALP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLNORMALP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLNORMALPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTEREXTPROC) (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLNORMALPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERLISTIBMPROC) (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLNORMALPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALPOINTERVINTELPROC) (GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLNORMALSTREAM3BATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BATIPROC) (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	t
PFNGLNORMALSTREAM3BVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3BVATIPROC) (GLenum stream, const GLbyte *coords);$/;"	t
PFNGLNORMALSTREAM3DATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DATIPROC) (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	t
PFNGLNORMALSTREAM3DVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLNORMALSTREAM3FATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FATIPROC) (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	t
PFNGLNORMALSTREAM3FVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLNORMALSTREAM3IATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IATIPROC) (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	t
PFNGLNORMALSTREAM3IVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLNORMALSTREAM3SATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SATIPROC) (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	t
PFNGLNORMALSTREAM3SVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLNORMALSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLOBJECTLABELPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPURGEABLEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLOBJECTUNPURGEABLEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLOBJECTUNPURGEABLEAPPLEPROC) (GLenum objectType, GLuint name, GLenum option);$/;"	t
PFNGLPASSTEXCOORDATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPASSTEXCOORDATIPROC) (GLuint dst, GLuint coord, GLenum swizzle);$/;"	t
PFNGLPATCHPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELDATARANGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELDATARANGENVPROC) (GLenum target, GLsizei length, GLvoid *pointer);$/;"	t
PFNGLPIXELTEXGENPARAMETERFSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTEXGENPARAMETERFVSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTEXGENPARAMETERISGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERISGISPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELTEXGENPARAMETERIVSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENPARAMETERIVSGISPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPIXELTEXGENSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTEXGENSGIXPROC) (GLenum mode);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFEXTPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERFVEXTPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIEXTPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPIXELTRANSFORMPARAMETERIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLPNTRIANGLESFATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPNTRIANGLESIATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPNTRIANGLESIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFARBPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFEXTPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFSGISPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVARBPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVEXTPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVSGISPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERINVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERINVPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVNVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOLLASYNCSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLPOLLASYNCSGIXPROC) (GLuint *markerp);$/;"	t
PFNGLPOLLINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLint (APIENTRYP PFNGLPOLLINSTRUMENTSSGIXPROC) (GLint *marker_p);$/;"	t
PFNGLPOLYGONOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETEXTPROC) (GLfloat factor, GLfloat bias);$/;"	t
PFNGLPOPDEBUGGROUPPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPOPGROUPMARKEREXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPOPGROUPMARKEREXTPROC) (void);$/;"	t
PFNGLPRESENTFRAMEDUALFILLNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEDUALFILLNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	t
PFNGLPRESENTFRAMEKEYEDNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRESENTFRAMEKEYEDNVPROC) (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	t
PFNGLPRIMITIVERESTARTINDEXNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXNVPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTNVPROC) (void);$/;"	t
PFNGLPRIORITIZETEXTURESEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPRIORITIZETEXTURESEXTPROC) (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	t
PFNGLPROGRAMBINARYOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMBINARYOESPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLint length);$/;"	t
PFNGLPROGRAMBINARYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSFVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMBUFFERPARAMETERSIUIVNVPROC) (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMENVPARAMETER4DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMENVPARAMETER4FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMENVPARAMETER4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4INVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4IVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UINVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMENVPARAMETERI4UIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERS4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4IVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMENVPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DARBPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4DVARBPROC) (GLenum target, GLuint index, const GLdouble *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FARBPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMLOCALPARAMETER4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETER4FVARBPROC) (GLenum target, GLuint index, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4INVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4INVPROC) (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4IVNVPROC) (GLenum target, GLuint index, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UINVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UINVPROC) (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERI4UIVNVPROC) (GLenum target, GLuint index, const GLuint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERS4FVEXTPROC) (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4IVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	t
PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMLOCALPARAMETERSI4UIVNVPROC) (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4DVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FNVPROC) (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMNAMEDPARAMETER4FVNVPROC) (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETER4DNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DNVPROC) (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMPARAMETER4DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4DVNVPROC) (GLenum target, GLuint index, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETER4FNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FNVPROC) (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMPARAMETER4FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETER4FVNVPROC) (GLenum target, GLuint index, const GLfloat *v);$/;"	t
PFNGLPROGRAMPARAMETERIARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIARBPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMPARAMETERIEXTPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERS4DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4DVNVPROC) (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	t
PFNGLPROGRAMPARAMETERS4FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERS4FVNVPROC) (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	t
PFNGLPROGRAMSTRINGARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMSTRINGARBPROC) (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	t
PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMSUBROUTINEPARAMETERSUIVNVPROC) (GLenum target, GLsizei count, const GLuint *params);$/;"	t
PFNGLPROGRAMUNIFORM1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DEXTPROC) (GLuint program, GLint location, GLdouble x);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FEXTPROC) (GLuint program, GLint location, GLfloat x);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64NVPROC) (GLuint program, GLint location, GLint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IEXTPROC) (GLuint program, GLint location, GLint x);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM1IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x);$/;"	t
PFNGLPROGRAMUNIFORM1UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIEXTPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FEXTPROC) (GLuint program, GLint location, GLfloat x, GLfloat y);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IEXTPROC) (GLuint program, GLint location, GLint x, GLint y);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM2IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLPROGRAMUNIFORM2UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FEXTPROC) (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IEXTPROC) (GLuint program, GLint location, GLint x, GLint y, GLint z);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM3IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLPROGRAMUNIFORM3UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DEXTPROC) (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FEXTPROC) (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4FVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64NVPROC) (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4I64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IEXTPROC) (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORM4IVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64NVPROC) (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLPROGRAMUNIFORM4UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIEXTPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVEXTPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVEXTPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMUI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64NVPROC) (GLuint program, GLint location, GLuint64EXT value);$/;"	t
PFNGLPROGRAMUNIFORMUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMUI64VNVPROC) (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLPROGRAMVERTEXLIMITNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROGRAMVERTEXLIMITNVPROC) (GLenum target, GLint limit);$/;"	t
PFNGLPROVOKINGVERTEXEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXEXTPROC) (GLenum mode);$/;"	t
PFNGLPROVOKINGVERTEXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLPUSHCLIENTATTRIBDEFAULTEXTPROC) (GLbitfield mask);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHGROUPMARKEREXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLPUSHGROUPMARKEREXTPROC) (GLsizei length, const GLchar *marker);$/;"	t
PFNGLQUERYCOUNTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLREADBUFFERINDEXEDEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERINDEXEDEXTPROC) (GLenum src, GLint index);$/;"	t
PFNGLREADBUFFERNVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLREADBUFFERNVPROC) (GLenum mode);$/;"	t
PFNGLREADINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREADINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLREADNPIXELSARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	t
PFNGLREADNPIXELSEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLREADNPIXELSEXTPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	t
PFNGLREFERENCEPLANESGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREFERENCEPLANESGIXPROC) (const GLdouble *equation);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEANGLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEAPPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLECOVERAGENVPROC) (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEEXTPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEIMGPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLREPLACEMENTCODEPOINTERSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEPOINTERSUNPROC) (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	t
PFNGLREPLACEMENTCODEUBSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBSUNPROC) (GLubyte code);$/;"	t
PFNGLREPLACEMENTCODEUBVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUBVSUNPROC) (const GLubyte *code);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FSUNPROC) (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUICOLOR4UBVERTEX3FVSUNPROC) (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUINORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUISUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUISUNPROC) (GLuint code);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FSUNPROC) (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUITEXCOORD2FVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FSUNPROC) (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVERTEX3FVSUNPROC) (const GLuint *rc, const GLfloat *v);$/;"	t
PFNGLREPLACEMENTCODEUIVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUIVSUNPROC) (const GLuint *code);$/;"	t
PFNGLREPLACEMENTCODEUSSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSSUNPROC) (GLushort code);$/;"	t
PFNGLREPLACEMENTCODEUSVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREPLACEMENTCODEUSVSUNPROC) (const GLushort *code);$/;"	t
PFNGLREQUESTRESIDENTPROGRAMSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLREQUESTRESIDENTPROGRAMSNVPROC) (GLsizei n, const GLuint *programs);$/;"	t
PFNGLRESETHISTOGRAMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMEXTPROC) (GLenum target);$/;"	t
PFNGLRESETHISTOGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETHISTOGRAMPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXEXTPROC) (GLenum target);$/;"	t
PFNGLRESETMINMAXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESETMINMAXPROC) (GLenum target);$/;"	t
PFNGLRESIZEBUFFERSMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESIZEBUFFERSMESAPROC) (void);$/;"	t
PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLRESOLVEMULTISAMPLEFRAMEBUFFERAPPLEPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKNVPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEARBPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMAPATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMAPATIPROC) (GLuint dst, GLuint interp, GLenum swizzle);$/;"	t
PFNGLSAMPLEMASKEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKEXTPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKINDEXEDNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKINDEXEDNVPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKSGISPROC) (GLclampf value, GLboolean invert);$/;"	t
PFNGLSAMPLEPATTERNEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNEXTPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLEPATTERNSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLEPATTERNSGISPROC) (GLenum pattern);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCISSORARRAYVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSORINDEXEDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3BEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BEXTPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BPROC) (GLbyte red, GLbyte green, GLbyte blue);$/;"	t
PFNGLSECONDARYCOLOR3BVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3BVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3BVPROC) (const GLbyte *v);$/;"	t
PFNGLSECONDARYCOLOR3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DEXTPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DPROC) (GLdouble red, GLdouble green, GLdouble blue);$/;"	t
PFNGLSECONDARYCOLOR3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3DVPROC) (const GLdouble *v);$/;"	t
PFNGLSECONDARYCOLOR3FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FEXTPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FPROC) (GLfloat red, GLfloat green, GLfloat blue);$/;"	t
PFNGLSECONDARYCOLOR3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3FVPROC) (const GLfloat *v);$/;"	t
PFNGLSECONDARYCOLOR3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HNVPROC) (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	t
PFNGLSECONDARYCOLOR3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLSECONDARYCOLOR3IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IEXTPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IPROC) (GLint red, GLint green, GLint blue);$/;"	t
PFNGLSECONDARYCOLOR3IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3IVPROC) (const GLint *v);$/;"	t
PFNGLSECONDARYCOLOR3SEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SEXTPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SPROC) (GLshort red, GLshort green, GLshort blue);$/;"	t
PFNGLSECONDARYCOLOR3SVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3SVPROC) (const GLshort *v);$/;"	t
PFNGLSECONDARYCOLOR3UBEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBEXTPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBPROC) (GLubyte red, GLubyte green, GLubyte blue);$/;"	t
PFNGLSECONDARYCOLOR3UBVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVEXTPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UBVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UBVPROC) (const GLubyte *v);$/;"	t
PFNGLSECONDARYCOLOR3UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIEXTPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIPROC) (GLuint red, GLuint green, GLuint blue);$/;"	t
PFNGLSECONDARYCOLOR3UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVEXTPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3UIVPROC) (const GLuint *v);$/;"	t
PFNGLSECONDARYCOLOR3USEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USEXTPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USPROC) (GLushort red, GLushort green, GLushort blue);$/;"	t
PFNGLSECONDARYCOLOR3USVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVEXTPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLOR3USVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLOR3USVPROC) (const GLushort *v);$/;"	t
PFNGLSECONDARYCOLORFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLSECONDARYCOLORP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLSECONDARYCOLORP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLSECONDARYCOLORPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSECONDARYCOLORPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLSECONDARYCOLORPOINTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORPOINTERPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	t
PFNGLSELECTPERFMONITORCOUNTERSAMDPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLSELECTPERFMONITORCOUNTERSAMDPROC) (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *countersList);$/;"	t
PFNGLSEPARABLEFILTER2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DEXTPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSEPARABLEFILTER2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSEPARABLEFILTER2DPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	t
PFNGLSETFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLSETFENCENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFENCENVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLSETFENCENVPROC) (GLuint fence, GLenum condition);$/;"	t
PFNGLSETFRAGMENTSHADERCONSTANTATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETFRAGMENTSHADERCONSTANTATIPROC) (GLuint dst, const GLfloat *value);$/;"	t
PFNGLSETINVARIANTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETINVARIANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSETLOCALCONSTANTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSETLOCALCONSTANTEXTPROC) (GLuint id, GLenum type, const GLvoid *addr);$/;"	t
PFNGLSHADERBINARYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLSHADEROP1EXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADEROP1EXTPROC) (GLenum op, GLuint res, GLuint arg1);$/;"	t
PFNGLSHADEROP2EXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADEROP2EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	t
PFNGLSHADEROP3EXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADEROP3EXTPROC) (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	t
PFNGLSHADERSOURCEARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEARBPROC) (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);$/;"	t
PFNGLSHARPENTEXFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSHARPENTEXFUNCSGISPROC) (GLenum target, GLsizei n, const GLfloat *points);$/;"	t
PFNGLSPRITEPARAMETERFSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFSGIXPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLSPRITEPARAMETERFVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERFVSGIXPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLSPRITEPARAMETERISGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERISGIXPROC) (GLenum pname, GLint param);$/;"	t
PFNGLSPRITEPARAMETERIVSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSPRITEPARAMETERIVSGIXPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLSTARTINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTARTINSTRUMENTSSGIXPROC) (void);$/;"	t
PFNGLSTARTTILINGQCOMPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLSTARTTILINGQCOMPROC) (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);$/;"	t
PFNGLSTENCILCLEARTAGEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILCLEARTAGEXTPROC) (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	t
PFNGLSTENCILFUNCSEPARATEATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEATIPROC) (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPSEPARATEATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEATIPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTOPINSTRUMENTSSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTOPINSTRUMENTSSGIXPROC) (GLint marker);$/;"	t
PFNGLSTRINGMARKERGREMEDYPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSTRINGMARKERGREMEDYPROC) (GLsizei len, const GLvoid *string);$/;"	t
PFNGLSWIZZLEEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLSWIZZLEEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
PFNGLTAGSAMPLEBUFFERSGIXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTAGSAMPLEBUFFERSGIXPROC) (void);$/;"	t
PFNGLTANGENT3BEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3BEXTPROC) (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	t
PFNGLTANGENT3BVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3BVEXTPROC) (const GLbyte *v);$/;"	t
PFNGLTANGENT3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3DEXTPROC) (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	t
PFNGLTANGENT3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3DVEXTPROC) (const GLdouble *v);$/;"	t
PFNGLTANGENT3FEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3FEXTPROC) (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	t
PFNGLTANGENT3FVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3FVEXTPROC) (const GLfloat *v);$/;"	t
PFNGLTANGENT3IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3IEXTPROC) (GLint tx, GLint ty, GLint tz);$/;"	t
PFNGLTANGENT3IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3IVEXTPROC) (const GLint *v);$/;"	t
PFNGLTANGENT3SEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3SEXTPROC) (GLshort tx, GLshort ty, GLshort tz);$/;"	t
PFNGLTANGENT3SVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENT3SVEXTPROC) (const GLshort *v);$/;"	t
PFNGLTANGENTPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTANGENTPOINTEREXTPROC) (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLTBUFFERMASK3DFXPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTBUFFERMASK3DFXPROC) (GLuint mask);$/;"	t
PFNGLTESSELLATIONFACTORAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONFACTORAMDPROC) (GLfloat factor);$/;"	t
PFNGLTESSELLATIONMODEAMDPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTESSELLATIONMODEAMDPROC) (GLenum mode);$/;"	t
PFNGLTESTFENCEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCEAPPLEPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTFENCENVPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLTESTFENCENVPROC) (GLuint fence);$/;"	t
PFNGLTESTOBJECTAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLTESTOBJECTAPPLEPROC) (GLenum object, GLuint name);$/;"	t
PFNGLTEXBUFFERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERARBPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUFFEREXTPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUMPPARAMETERFVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERFVATIPROC) (GLenum pname, const GLfloat *param);$/;"	t
PFNGLTEXBUMPPARAMETERIVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXBUMPPARAMETERIVATIPROC) (GLenum pname, const GLint *param);$/;"	t
PFNGLTEXCOORD1HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HNVPROC) (GLhalfNV s);$/;"	t
PFNGLTEXCOORD1HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD1HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FCOLOR4UBVERTEX3FVSUNPROC) (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FNORMAL3FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2FVERTEX3FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FSUNPROC) (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLTEXCOORD2FVERTEX3FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2FVERTEX3FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD2HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HNVPROC) (GLhalfNV s, GLhalfNV t);$/;"	t
PFNGLTEXCOORD2HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	t
PFNGLTEXCOORD3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FCOLOR4FNORMAL3FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4FVERTEX4FSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FSUNPROC) (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLTEXCOORD4FVERTEX4FVSUNPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4FVERTEX4FVSUNPROC) (const GLfloat *tc, const GLfloat *v);$/;"	t
PFNGLTEXCOORD4HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HNVPROC) (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	t
PFNGLTEXCOORD4HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORD4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLTEXCOORDFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLTEXCOORDP1UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP1UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLTEXCOORDPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLTEXCOORDPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXCOORDPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLTEXFILTERFUNCSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXFILTERFUNCSGISPROC) (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DEXTPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXIMAGE3DOESPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE4DSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE4DSGISPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVEXTPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVEXTPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXRENDERBUFFERNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXRENDERBUFFERNVPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXSTORAGE1DEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE1DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE2DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXSTORAGE3DEXTPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DEXTPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DOESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXSUBIMAGE3DOESPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE4DSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE4DSGISPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREBARRIERNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREBARRIERNVPROC) (void);$/;"	t
PFNGLTEXTUREBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFEREXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXTURECOLORMASKSGISPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURECOLORMASKSGISPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLTEXTUREIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURELIGHTEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURELIGHTEXTPROC) (GLenum pname);$/;"	t
PFNGLTEXTUREMATERIALEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREMATERIALEXTPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLTEXTURENORMALEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURENORMALEXTPROC) (GLenum mode);$/;"	t
PFNGLTEXTUREPARAMETERFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXTUREPARAMETERFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERFVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXTUREPARAMETERIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIEXTPROC) (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXTUREPARAMETERIIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTUREPARAMETERIUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIUIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXTUREPARAMETERIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTUREPARAMETERIVEXTPROC) (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXTURERANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURERANGEAPPLEPROC) (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLTEXTURERENDERBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURERENDERBUFFEREXTPROC) (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESUBIMAGE1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE1DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE2DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTURESUBIMAGE3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTEXTURESUBIMAGE3DEXTPROC) (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTRACKMATRIXNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRACKMATRIXNVPROC) (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	t
PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKATTRIBSNVPROC) (GLuint count, const GLint *attribs, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKSTREAMATTRIBSNVPROC) (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSEXTPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSNVPROC) (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	t
PFNGLUNIFORM1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FARBPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64NVPROC) (GLint location, GLint64EXT x);$/;"	t
PFNGLUNIFORM1I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM1IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IARBPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64NVPROC) (GLint location, GLuint64EXT x);$/;"	t
PFNGLUNIFORM1UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM1UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIEXTPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM1UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FARBPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLUNIFORM2I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM2IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IARBPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLUNIFORM2UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM2UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIEXTPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLUNIFORM3I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM3IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLUNIFORM3UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM3UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FARBPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVARBPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64NVPROC) (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLUNIFORM4I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4I64VNVPROC) (GLint location, GLsizei count, const GLint64EXT *value);$/;"	t
PFNGLUNIFORM4IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IARBPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVARBPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64NVPROC) (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLUNIFORM4UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNIFORM4UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIEXTPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVEXTPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMBUFFEREXTPROC) (GLuint program, GLint location, GLuint buffer);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVARBPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMUI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64NVPROC) (GLint location, GLuint64EXT value);$/;"	t
PFNGLUNIFORMUI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNIFORMUI64VNVPROC) (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	t
PFNGLUNLOCKARRAYSEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNLOCKARRAYSEXTPROC) (void);$/;"	t
PFNGLUNMAPBUFFERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERARBPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFEROESPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef GLboolean (GL_APIENTRYP PFNGLUNMAPBUFFEROESPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPNAMEDBUFFEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPNAMEDBUFFEREXTPROC) (GLuint buffer);$/;"	t
PFNGLUNMAPOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUNMAPOBJECTBUFFERATIPROC) (GLuint buffer);$/;"	t
PFNGLUPDATEOBJECTBUFFERATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUPDATEOBJECTBUFFERATIPROC) (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	t
PFNGLUSEPROGRAMOBJECTARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMOBJECTARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLUSEPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLUSEPROGRAMSTAGESEXTPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSESHADERPROGRAMEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLUSESHADERPROGRAMEXTPROC) (GLenum type, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMARBPROC) (GLhandleARB programObj);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEEXTPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEEXTPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVARIANTARRAYOBJECTATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTARRAYOBJECTATIPROC) (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVARIANTBVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTBVEXTPROC) (GLuint id, const GLbyte *addr);$/;"	t
PFNGLVARIANTDVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTDVEXTPROC) (GLuint id, const GLdouble *addr);$/;"	t
PFNGLVARIANTFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTFVEXTPROC) (GLuint id, const GLfloat *addr);$/;"	t
PFNGLVARIANTIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTIVEXTPROC) (GLuint id, const GLint *addr);$/;"	t
PFNGLVARIANTPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTPOINTEREXTPROC) (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	t
PFNGLVARIANTSVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTSVEXTPROC) (GLuint id, const GLshort *addr);$/;"	t
PFNGLVARIANTUBVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTUBVEXTPROC) (GLuint id, const GLubyte *addr);$/;"	t
PFNGLVARIANTUIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTUIVEXTPROC) (GLuint id, const GLuint *addr);$/;"	t
PFNGLVARIANTUSVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVARIANTUSVEXTPROC) (GLuint id, const GLushort *addr);$/;"	t
PFNGLVDPAUFININVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUFININVPROC) (void);$/;"	t
PFNGLVDPAUGETSURFACEIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUGETSURFACEIVNVPROC) (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLVDPAUINITNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUINITNVPROC) (const GLvoid *vdpDevice, const GLvoid *getProcAddress);$/;"	t
PFNGLVDPAUISSURFACENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUISSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t
PFNGLVDPAUMAPSURFACESNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUMAPSURFACESNVPROC) (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);$/;"	t
PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTEROUTPUTSURFACENVPROC) (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	t
PFNGLVDPAUREGISTERVIDEOSURFACENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLvdpauSurfaceNV (APIENTRYP PFNGLVDPAUREGISTERVIDEOSURFACENVPROC) (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	t
PFNGLVDPAUSURFACEACCESSNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUSURFACEACCESSNVPROC) (GLvdpauSurfaceNV surface, GLenum access);$/;"	t
PFNGLVDPAUUNMAPSURFACESNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUUNMAPSURFACESNVPROC) (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);$/;"	t
PFNGLVDPAUUNREGISTERSURFACENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVDPAUUNREGISTERSURFACENVPROC) (GLvdpauSurfaceNV surface);$/;"	t
PFNGLVERTEX2HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX2HNVPROC) (GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEX2HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX2HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX3HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEX3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX3HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEX4HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX4HNVPROC) (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEX4HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEX4HVNVPROC) (const GLhalfNV *v);$/;"	t
PFNGLVERTEXARRAYPARAMETERIAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYPARAMETERIAPPLEPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXARRAYRANGEAPPLEPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGEAPPLEPROC) (GLsizei length, GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYRANGENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYRANGENVPROC) (GLsizei length, const GLvoid *pointer);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLOFFSETEXTPROC) (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	t
PFNGLVERTEXATTRIB1DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DARBPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DNVPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FARBPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FNVPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HNVPROC) (GLuint index, GLhalfNV x);$/;"	t
PFNGLVERTEXATTRIB1HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB1SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SARBPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SNVPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DARBPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DNVPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FARBPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FNVPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	t
PFNGLVERTEXATTRIB2HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB2SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SARBPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SNVPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	t
PFNGLVERTEXATTRIB3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB3SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DARBPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DNVPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVARBPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVNVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FARBPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FNVPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVARBPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVNVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4HNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HNVPROC) (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	t
PFNGLVERTEXATTRIB4HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4HVNVPROC) (GLuint index, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIB4IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVARBPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVARBPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBARBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SARBPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SNVPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVARBPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVNVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBNVPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4UBVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVARBPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVNVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVARBPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVARBPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBARRAYOBJECTATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBARRAYOBJECTATIPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	t
PFNGLVERTEXATTRIBDIVISORARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORARBPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBI1IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IEXTPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIEXTPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IEXTPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIEXTPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IEXTPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVEXTPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IEXTPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVEXTPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVEXTPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVEXTPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIEXTPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVEXTPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVEXTPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBIPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DEXTPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64NVPROC) (GLuint index, GLint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL1UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64NVPROC) (GLuint index, GLuint64EXT x);$/;"	t
PFNGLVERTEXATTRIBL1UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DEXTPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL2UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	t
PFNGLVERTEXATTRIBL2UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL3UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	t
PFNGLVERTEXATTRIBL3UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4DEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DEXTPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVEXTPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4I64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64NVPROC) (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4I64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4I64VNVPROC) (GLuint index, const GLint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBL4UI64NVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64NVPROC) (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	t
PFNGLVERTEXATTRIBL4UI64VNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4UI64VNVPROC) (GLuint index, const GLuint64EXT *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATNVPROC) (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXATTRIBLPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTEREXTPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPOINTERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERARBPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERNVPROC) (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBS1DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS1FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS1HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS1SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS1SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS2DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS2FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS2HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS2SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS2SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS3DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS3FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS3HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS3SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS3SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4DVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4DVNVPROC) (GLuint index, GLsizei count, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBS4FVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4FVNVPROC) (GLuint index, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIBS4HVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4HVNVPROC) (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	t
PFNGLVERTEXATTRIBS4SVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4SVNVPROC) (GLuint index, GLsizei count, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBS4UBVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBS4UBVNVPROC) (GLuint index, GLsizei count, const GLubyte *v);$/;"	t
PFNGLVERTEXBLENDARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDARBPROC) (GLint count);$/;"	t
PFNGLVERTEXBLENDENVFATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVFATIPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLVERTEXBLENDENVIATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXBLENDENVIATIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLVERTEXFORMATNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXFORMATNVPROC) (GLint size, GLenum type, GLsizei stride);$/;"	t
PFNGLVERTEXP2UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP2UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP3UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP3UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP4UIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP4UIVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTEREXTPROC) (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	t
PFNGLVERTEXPOINTERLISTIBMPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERLISTIBMPROC) (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	t
PFNGLVERTEXPOINTERVINTELPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXPOINTERVINTELPROC) (GLint size, GLenum type, const GLvoid* *pointer);$/;"	t
PFNGLVERTEXSTREAM1DATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DATIPROC) (GLenum stream, GLdouble x);$/;"	t
PFNGLVERTEXSTREAM1DVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM1FATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FATIPROC) (GLenum stream, GLfloat x);$/;"	t
PFNGLVERTEXSTREAM1FVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM1IATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IATIPROC) (GLenum stream, GLint x);$/;"	t
PFNGLVERTEXSTREAM1IVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM1SATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SATIPROC) (GLenum stream, GLshort x);$/;"	t
PFNGLVERTEXSTREAM1SVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM1SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM2DATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DATIPROC) (GLenum stream, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXSTREAM2DVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM2FATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FATIPROC) (GLenum stream, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXSTREAM2FVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM2IATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IATIPROC) (GLenum stream, GLint x, GLint y);$/;"	t
PFNGLVERTEXSTREAM2IVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM2SATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SATIPROC) (GLenum stream, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXSTREAM2SVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM2SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM3DATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXSTREAM3DVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM3FATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXSTREAM3FVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM3IATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IATIPROC) (GLenum stream, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXSTREAM3IVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM3SATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXSTREAM3SVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM3SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXSTREAM4DATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DATIPROC) (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXSTREAM4DVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4DVATIPROC) (GLenum stream, const GLdouble *coords);$/;"	t
PFNGLVERTEXSTREAM4FATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FATIPROC) (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXSTREAM4FVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4FVATIPROC) (GLenum stream, const GLfloat *coords);$/;"	t
PFNGLVERTEXSTREAM4IATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IATIPROC) (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXSTREAM4IVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4IVATIPROC) (GLenum stream, const GLint *coords);$/;"	t
PFNGLVERTEXSTREAM4SATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SATIPROC) (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXSTREAM4SVATIPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXSTREAM4SVATIPROC) (GLenum stream, const GLshort *coords);$/;"	t
PFNGLVERTEXWEIGHTFEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFEXTPROC) (GLfloat weight);$/;"	t
PFNGLVERTEXWEIGHTFVEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTFVEXTPROC) (const GLfloat *weight);$/;"	t
PFNGLVERTEXWEIGHTHNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHNVPROC) (GLhalfNV weight);$/;"	t
PFNGLVERTEXWEIGHTHVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTHVNVPROC) (const GLhalfNV *weight);$/;"	t
PFNGLVERTEXWEIGHTPOINTEREXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVERTEXWEIGHTPOINTEREXTPROC) (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVIDEOCAPTURENVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef GLenum (APIENTRYP PFNGLVIDEOCAPTURENVPROC) (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERDVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERFVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	t
PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVIDEOCAPTURESTREAMPARAMETERIVNVPROC) (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	t
PFNGLVIEWPORTARRAYVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLWAITSYNCAPPLEPROC	/usr/include/SDL2/SDL_opengles2.h	/^typedef void (GL_APIENTRYP PFNGLWAITSYNCAPPLEPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITSYNCPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWEIGHTBVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTBVARBPROC) (GLint size, const GLbyte *weights);$/;"	t
PFNGLWEIGHTDVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTDVARBPROC) (GLint size, const GLdouble *weights);$/;"	t
PFNGLWEIGHTFVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTFVARBPROC) (GLint size, const GLfloat *weights);$/;"	t
PFNGLWEIGHTIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTIVARBPROC) (GLint size, const GLint *weights);$/;"	t
PFNGLWEIGHTPOINTERARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTPOINTERARBPROC) (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLWEIGHTSVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTSVARBPROC) (GLint size, const GLshort *weights);$/;"	t
PFNGLWEIGHTUBVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTUBVARBPROC) (GLint size, const GLubyte *weights);$/;"	t
PFNGLWEIGHTUIVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTUIVARBPROC) (GLint size, const GLuint *weights);$/;"	t
PFNGLWEIGHTUSVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWEIGHTUSVARBPROC) (GLint size, const GLushort *weights);$/;"	t
PFNGLWINDOWPOS2DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DARBPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DMESAPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DPROC) (GLdouble x, GLdouble y);$/;"	t
PFNGLWINDOWPOS2DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS2FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FARBPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FMESAPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FPROC) (GLfloat x, GLfloat y);$/;"	t
PFNGLWINDOWPOS2FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS2IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IARBPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IMESAPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IPROC) (GLint x, GLint y);$/;"	t
PFNGLWINDOWPOS2IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS2SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SARBPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SMESAPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SPROC) (GLshort x, GLshort y);$/;"	t
PFNGLWINDOWPOS2SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS2SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS2SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3DARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DARBPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DMESAPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DPROC) (GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLWINDOWPOS3DVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVARBPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3DVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3DVPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS3FARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FARBPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FMESAPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FPROC) (GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLWINDOWPOS3FVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVARBPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3FVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3FVPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS3IARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IARBPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IMESAPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IPROC) (GLint x, GLint y, GLint z);$/;"	t
PFNGLWINDOWPOS3IVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVARBPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3IVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3IVPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS3SARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SARBPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SMESAPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SPROC) (GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLWINDOWPOS3SVARBPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVARBPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS3SVPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS3SVPROC) (const GLshort *v);$/;"	t
PFNGLWINDOWPOS4DMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DMESAPROC) (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLWINDOWPOS4DVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4DVMESAPROC) (const GLdouble *v);$/;"	t
PFNGLWINDOWPOS4FMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FMESAPROC) (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLWINDOWPOS4FVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4FVMESAPROC) (const GLfloat *v);$/;"	t
PFNGLWINDOWPOS4IMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IMESAPROC) (GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLWINDOWPOS4IVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4IVMESAPROC) (const GLint *v);$/;"	t
PFNGLWINDOWPOS4SMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SMESAPROC) (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLWINDOWPOS4SVMESAPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWINDOWPOS4SVMESAPROC) (const GLshort *v);$/;"	t
PFNGLWRITEMASKEXTPROC	/usr/include/SDL2/SDL_opengl.h	/^typedef void (APIENTRYP PFNGLWRITEMASKEXTPROC) (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	t
RW_SEEK_CUR	/usr/include/SDL2/SDL_rwops.h	175;"	d
RW_SEEK_END	/usr/include/SDL2/SDL_rwops.h	176;"	d
RW_SEEK_SET	/usr/include/SDL2/SDL_rwops.h	174;"	d
Rloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rloss;$/;"	m	struct:SDL_PixelFormat	access:public
Rmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Rmask;$/;"	m	struct:SDL_PixelFormat	access:public
Rshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rshift;$/;"	m	struct:SDL_PixelFormat	access:public
SDLCALL	/usr/include/SDL2/begin_code.h	70;"	d
SDLCALL	/usr/include/SDL2/begin_code.h	72;"	d
SDLK_0	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_0 = '0',$/;"	e	enum:__anon69
SDLK_1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_1 = '1',$/;"	e	enum:__anon69
SDLK_2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_2 = '2',$/;"	e	enum:__anon69
SDLK_3	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_3 = '3',$/;"	e	enum:__anon69
SDLK_4	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_4 = '4',$/;"	e	enum:__anon69
SDLK_5	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_5 = '5',$/;"	e	enum:__anon69
SDLK_6	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_6 = '6',$/;"	e	enum:__anon69
SDLK_7	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_7 = '7',$/;"	e	enum:__anon69
SDLK_8	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_8 = '8',$/;"	e	enum:__anon69
SDLK_9	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_9 = '9',$/;"	e	enum:__anon69
SDLK_AC_BACK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_BACK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BACK),$/;"	e	enum:__anon69
SDLK_AC_BOOKMARKS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_BOOKMARKS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_BOOKMARKS),$/;"	e	enum:__anon69
SDLK_AC_FORWARD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_FORWARD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_FORWARD),$/;"	e	enum:__anon69
SDLK_AC_HOME	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_HOME),$/;"	e	enum:__anon69
SDLK_AC_REFRESH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_REFRESH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_REFRESH),$/;"	e	enum:__anon69
SDLK_AC_SEARCH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_SEARCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_SEARCH),$/;"	e	enum:__anon69
SDLK_AC_STOP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AC_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AC_STOP),$/;"	e	enum:__anon69
SDLK_AGAIN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AGAIN),$/;"	e	enum:__anon69
SDLK_ALTERASE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_ALTERASE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_ALTERASE),$/;"	e	enum:__anon69
SDLK_AMPERSAND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AMPERSAND = '&',$/;"	e	enum:__anon69
SDLK_APPLICATION	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_APPLICATION = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_APPLICATION),$/;"	e	enum:__anon69
SDLK_ASTERISK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_ASTERISK = '*',$/;"	e	enum:__anon69
SDLK_AT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AT = '@',$/;"	e	enum:__anon69
SDLK_AUDIOMUTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOMUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOMUTE),$/;"	e	enum:__anon69
SDLK_AUDIONEXT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIONEXT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIONEXT),$/;"	e	enum:__anon69
SDLK_AUDIOPLAY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOPLAY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPLAY),$/;"	e	enum:__anon69
SDLK_AUDIOPREV	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOPREV = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOPREV),$/;"	e	enum:__anon69
SDLK_AUDIOSTOP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_AUDIOSTOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_AUDIOSTOP),$/;"	e	enum:__anon69
SDLK_BACKQUOTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BACKQUOTE = '`',$/;"	e	enum:__anon69
SDLK_BACKSLASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BACKSLASH = '\\\\',$/;"	e	enum:__anon69
SDLK_BACKSPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BACKSPACE = '\\b',$/;"	e	enum:__anon69
SDLK_BRIGHTNESSDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BRIGHTNESSDOWN =$/;"	e	enum:__anon69
SDLK_BRIGHTNESSUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_BRIGHTNESSUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_BRIGHTNESSUP),$/;"	e	enum:__anon69
SDLK_CALCULATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CALCULATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CALCULATOR),$/;"	e	enum:__anon69
SDLK_CANCEL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CANCEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CANCEL),$/;"	e	enum:__anon69
SDLK_CAPSLOCK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CAPSLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CAPSLOCK),$/;"	e	enum:__anon69
SDLK_CARET	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CARET = '^',$/;"	e	enum:__anon69
SDLK_CLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEAR),$/;"	e	enum:__anon69
SDLK_CLEARAGAIN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CLEARAGAIN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CLEARAGAIN),$/;"	e	enum:__anon69
SDLK_COLON	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COLON = ':',$/;"	e	enum:__anon69
SDLK_COMMA	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COMMA = ',',$/;"	e	enum:__anon69
SDLK_COMPUTER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COMPUTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COMPUTER),$/;"	e	enum:__anon69
SDLK_COPY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_COPY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_COPY),$/;"	e	enum:__anon69
SDLK_CRSEL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CRSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CRSEL),$/;"	e	enum:__anon69
SDLK_CURRENCYSUBUNIT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CURRENCYSUBUNIT =$/;"	e	enum:__anon69
SDLK_CURRENCYUNIT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CURRENCYUNIT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CURRENCYUNIT),$/;"	e	enum:__anon69
SDLK_CUT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_CUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_CUT),$/;"	e	enum:__anon69
SDLK_DECIMALSEPARATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DECIMALSEPARATOR =$/;"	e	enum:__anon69
SDLK_DELETE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DELETE = '\\177',$/;"	e	enum:__anon69
SDLK_DISPLAYSWITCH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DISPLAYSWITCH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DISPLAYSWITCH),$/;"	e	enum:__anon69
SDLK_DOLLAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DOLLAR = '$',$/;"	e	enum:__anon69
SDLK_DOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_DOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_DOWN),$/;"	e	enum:__anon69
SDLK_EJECT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EJECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EJECT),$/;"	e	enum:__anon69
SDLK_END	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_END = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_END),$/;"	e	enum:__anon69
SDLK_EQUALS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EQUALS = '=',$/;"	e	enum:__anon69
SDLK_ESCAPE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_ESCAPE = '\\033',$/;"	e	enum:__anon69
SDLK_EXCLAIM	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EXCLAIM = '!',$/;"	e	enum:__anon69
SDLK_EXECUTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EXECUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXECUTE),$/;"	e	enum:__anon69
SDLK_EXSEL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_EXSEL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_EXSEL),$/;"	e	enum:__anon69
SDLK_F1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F1),$/;"	e	enum:__anon69
SDLK_F10	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F10 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F10),$/;"	e	enum:__anon69
SDLK_F11	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F11 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F11),$/;"	e	enum:__anon69
SDLK_F12	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F12 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F12),$/;"	e	enum:__anon69
SDLK_F13	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F13 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F13),$/;"	e	enum:__anon69
SDLK_F14	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F14 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F14),$/;"	e	enum:__anon69
SDLK_F15	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F15 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F15),$/;"	e	enum:__anon69
SDLK_F16	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F16 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F16),$/;"	e	enum:__anon69
SDLK_F17	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F17 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F17),$/;"	e	enum:__anon69
SDLK_F18	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F18 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F18),$/;"	e	enum:__anon69
SDLK_F19	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F19 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F19),$/;"	e	enum:__anon69
SDLK_F2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F2),$/;"	e	enum:__anon69
SDLK_F20	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F20 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F20),$/;"	e	enum:__anon69
SDLK_F21	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F21 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F21),$/;"	e	enum:__anon69
SDLK_F22	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F22 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F22),$/;"	e	enum:__anon69
SDLK_F23	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F23 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F23),$/;"	e	enum:__anon69
SDLK_F24	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F24 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F24),$/;"	e	enum:__anon69
SDLK_F3	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F3),$/;"	e	enum:__anon69
SDLK_F4	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F4),$/;"	e	enum:__anon69
SDLK_F5	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F5),$/;"	e	enum:__anon69
SDLK_F6	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F6),$/;"	e	enum:__anon69
SDLK_F7	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F7),$/;"	e	enum:__anon69
SDLK_F8	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F8),$/;"	e	enum:__anon69
SDLK_F9	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_F9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_F9),$/;"	e	enum:__anon69
SDLK_FIND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_FIND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_FIND),$/;"	e	enum:__anon69
SDLK_GREATER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_GREATER = '>',$/;"	e	enum:__anon69
SDLK_HASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_HASH = '#',$/;"	e	enum:__anon69
SDLK_HELP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_HELP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HELP),$/;"	e	enum:__anon69
SDLK_HOME	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_HOME = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_HOME),$/;"	e	enum:__anon69
SDLK_INSERT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_INSERT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_INSERT),$/;"	e	enum:__anon69
SDLK_KBDILLUMDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KBDILLUMDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMDOWN),$/;"	e	enum:__anon69
SDLK_KBDILLUMTOGGLE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KBDILLUMTOGGLE =$/;"	e	enum:__anon69
SDLK_KBDILLUMUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KBDILLUMUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KBDILLUMUP),$/;"	e	enum:__anon69
SDLK_KP_0	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_0 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_0),$/;"	e	enum:__anon69
SDLK_KP_00	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_00 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_00),$/;"	e	enum:__anon69
SDLK_KP_000	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_000 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_000),$/;"	e	enum:__anon69
SDLK_KP_1	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_1 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_1),$/;"	e	enum:__anon69
SDLK_KP_2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_2),$/;"	e	enum:__anon69
SDLK_KP_3	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_3 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_3),$/;"	e	enum:__anon69
SDLK_KP_4	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_4 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_4),$/;"	e	enum:__anon69
SDLK_KP_5	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_5 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_5),$/;"	e	enum:__anon69
SDLK_KP_6	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_6 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_6),$/;"	e	enum:__anon69
SDLK_KP_7	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_7 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_7),$/;"	e	enum:__anon69
SDLK_KP_8	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_8 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_8),$/;"	e	enum:__anon69
SDLK_KP_9	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_9 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_9),$/;"	e	enum:__anon69
SDLK_KP_A	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_A = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_A),$/;"	e	enum:__anon69
SDLK_KP_AMPERSAND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_AMPERSAND = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AMPERSAND),$/;"	e	enum:__anon69
SDLK_KP_AT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_AT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_AT),$/;"	e	enum:__anon69
SDLK_KP_B	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_B = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_B),$/;"	e	enum:__anon69
SDLK_KP_BACKSPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_BACKSPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BACKSPACE),$/;"	e	enum:__anon69
SDLK_KP_BINARY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_BINARY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_BINARY),$/;"	e	enum:__anon69
SDLK_KP_C	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_C = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_C),$/;"	e	enum:__anon69
SDLK_KP_CLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_CLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEAR),$/;"	e	enum:__anon69
SDLK_KP_CLEARENTRY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_CLEARENTRY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_CLEARENTRY),$/;"	e	enum:__anon69
SDLK_KP_COLON	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_COLON = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COLON),$/;"	e	enum:__anon69
SDLK_KP_COMMA	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_COMMA = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_COMMA),$/;"	e	enum:__anon69
SDLK_KP_D	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_D = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_D),$/;"	e	enum:__anon69
SDLK_KP_DBLAMPERSAND	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DBLAMPERSAND =$/;"	e	enum:__anon69
SDLK_KP_DBLVERTICALBAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DBLVERTICALBAR =$/;"	e	enum:__anon69
SDLK_KP_DECIMAL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DECIMAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DECIMAL),$/;"	e	enum:__anon69
SDLK_KP_DIVIDE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_DIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_DIVIDE),$/;"	e	enum:__anon69
SDLK_KP_E	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_E = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_E),$/;"	e	enum:__anon69
SDLK_KP_ENTER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_ENTER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_ENTER),$/;"	e	enum:__anon69
SDLK_KP_EQUALS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_EQUALS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EQUALS),$/;"	e	enum:__anon69
SDLK_KP_EQUALSAS400	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_EQUALSAS400 =$/;"	e	enum:__anon69
SDLK_KP_EXCLAM	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_EXCLAM = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_EXCLAM),$/;"	e	enum:__anon69
SDLK_KP_F	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_F = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_F),$/;"	e	enum:__anon69
SDLK_KP_GREATER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_GREATER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_GREATER),$/;"	e	enum:__anon69
SDLK_KP_HASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_HASH = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_HASH),$/;"	e	enum:__anon69
SDLK_KP_HEXADECIMAL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_HEXADECIMAL =$/;"	e	enum:__anon69
SDLK_KP_LEFTBRACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_LEFTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTBRACE),$/;"	e	enum:__anon69
SDLK_KP_LEFTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_LEFTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LEFTPAREN),$/;"	e	enum:__anon69
SDLK_KP_LESS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_LESS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_LESS),$/;"	e	enum:__anon69
SDLK_KP_MEMADD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMADD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMADD),$/;"	e	enum:__anon69
SDLK_KP_MEMCLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMCLEAR),$/;"	e	enum:__anon69
SDLK_KP_MEMDIVIDE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMDIVIDE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMDIVIDE),$/;"	e	enum:__anon69
SDLK_KP_MEMMULTIPLY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMMULTIPLY =$/;"	e	enum:__anon69
SDLK_KP_MEMRECALL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMRECALL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMRECALL),$/;"	e	enum:__anon69
SDLK_KP_MEMSTORE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMSTORE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MEMSTORE),$/;"	e	enum:__anon69
SDLK_KP_MEMSUBTRACT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MEMSUBTRACT =$/;"	e	enum:__anon69
SDLK_KP_MINUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MINUS),$/;"	e	enum:__anon69
SDLK_KP_MULTIPLY	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_MULTIPLY = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_MULTIPLY),$/;"	e	enum:__anon69
SDLK_KP_OCTAL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_OCTAL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_OCTAL),$/;"	e	enum:__anon69
SDLK_KP_PERCENT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PERCENT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERCENT),$/;"	e	enum:__anon69
SDLK_KP_PERIOD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PERIOD = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PERIOD),$/;"	e	enum:__anon69
SDLK_KP_PLUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PLUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUS),$/;"	e	enum:__anon69
SDLK_KP_PLUSMINUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_PLUSMINUS = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_PLUSMINUS),$/;"	e	enum:__anon69
SDLK_KP_POWER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_POWER),$/;"	e	enum:__anon69
SDLK_KP_RIGHTBRACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_RIGHTBRACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTBRACE),$/;"	e	enum:__anon69
SDLK_KP_RIGHTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_RIGHTPAREN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_RIGHTPAREN),$/;"	e	enum:__anon69
SDLK_KP_SPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_SPACE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_SPACE),$/;"	e	enum:__anon69
SDLK_KP_TAB	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_TAB = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_TAB),$/;"	e	enum:__anon69
SDLK_KP_VERTICALBAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_VERTICALBAR =$/;"	e	enum:__anon69
SDLK_KP_XOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_KP_XOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_KP_XOR),$/;"	e	enum:__anon69
SDLK_LALT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LALT),$/;"	e	enum:__anon69
SDLK_LCTRL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LCTRL),$/;"	e	enum:__anon69
SDLK_LEFT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LEFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LEFT),$/;"	e	enum:__anon69
SDLK_LEFTBRACKET	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LEFTBRACKET = '[',$/;"	e	enum:__anon69
SDLK_LEFTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LEFTPAREN = '(',$/;"	e	enum:__anon69
SDLK_LESS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LESS = '<',$/;"	e	enum:__anon69
SDLK_LGUI	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LGUI),$/;"	e	enum:__anon69
SDLK_LSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_LSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_LSHIFT),$/;"	e	enum:__anon69
SDLK_MAIL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MAIL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MAIL),$/;"	e	enum:__anon69
SDLK_MEDIASELECT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MEDIASELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MEDIASELECT),$/;"	e	enum:__anon69
SDLK_MENU	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MENU = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MENU),$/;"	e	enum:__anon69
SDLK_MINUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MINUS = '-',$/;"	e	enum:__anon69
SDLK_MODE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MODE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MODE),$/;"	e	enum:__anon69
SDLK_MUTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_MUTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_MUTE),$/;"	e	enum:__anon69
SDLK_NUMLOCKCLEAR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_NUMLOCKCLEAR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_NUMLOCKCLEAR),$/;"	e	enum:__anon69
SDLK_OPER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_OPER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OPER),$/;"	e	enum:__anon69
SDLK_OUT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_OUT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_OUT),$/;"	e	enum:__anon69
SDLK_PAGEDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PAGEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEDOWN),$/;"	e	enum:__anon69
SDLK_PAGEUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PAGEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAGEUP),$/;"	e	enum:__anon69
SDLK_PASTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PASTE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PASTE),$/;"	e	enum:__anon69
SDLK_PAUSE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PAUSE = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PAUSE),$/;"	e	enum:__anon69
SDLK_PERCENT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PERCENT = '%',$/;"	e	enum:__anon69
SDLK_PERIOD	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PERIOD = '.',$/;"	e	enum:__anon69
SDLK_PLUS	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PLUS = '+',$/;"	e	enum:__anon69
SDLK_POWER	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_POWER = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_POWER),$/;"	e	enum:__anon69
SDLK_PRINTSCREEN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PRINTSCREEN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRINTSCREEN),$/;"	e	enum:__anon69
SDLK_PRIOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_PRIOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_PRIOR),$/;"	e	enum:__anon69
SDLK_QUESTION	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_QUESTION = '?',$/;"	e	enum:__anon69
SDLK_QUOTE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_QUOTE = '\\'',$/;"	e	enum:__anon69
SDLK_QUOTEDBL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_QUOTEDBL = '"',$/;"	e	enum:__anon69
SDLK_RALT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RALT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RALT),$/;"	e	enum:__anon69
SDLK_RCTRL	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RCTRL = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RCTRL),$/;"	e	enum:__anon69
SDLK_RETURN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RETURN = '\\r',$/;"	e	enum:__anon69
SDLK_RETURN2	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RETURN2 = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RETURN2),$/;"	e	enum:__anon69
SDLK_RGUI	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RGUI = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RGUI),$/;"	e	enum:__anon69
SDLK_RIGHT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RIGHT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RIGHT),$/;"	e	enum:__anon69
SDLK_RIGHTBRACKET	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RIGHTBRACKET = ']',$/;"	e	enum:__anon69
SDLK_RIGHTPAREN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RIGHTPAREN = ')',$/;"	e	enum:__anon69
SDLK_RSHIFT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_RSHIFT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_RSHIFT),$/;"	e	enum:__anon69
SDLK_SCANCODE_MASK	/usr/include/SDL2/SDL_keycode.h	44;"	d
SDLK_SCROLLLOCK	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SCROLLLOCK = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SCROLLLOCK),$/;"	e	enum:__anon69
SDLK_SELECT	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SELECT = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SELECT),$/;"	e	enum:__anon69
SDLK_SEMICOLON	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SEMICOLON = ';',$/;"	e	enum:__anon69
SDLK_SEPARATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SEPARATOR = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SEPARATOR),$/;"	e	enum:__anon69
SDLK_SLASH	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SLASH = '\/',$/;"	e	enum:__anon69
SDLK_SLEEP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SLEEP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SLEEP)$/;"	e	enum:__anon69
SDLK_SPACE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SPACE = ' ',$/;"	e	enum:__anon69
SDLK_STOP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_STOP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_STOP),$/;"	e	enum:__anon69
SDLK_SYSREQ	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_SYSREQ = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_SYSREQ),$/;"	e	enum:__anon69
SDLK_TAB	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_TAB = '\\t',$/;"	e	enum:__anon69
SDLK_THOUSANDSSEPARATOR	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_THOUSANDSSEPARATOR =$/;"	e	enum:__anon69
SDLK_UNDERSCORE	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UNDERSCORE = '_',$/;"	e	enum:__anon69
SDLK_UNDO	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UNDO = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UNDO),$/;"	e	enum:__anon69
SDLK_UNKNOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UNKNOWN = 0,$/;"	e	enum:__anon69
SDLK_UP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_UP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_UP),$/;"	e	enum:__anon69
SDLK_VOLUMEDOWN	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_VOLUMEDOWN = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEDOWN),$/;"	e	enum:__anon69
SDLK_VOLUMEUP	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_VOLUMEUP = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_VOLUMEUP),$/;"	e	enum:__anon69
SDLK_WWW	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_WWW = SDL_SCANCODE_TO_KEYCODE(SDL_SCANCODE_WWW),$/;"	e	enum:__anon69
SDLK_a	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_a = 'a',$/;"	e	enum:__anon69
SDLK_b	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_b = 'b',$/;"	e	enum:__anon69
SDLK_c	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_c = 'c',$/;"	e	enum:__anon69
SDLK_d	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_d = 'd',$/;"	e	enum:__anon69
SDLK_e	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_e = 'e',$/;"	e	enum:__anon69
SDLK_f	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_f = 'f',$/;"	e	enum:__anon69
SDLK_g	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_g = 'g',$/;"	e	enum:__anon69
SDLK_h	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_h = 'h',$/;"	e	enum:__anon69
SDLK_i	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_i = 'i',$/;"	e	enum:__anon69
SDLK_j	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_j = 'j',$/;"	e	enum:__anon69
SDLK_k	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_k = 'k',$/;"	e	enum:__anon69
SDLK_l	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_l = 'l',$/;"	e	enum:__anon69
SDLK_m	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_m = 'm',$/;"	e	enum:__anon69
SDLK_n	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_n = 'n',$/;"	e	enum:__anon69
SDLK_o	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_o = 'o',$/;"	e	enum:__anon69
SDLK_p	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_p = 'p',$/;"	e	enum:__anon69
SDLK_q	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_q = 'q',$/;"	e	enum:__anon69
SDLK_r	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_r = 'r',$/;"	e	enum:__anon69
SDLK_s	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_s = 's',$/;"	e	enum:__anon69
SDLK_t	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_t = 't',$/;"	e	enum:__anon69
SDLK_u	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_u = 'u',$/;"	e	enum:__anon69
SDLK_v	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_v = 'v',$/;"	e	enum:__anon69
SDLK_w	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_w = 'w',$/;"	e	enum:__anon69
SDLK_x	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_x = 'x',$/;"	e	enum:__anon69
SDLK_y	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_y = 'y',$/;"	e	enum:__anon69
SDLK_z	/usr/include/SDL2/SDL_keycode.h	/^    SDLK_z = 'z',$/;"	e	enum:__anon69
SDLTEST_MAX_LOGMESSAGE_LENGTH	/usr/include/SDL2/SDL_test.h	58;"	d
SDLTest_Assert	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_Assert(int assertCondition, const char *assertDescription, ...);$/;"	p	signature:(int assertCondition, const char *assertDescription, ...)
SDLTest_AssertCheck	/usr/include/SDL2/SDL_test_assert.h	/^int SDLTest_AssertCheck(int assertCondition, const char *assertDescription, ...);$/;"	p	signature:(int assertCondition, const char *assertDescription, ...)
SDLTest_AssertPass	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_AssertPass(const char *assertDescription, ...);$/;"	p	signature:(const char *assertDescription, ...)
SDLTest_AssertSummaryToTestResult	/usr/include/SDL2/SDL_test_assert.h	/^int SDLTest_AssertSummaryToTestResult();$/;"	p	signature:()
SDLTest_CommonArg	/usr/include/SDL2/SDL_test_common.h	/^int SDLTest_CommonArg(SDLTest_CommonState * state, int index);$/;"	p	signature:(SDLTest_CommonState * state, int index)
SDLTest_CommonCreateState	/usr/include/SDL2/SDL_test_common.h	/^SDLTest_CommonState *SDLTest_CommonCreateState(char **argv, Uint32 flags);$/;"	p	signature:(char **argv, Uint32 flags)
SDLTest_CommonEvent	/usr/include/SDL2/SDL_test_common.h	/^void SDLTest_CommonEvent(SDLTest_CommonState * state, SDL_Event * event, int *done);$/;"	p	signature:(SDLTest_CommonState * state, SDL_Event * event, int *done)
SDLTest_CommonInit	/usr/include/SDL2/SDL_test_common.h	/^SDL_bool SDLTest_CommonInit(SDLTest_CommonState * state);$/;"	p	signature:(SDLTest_CommonState * state)
SDLTest_CommonQuit	/usr/include/SDL2/SDL_test_common.h	/^void SDLTest_CommonQuit(SDLTest_CommonState * state);$/;"	p	signature:(SDLTest_CommonState * state)
SDLTest_CommonState	/usr/include/SDL2/SDL_test_common.h	/^} SDLTest_CommonState;$/;"	t	typeref:struct:__anon4
SDLTest_CommonUsage	/usr/include/SDL2/SDL_test_common.h	/^const char *SDLTest_CommonUsage(SDLTest_CommonState * state);$/;"	p	signature:(SDLTest_CommonState * state)
SDLTest_CompareSurfaces	/usr/include/SDL2/SDL_test_compare.h	/^int SDLTest_CompareSurfaces(SDL_Surface *surface, SDL_Surface *referenceSurface, int allowable_error);$/;"	p	signature:(SDL_Surface *surface, SDL_Surface *referenceSurface, int allowable_error)
SDLTest_Crc32CalcBuffer	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32CalcBuffer(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32);$/;"	p	signature:(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32)
SDLTest_Crc32CalcEnd	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32CalcEnd(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);$/;"	p	signature:(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32)
SDLTest_Crc32CalcStart	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32CalcStart(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32);$/;"	p	signature:(SDLTest_Crc32Context * crcContext, CrcUint32 *crc32)
SDLTest_Crc32Context	/usr/include/SDL2/SDL_test_crc32.h	/^  } SDLTest_Crc32Context;$/;"	t	typeref:struct:__anon1
SDLTest_Crc32Done	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_Crc32Done(SDLTest_Crc32Context * crcContext);$/;"	p	signature:(SDLTest_Crc32Context * crcContext)
SDLTest_Crc32Init	/usr/include/SDL2/SDL_test_crc32.h	/^ int SDLTest_Crc32Init(SDLTest_Crc32Context * crcContext);$/;"	p	signature:(SDLTest_Crc32Context * crcContext)
SDLTest_DrawCharacter	/usr/include/SDL2/SDL_test_font.h	/^int SDLTest_DrawCharacter( SDL_Renderer *renderer, int x, int y, char c );$/;"	p	signature:( SDL_Renderer *renderer, int x, int y, char c )
SDLTest_DrawString	/usr/include/SDL2/SDL_test_font.h	/^int SDLTest_DrawString( SDL_Renderer * renderer, int x, int y, const char *s );$/;"	p	signature:( SDL_Renderer * renderer, int x, int y, const char *s )
SDLTest_FuzzerInit	/usr/include/SDL2/SDL_test_fuzzer.h	/^void SDLTest_FuzzerInit(Uint64 execKey);$/;"	p	signature:(Uint64 execKey)
SDLTest_GetFuzzerInvocationCount	/usr/include/SDL2/SDL_test_fuzzer.h	/^int SDLTest_GetFuzzerInvocationCount();$/;"	p	signature:()
SDLTest_ImageBlit	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlit();$/;"	p	signature:()
SDLTest_ImageBlitAlpha	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitAlpha();$/;"	p	signature:()
SDLTest_ImageBlitBlend	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlend();$/;"	p	signature:()
SDLTest_ImageBlitBlendAdd	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendAdd();$/;"	p	signature:()
SDLTest_ImageBlitBlendAll	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendAll();$/;"	p	signature:()
SDLTest_ImageBlitBlendMod	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendMod();$/;"	p	signature:()
SDLTest_ImageBlitBlendNone	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitBlendNone();$/;"	p	signature:()
SDLTest_ImageBlitColor	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageBlitColor();$/;"	p	signature:()
SDLTest_ImageFace	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImageFace();$/;"	p	signature:()
SDLTest_ImagePrimitives	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImagePrimitives();$/;"	p	signature:()
SDLTest_ImagePrimitivesBlend	/usr/include/SDL2/SDL_test_images.h	/^SDL_Surface *SDLTest_ImagePrimitivesBlend();$/;"	p	signature:()
SDLTest_Log	/usr/include/SDL2/SDL_test_log.h	/^void SDLTest_Log(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
SDLTest_LogAssertSummary	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_LogAssertSummary();$/;"	p	signature:()
SDLTest_LogError	/usr/include/SDL2/SDL_test_log.h	/^void SDLTest_LogError(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
SDLTest_Md5Context	/usr/include/SDL2/SDL_test_md5.h	/^  } SDLTest_Md5Context;$/;"	t	typeref:struct:__anon39
SDLTest_Md5Final	/usr/include/SDL2/SDL_test_md5.h	/^ void SDLTest_Md5Final(SDLTest_Md5Context * mdContext);$/;"	p	signature:(SDLTest_Md5Context * mdContext)
SDLTest_Md5Init	/usr/include/SDL2/SDL_test_md5.h	/^ void SDLTest_Md5Init(SDLTest_Md5Context * mdContext);$/;"	p	signature:(SDLTest_Md5Context * mdContext)
SDLTest_Md5Update	/usr/include/SDL2/SDL_test_md5.h	/^ void SDLTest_Md5Update(SDLTest_Md5Context * mdContext, unsigned char *inBuf,$/;"	p	signature:(SDLTest_Md5Context * mdContext, unsigned char *inBuf, unsigned int inLen)
SDLTest_Random	/usr/include/SDL2/SDL_test_random.h	/^ unsigned int SDLTest_Random(SDLTest_RandomContext *rndContext);$/;"	p	signature:(SDLTest_RandomContext *rndContext)
SDLTest_RandomAsciiString	/usr/include/SDL2/SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiString();$/;"	p	signature:()
SDLTest_RandomAsciiStringOfSize	/usr/include/SDL2/SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiStringOfSize(int size);$/;"	p	signature:(int size)
SDLTest_RandomAsciiStringWithMaximumLength	/usr/include/SDL2/SDL_test_fuzzer.h	/^char * SDLTest_RandomAsciiStringWithMaximumLength(int maxLength);$/;"	p	signature:(int maxLength)
SDLTest_RandomContext	/usr/include/SDL2/SDL_test_random.h	/^  } SDLTest_RandomContext;$/;"	t	typeref:struct:__anon58
SDLTest_RandomDouble	/usr/include/SDL2/SDL_test_fuzzer.h	/^double SDLTest_RandomDouble();$/;"	p	signature:()
SDLTest_RandomFloat	/usr/include/SDL2/SDL_test_fuzzer.h	/^float SDLTest_RandomFloat();$/;"	p	signature:()
SDLTest_RandomInit	/usr/include/SDL2/SDL_test_random.h	/^ void SDLTest_RandomInit(SDLTest_RandomContext * rndContext, unsigned int xi,$/;"	p	signature:(SDLTest_RandomContext * rndContext, unsigned int xi, unsigned int ci)
SDLTest_RandomInitTime	/usr/include/SDL2/SDL_test_random.h	/^ void SDLTest_RandomInitTime(SDLTest_RandomContext *rndContext);$/;"	p	signature:(SDLTest_RandomContext *rndContext)
SDLTest_RandomInt	/usr/include/SDL2/SDL_test_random.h	54;"	d
SDLTest_RandomIntegerInRange	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomIntegerInRange(Sint32 min, Sint32 max);$/;"	p	signature:(Sint32 min, Sint32 max)
SDLTest_RandomSint16	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint16 SDLTest_RandomSint16();$/;"	p	signature:()
SDLTest_RandomSint16BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint16 SDLTest_RandomSint16BoundaryValue(Sint16 boundary1, Sint16 boundary2, SDL_bool validDomain);$/;"	p	signature:(Sint16 boundary1, Sint16 boundary2, SDL_bool validDomain)
SDLTest_RandomSint32	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomSint32();$/;"	p	signature:()
SDLTest_RandomSint32BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint32 SDLTest_RandomSint32BoundaryValue(Sint32 boundary1, Sint32 boundary2, SDL_bool validDomain);$/;"	p	signature:(Sint32 boundary1, Sint32 boundary2, SDL_bool validDomain)
SDLTest_RandomSint64	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint64 SDLTest_RandomSint64();$/;"	p	signature:()
SDLTest_RandomSint64BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint64 SDLTest_RandomSint64BoundaryValue(Sint64 boundary1, Sint64 boundary2, SDL_bool validDomain);$/;"	p	signature:(Sint64 boundary1, Sint64 boundary2, SDL_bool validDomain)
SDLTest_RandomSint8	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint8 SDLTest_RandomSint8();$/;"	p	signature:()
SDLTest_RandomSint8BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Sint8 SDLTest_RandomSint8BoundaryValue(Sint8 boundary1, Sint8 boundary2, SDL_bool validDomain);$/;"	p	signature:(Sint8 boundary1, Sint8 boundary2, SDL_bool validDomain)
SDLTest_RandomUint16	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint16 SDLTest_RandomUint16();$/;"	p	signature:()
SDLTest_RandomUint16BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint16 SDLTest_RandomUint16BoundaryValue(Uint16 boundary1, Uint16 boundary2, SDL_bool validDomain);$/;"	p	signature:(Uint16 boundary1, Uint16 boundary2, SDL_bool validDomain)
SDLTest_RandomUint32	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint32 SDLTest_RandomUint32();$/;"	p	signature:()
SDLTest_RandomUint32BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint32 SDLTest_RandomUint32BoundaryValue(Uint32 boundary1, Uint32 boundary2, SDL_bool validDomain);$/;"	p	signature:(Uint32 boundary1, Uint32 boundary2, SDL_bool validDomain)
SDLTest_RandomUint64	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint64 SDLTest_RandomUint64();$/;"	p	signature:()
SDLTest_RandomUint64BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint64 SDLTest_RandomUint64BoundaryValue(Uint64 boundary1, Uint64 boundary2, SDL_bool validDomain);$/;"	p	signature:(Uint64 boundary1, Uint64 boundary2, SDL_bool validDomain)
SDLTest_RandomUint8	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint8 SDLTest_RandomUint8();$/;"	p	signature:()
SDLTest_RandomUint8BoundaryValue	/usr/include/SDL2/SDL_test_fuzzer.h	/^Uint8 SDLTest_RandomUint8BoundaryValue(Uint8 boundary1, Uint8 boundary2, SDL_bool validDomain);$/;"	p	signature:(Uint8 boundary1, Uint8 boundary2, SDL_bool validDomain)
SDLTest_RandomUnitDouble	/usr/include/SDL2/SDL_test_fuzzer.h	/^double SDLTest_RandomUnitDouble();$/;"	p	signature:()
SDLTest_RandomUnitFloat	/usr/include/SDL2/SDL_test_fuzzer.h	/^float SDLTest_RandomUnitFloat();$/;"	p	signature:()
SDLTest_ResetAssertSummary	/usr/include/SDL2/SDL_test_assert.h	/^void SDLTest_ResetAssertSummary();$/;"	p	signature:()
SDLTest_RunSuites	/usr/include/SDL2/SDL_test_harness.h	/^int SDLTest_RunSuites(SDLTest_TestSuiteReference *testSuites[], const char *userRunSeed, Uint64 userExecKey, const char *filter, int testIterations);$/;"	p	signature:(SDLTest_TestSuiteReference *testSuites[], const char *userRunSeed, Uint64 userExecKey, const char *filter, int testIterations)
SDLTest_SurfaceImage_s	/usr/include/SDL2/SDL_test_images.h	/^typedef struct SDLTest_SurfaceImage_s {$/;"	s
SDLTest_SurfaceImage_s::bytes_per_pixel	/usr/include/SDL2/SDL_test_images.h	/^  unsigned int bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
SDLTest_SurfaceImage_s::height	/usr/include/SDL2/SDL_test_images.h	/^  int height;$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
SDLTest_SurfaceImage_s::pixel_data	/usr/include/SDL2/SDL_test_images.h	/^  const char *pixel_data;$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
SDLTest_SurfaceImage_s::width	/usr/include/SDL2/SDL_test_images.h	/^  int width;$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
SDLTest_SurfaceImage_t	/usr/include/SDL2/SDL_test_images.h	/^} SDLTest_SurfaceImage_t;$/;"	t	typeref:struct:SDLTest_SurfaceImage_s
SDLTest_TestCaseFp	/usr/include/SDL2/SDL_test_harness.h	/^typedef int (*SDLTest_TestCaseFp)(void *arg);$/;"	t
SDLTest_TestCaseReference	/usr/include/SDL2/SDL_test_harness.h	/^typedef struct SDLTest_TestCaseReference {$/;"	s
SDLTest_TestCaseReference	/usr/include/SDL2/SDL_test_harness.h	/^} SDLTest_TestCaseReference;$/;"	t	typeref:struct:SDLTest_TestCaseReference
SDLTest_TestCaseReference::description	/usr/include/SDL2/SDL_test_harness.h	/^    char *description;$/;"	m	struct:SDLTest_TestCaseReference	access:public
SDLTest_TestCaseReference::enabled	/usr/include/SDL2/SDL_test_harness.h	/^    int enabled;$/;"	m	struct:SDLTest_TestCaseReference	access:public
SDLTest_TestCaseReference::name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestCaseReference	access:public
SDLTest_TestCaseReference::testCase	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseFp testCase;$/;"	m	struct:SDLTest_TestCaseReference	access:public
SDLTest_TestCaseSetUpFp	/usr/include/SDL2/SDL_test_harness.h	/^typedef void (*SDLTest_TestCaseSetUpFp)(void *arg);$/;"	t
SDLTest_TestCaseTearDownFp	/usr/include/SDL2/SDL_test_harness.h	/^typedef void  (*SDLTest_TestCaseTearDownFp)(void *arg);$/;"	t
SDLTest_TestSuiteReference	/usr/include/SDL2/SDL_test_harness.h	/^typedef struct SDLTest_TestSuiteReference {$/;"	s
SDLTest_TestSuiteReference	/usr/include/SDL2/SDL_test_harness.h	/^} SDLTest_TestSuiteReference;$/;"	t	typeref:struct:SDLTest_TestSuiteReference
SDLTest_TestSuiteReference::name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
SDLTest_TestSuiteReference::testCases	/usr/include/SDL2/SDL_test_harness.h	/^    const SDLTest_TestCaseReference **testCases;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
SDLTest_TestSuiteReference::testSetUp	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseSetUpFp testSetUp;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
SDLTest_TestSuiteReference::testTearDown	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseTearDownFp testTearDown;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
SDLTest_crc32Calc	/usr/include/SDL2/SDL_test_crc32.h	/^int SDLTest_crc32Calc(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32);$/;"	p	signature:(SDLTest_Crc32Context * crcContext, CrcUint8 *inBuf, CrcUint32 inLen, CrcUint32 *crc32)
SDL_ADDEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_ADDEVENT,$/;"	e	enum:__anon12
SDL_ALPHA_OPAQUE	/usr/include/SDL2/SDL_pixels.h	45;"	d
SDL_ALPHA_TRANSPARENT	/usr/include/SDL2/SDL_pixels.h	46;"	d
SDL_ANDROID_EXTERNAL_STORAGE_READ	/usr/include/SDL2/SDL_system.h	95;"	d
SDL_ANDROID_EXTERNAL_STORAGE_WRITE	/usr/include/SDL2/SDL_system.h	96;"	d
SDL_APP_DIDENTERBACKGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_DIDENTERBACKGROUND, \/**< The application did enter the background and may not get CPU for some time$/;"	e	enum:__anon11
SDL_APP_DIDENTERFOREGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_DIDENTERFOREGROUND, \/**< The application is now interactive$/;"	e	enum:__anon11
SDL_APP_LOWMEMORY	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_LOWMEMORY,          \/**< The application is low on memory, free memory if possible.$/;"	e	enum:__anon11
SDL_APP_TERMINATING	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_TERMINATING,        \/**< The application is being terminated by the OS$/;"	e	enum:__anon11
SDL_APP_WILLENTERBACKGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_WILLENTERBACKGROUND, \/**< The application is about to enter the background$/;"	e	enum:__anon11
SDL_APP_WILLENTERFOREGROUND	/usr/include/SDL2/SDL_events.h	/^    SDL_APP_WILLENTERFOREGROUND, \/**< The application is about to enter the foreground$/;"	e	enum:__anon11
SDL_ARRAYORDER_ABGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_ABGR$/;"	e	enum:__anon50
SDL_ARRAYORDER_ARGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_ARGB,$/;"	e	enum:__anon50
SDL_ARRAYORDER_BGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_BGR,$/;"	e	enum:__anon50
SDL_ARRAYORDER_BGRA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_BGRA,$/;"	e	enum:__anon50
SDL_ARRAYORDER_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_NONE,$/;"	e	enum:__anon50
SDL_ARRAYORDER_RGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_RGB,$/;"	e	enum:__anon50
SDL_ARRAYORDER_RGBA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_ARRAYORDER_RGBA,$/;"	e	enum:__anon50
SDL_ASSEMBLY_ROUTINES	/usr/include/SDL2/SDL_config.h	330;"	d
SDL_ASSERTION_ABORT	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_ABORT,  \/**< Terminate the program. *\/$/;"	e	enum:__anon71
SDL_ASSERTION_ALWAYS_IGNORE	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_ALWAYS_IGNORE  \/**< Ignore the assert from now on. *\/$/;"	e	enum:__anon71
SDL_ASSERTION_BREAK	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_BREAK,  \/**< Make the debugger trigger a breakpoint. *\/$/;"	e	enum:__anon71
SDL_ASSERTION_IGNORE	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_IGNORE,  \/**< Ignore the assert. *\/$/;"	e	enum:__anon71
SDL_ASSERTION_RETRY	/usr/include/SDL2/SDL_assert.h	/^    SDL_ASSERTION_RETRY,  \/**< Retry the assert immediately. *\/$/;"	e	enum:__anon71
SDL_ASSERT_LEVEL	/usr/include/SDL2/SDL_assert.h	35;"	d
SDL_ASSERT_LEVEL	/usr/include/SDL2/SDL_assert.h	38;"	d
SDL_ASSERT_LEVEL	/usr/include/SDL2/SDL_assert.h	40;"	d
SDL_AUDIOCVT_PACKED	/usr/include/SDL2/SDL_audio.h	192;"	d
SDL_AUDIOCVT_PACKED	/usr/include/SDL2/SDL_audio.h	194;"	d
SDL_AUDIO_ALLOW_ANY_CHANGE	/usr/include/SDL2/SDL_audio.h	143;"	d
SDL_AUDIO_ALLOW_CHANNELS_CHANGE	/usr/include/SDL2/SDL_audio.h	142;"	d
SDL_AUDIO_ALLOW_FORMAT_CHANGE	/usr/include/SDL2/SDL_audio.h	141;"	d
SDL_AUDIO_ALLOW_FREQUENCY_CHANGE	/usr/include/SDL2/SDL_audio.h	140;"	d
SDL_AUDIO_BITSIZE	/usr/include/SDL2/SDL_audio.h	75;"	d
SDL_AUDIO_DRIVER_ALSA	/usr/include/SDL2/SDL_config.h	194;"	d
SDL_AUDIO_DRIVER_DISK	/usr/include/SDL2/SDL_config.h	203;"	d
SDL_AUDIO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config.h	204;"	d
SDL_AUDIO_DRIVER_OSS	/usr/include/SDL2/SDL_config.h	213;"	d
SDL_AUDIO_DRIVER_PULSEAUDIO	/usr/include/SDL2/SDL_config.h	198;"	d
SDL_AUDIO_ISBIGENDIAN	/usr/include/SDL2/SDL_audio.h	77;"	d
SDL_AUDIO_ISFLOAT	/usr/include/SDL2/SDL_audio.h	76;"	d
SDL_AUDIO_ISINT	/usr/include/SDL2/SDL_audio.h	79;"	d
SDL_AUDIO_ISLITTLEENDIAN	/usr/include/SDL2/SDL_audio.h	80;"	d
SDL_AUDIO_ISSIGNED	/usr/include/SDL2/SDL_audio.h	78;"	d
SDL_AUDIO_ISUNSIGNED	/usr/include/SDL2/SDL_audio.h	81;"	d
SDL_AUDIO_MASK_BITSIZE	/usr/include/SDL2/SDL_audio.h	71;"	d
SDL_AUDIO_MASK_DATATYPE	/usr/include/SDL2/SDL_audio.h	72;"	d
SDL_AUDIO_MASK_ENDIAN	/usr/include/SDL2/SDL_audio.h	73;"	d
SDL_AUDIO_MASK_SIGNED	/usr/include/SDL2/SDL_audio.h	74;"	d
SDL_AUDIO_PAUSED	/usr/include/SDL2/SDL_audio.h	/^    SDL_AUDIO_PAUSED$/;"	e	enum:__anon38
SDL_AUDIO_PLAYING	/usr/include/SDL2/SDL_audio.h	/^    SDL_AUDIO_PLAYING,$/;"	e	enum:__anon38
SDL_AUDIO_STOPPED	/usr/include/SDL2/SDL_audio.h	/^    SDL_AUDIO_STOPPED = 0,$/;"	e	enum:__anon38
SDL_AddEventWatch	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_AddEventWatch(SDL_EventFilter filter,$/;"	p	signature:(SDL_EventFilter filter, void *userdata)
SDL_AddHintCallback	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_AddHintCallback(const char *name,$/;"	p	signature:(const char *name, SDL_HintCallback callback, void *userdata)
SDL_AddTimer	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC SDL_TimerID SDLCALL SDL_AddTimer(Uint32 interval,$/;"	p	signature:(Uint32 interval, SDL_TimerCallback callback, void *param)
SDL_AllocFormat	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC SDL_PixelFormat * SDLCALL SDL_AllocFormat(Uint32 pixel_format);$/;"	p	signature:(Uint32 pixel_format)
SDL_AllocPalette	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC SDL_Palette *SDLCALL SDL_AllocPalette(int ncolors);$/;"	p	signature:(int ncolors)
SDL_AllocRW	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_AllocRW(void);$/;"	p	signature:(void)
SDL_AndroidGetActivity	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void * SDLCALL SDL_AndroidGetActivity();$/;"	p	signature:()
SDL_AndroidGetExternalStoragePath	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_AndroidGetExternalStoragePath();$/;"	p	signature:()
SDL_AndroidGetExternalStorageState	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_AndroidGetExternalStorageState();$/;"	p	signature:()
SDL_AndroidGetInternalStoragePath	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC const char * SDLCALL SDL_AndroidGetInternalStoragePath();$/;"	p	signature:()
SDL_AndroidGetJNIEnv	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void * SDLCALL SDL_AndroidGetJNIEnv();$/;"	p	signature:()
SDL_AssertionHandler	/usr/include/SDL2/SDL_assert.h	/^typedef SDL_assert_state (SDLCALL *SDL_AssertionHandler)($/;"	t
SDL_AtomicAdd	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicAdd(SDL_atomic_t *a, int v);$/;"	p	signature:(SDL_atomic_t *a, int v)
SDL_AtomicCAS	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicCAS(SDL_atomic_t *a, int oldval, int newval);$/;"	p	signature:(SDL_atomic_t *a, int oldval, int newval)
SDL_AtomicCASPtr	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicCASPtr(void **a, void *oldval, void *newval);$/;"	p	signature:(void **a, void *oldval, void *newval)
SDL_AtomicDecRef	/usr/include/SDL2/SDL_atomic.h	227;"	d
SDL_AtomicGet	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicGet(SDL_atomic_t *a);$/;"	p	signature:(SDL_atomic_t *a)
SDL_AtomicGetPtr	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void* SDLCALL SDL_AtomicGetPtr(void **a);$/;"	p	signature:(void **a)
SDL_AtomicIncRef	/usr/include/SDL2/SDL_atomic.h	217;"	d
SDL_AtomicLock	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_AtomicLock(SDL_SpinLock *lock);$/;"	p	signature:(SDL_SpinLock *lock)
SDL_AtomicSet	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC int SDLCALL SDL_AtomicSet(SDL_atomic_t *a, int v);$/;"	p	signature:(SDL_atomic_t *a, int v)
SDL_AtomicSetPtr	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void* SDLCALL SDL_AtomicSetPtr(void **a, void* v);$/;"	p	signature:(void **a, void* v)
SDL_AtomicTryLock	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_AtomicTryLock(SDL_SpinLock *lock);$/;"	p	signature:(SDL_SpinLock *lock)
SDL_AtomicUnlock	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_AtomicUnlock(SDL_SpinLock *lock);$/;"	p	signature:(SDL_SpinLock *lock)
SDL_AudioCVT	/usr/include/SDL2/SDL_audio.h	/^typedef struct SDL_AudioCVT$/;"	s
SDL_AudioCVT	/usr/include/SDL2/SDL_audio.h	/^} SDL_AUDIOCVT_PACKED SDL_AudioCVT;$/;"	t	typeref:struct:SDL_AudioCVT
SDL_AudioCVT::buf	/usr/include/SDL2/SDL_audio.h	/^    Uint8 *buf;                 \/**< Buffer to hold entire audio data *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::dst_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat dst_format; \/**< Target audio format *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::filter_index	/usr/include/SDL2/SDL_audio.h	/^    int filter_index;           \/**< Current audio conversion function *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::filters	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFilter filters[10];        \/**< Filter list *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::len	/usr/include/SDL2/SDL_audio.h	/^    int len;                    \/**< Length of original audio buffer *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::len_cvt	/usr/include/SDL2/SDL_audio.h	/^    int len_cvt;                \/**< Length of converted audio buffer *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::len_mult	/usr/include/SDL2/SDL_audio.h	/^    int len_mult;               \/**< buffer must be len*len_mult big *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::len_ratio	/usr/include/SDL2/SDL_audio.h	/^    double len_ratio;           \/**< Given len, final size is len*len_ratio *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::needed	/usr/include/SDL2/SDL_audio.h	/^    int needed;                 \/**< Set to 1 if conversion possible *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::rate_incr	/usr/include/SDL2/SDL_audio.h	/^    double rate_incr;           \/**< Rate conversion increment *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCVT::src_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat src_format; \/**< Source audio format *\/$/;"	m	struct:SDL_AudioCVT	access:public
SDL_AudioCallback	/usr/include/SDL2/SDL_audio.h	/^typedef void (SDLCALL * SDL_AudioCallback) (void *userdata, Uint8 * stream,$/;"	t
SDL_AudioDeviceID	/usr/include/SDL2/SDL_audio.h	/^typedef Uint32 SDL_AudioDeviceID;$/;"	t
SDL_AudioFilter	/usr/include/SDL2/SDL_audio.h	/^typedef void (SDLCALL * SDL_AudioFilter) (struct SDL_AudioCVT * cvt,$/;"	t
SDL_AudioFormat	/usr/include/SDL2/SDL_audio.h	/^typedef Uint16 SDL_AudioFormat;$/;"	t
SDL_AudioInit	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_AudioInit(const char *driver_name);$/;"	p	signature:(const char *driver_name)
SDL_AudioQuit	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_AudioQuit(void);$/;"	p	signature:(void)
SDL_AudioSpec	/usr/include/SDL2/SDL_audio.h	/^typedef struct SDL_AudioSpec$/;"	s
SDL_AudioSpec	/usr/include/SDL2/SDL_audio.h	/^} SDL_AudioSpec;$/;"	t	typeref:struct:SDL_AudioSpec
SDL_AudioSpec::callback	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioCallback callback;$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::channels	/usr/include/SDL2/SDL_audio.h	/^    Uint8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat format;     \/**< Audio data format *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::freq	/usr/include/SDL2/SDL_audio.h	/^    int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::padding	/usr/include/SDL2/SDL_audio.h	/^    Uint16 padding;             \/**< Necessary for some compile environments *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::samples	/usr/include/SDL2/SDL_audio.h	/^    Uint16 samples;             \/**< Audio buffer size in samples (power of 2) *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::silence	/usr/include/SDL2/SDL_audio.h	/^    Uint8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::size	/usr/include/SDL2/SDL_audio.h	/^    Uint32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioSpec::userdata	/usr/include/SDL2/SDL_audio.h	/^    void *userdata;$/;"	m	struct:SDL_AudioSpec	access:public
SDL_AudioStatus	/usr/include/SDL2/SDL_audio.h	/^} SDL_AudioStatus;$/;"	t	typeref:enum:__anon38
SDL_BIG_ENDIAN	/usr/include/SDL2/SDL_endian.h	38;"	d
SDL_BITMAPORDER_1234	/usr/include/SDL2/SDL_pixels.h	/^    SDL_BITMAPORDER_1234$/;"	e	enum:__anon48
SDL_BITMAPORDER_4321	/usr/include/SDL2/SDL_pixels.h	/^    SDL_BITMAPORDER_4321,$/;"	e	enum:__anon48
SDL_BITMAPORDER_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_BITMAPORDER_NONE,$/;"	e	enum:__anon48
SDL_BITSPERPIXEL	/usr/include/SDL2/SDL_pixels.h	124;"	d
SDL_BLENDMODE_ADD	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_ADD = 0x00000002,      \/**< additive blending$/;"	e	enum:__anon2
SDL_BLENDMODE_BLEND	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_BLEND = 0x00000001,    \/**< alpha blending$/;"	e	enum:__anon2
SDL_BLENDMODE_MOD	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_MOD = 0x00000004       \/**< color modulate$/;"	e	enum:__anon2
SDL_BLENDMODE_NONE	/usr/include/SDL2/SDL_blendmode.h	/^    SDL_BLENDMODE_NONE = 0x00000000,     \/**< no blending$/;"	e	enum:__anon2
SDL_BUTTON	/usr/include/SDL2/SDL_mouse.h	203;"	d
SDL_BUTTON_LEFT	/usr/include/SDL2/SDL_mouse.h	204;"	d
SDL_BUTTON_LMASK	/usr/include/SDL2/SDL_mouse.h	209;"	d
SDL_BUTTON_MIDDLE	/usr/include/SDL2/SDL_mouse.h	205;"	d
SDL_BUTTON_MMASK	/usr/include/SDL2/SDL_mouse.h	210;"	d
SDL_BUTTON_RIGHT	/usr/include/SDL2/SDL_mouse.h	206;"	d
SDL_BUTTON_RMASK	/usr/include/SDL2/SDL_mouse.h	211;"	d
SDL_BUTTON_X1	/usr/include/SDL2/SDL_mouse.h	207;"	d
SDL_BUTTON_X1MASK	/usr/include/SDL2/SDL_mouse.h	212;"	d
SDL_BUTTON_X2	/usr/include/SDL2/SDL_mouse.h	208;"	d
SDL_BUTTON_X2MASK	/usr/include/SDL2/SDL_mouse.h	213;"	d
SDL_BYTEORDER	/usr/include/SDL2/SDL_endian.h	44;"	d
SDL_BYTEORDER	/usr/include/SDL2/SDL_endian.h	51;"	d
SDL_BYTEORDER	/usr/include/SDL2/SDL_endian.h	53;"	d
SDL_BYTESPERPIXEL	/usr/include/SDL2/SDL_pixels.h	125;"	d
SDL_BlendMode	/usr/include/SDL2/SDL_blendmode.h	/^} SDL_BlendMode;$/;"	t	typeref:enum:__anon2
SDL_BlitScaled	/usr/include/SDL2/SDL_surface.h	476;"	d
SDL_BlitSurface	/usr/include/SDL2/SDL_surface.h	447;"	d
SDL_BuildAudioCVT	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_BuildAudioCVT(SDL_AudioCVT * cvt,$/;"	p	signature:(SDL_AudioCVT * cvt, SDL_AudioFormat src_format, Uint8 src_channels, int src_rate, SDL_AudioFormat dst_format, Uint8 dst_channels, int dst_rate)
SDL_CACHELINE_SIZE	/usr/include/SDL2/SDL_cpuinfo.h	77;"	d
SDL_CLIPBOARDUPDATE	/usr/include/SDL2/SDL_events.h	/^    SDL_CLIPBOARDUPDATE = 0x900, \/**< The clipboard changed *\/$/;"	e	enum:__anon11
SDL_COMPILEDVERSION	/usr/include/SDL2/SDL_version.h	100;"	d
SDL_COMPILE_TIME_ASSERT	/usr/include/SDL2/SDL_stdinc.h	159;"	d
SDL_CONTROLLERAXISMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERAXISMOTION  = 0x650, \/**< Game controller axis motion *\/$/;"	e	enum:__anon11
SDL_CONTROLLERBUTTONDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERBUTTONDOWN,          \/**< Game controller button pressed *\/$/;"	e	enum:__anon11
SDL_CONTROLLERBUTTONUP	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERBUTTONUP,            \/**< Game controller button released *\/$/;"	e	enum:__anon11
SDL_CONTROLLERDEVICEADDED	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERDEVICEADDED,         \/**< A new Game controller has been inserted into the system *\/$/;"	e	enum:__anon11
SDL_CONTROLLERDEVICEREMAPPED	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERDEVICEREMAPPED,      \/**< The controller mapping was updated *\/$/;"	e	enum:__anon11
SDL_CONTROLLERDEVICEREMOVED	/usr/include/SDL2/SDL_events.h	/^    SDL_CONTROLLERDEVICEREMOVED,       \/**< An opened Game controller has been removed *\/$/;"	e	enum:__anon11
SDL_CONTROLLER_AXIS_INVALID	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_INVALID = -1,$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_LEFTX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_LEFTX,$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_LEFTY	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_LEFTY,$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_MAX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_MAX$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_RIGHTX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_RIGHTX,$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_RIGHTY	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_RIGHTY,$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_TRIGGERLEFT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_TRIGGERLEFT,$/;"	e	enum:__anon56
SDL_CONTROLLER_AXIS_TRIGGERRIGHT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_AXIS_TRIGGERRIGHT,$/;"	e	enum:__anon56
SDL_CONTROLLER_BINDTYPE_AXIS	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_AXIS,$/;"	e	enum:__anon53
SDL_CONTROLLER_BINDTYPE_BUTTON	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_BUTTON,$/;"	e	enum:__anon53
SDL_CONTROLLER_BINDTYPE_HAT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_HAT$/;"	e	enum:__anon53
SDL_CONTROLLER_BINDTYPE_NONE	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BINDTYPE_NONE = 0,$/;"	e	enum:__anon53
SDL_CONTROLLER_BUTTON_A	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_A,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_B	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_B,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_BACK	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_BACK,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_DPAD_DOWN	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_DOWN,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_DPAD_LEFT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_LEFT,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_DPAD_RIGHT	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_RIGHT,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_DPAD_UP	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_DPAD_UP,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_GUIDE	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_GUIDE,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_INVALID	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_INVALID = -1,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_LEFTSHOULDER	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_LEFTSHOULDER,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_LEFTSTICK	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_LEFTSTICK,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_MAX	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_MAX$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_RIGHTSHOULDER	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_RIGHTSHOULDER,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_RIGHTSTICK	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_RIGHTSTICK,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_START	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_START,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_X	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_X,$/;"	e	enum:__anon57
SDL_CONTROLLER_BUTTON_Y	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_CONTROLLER_BUTTON_Y,$/;"	e	enum:__anon57
SDL_CalculateGammaRamp	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_CalculateGammaRamp(float gamma, Uint16 * ramp);$/;"	p	signature:(float gamma, Uint16 * ramp)
SDL_ClearError	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC void SDLCALL SDL_ClearError(void);$/;"	p	signature:(void)
SDL_ClearHints	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_ClearHints(void);$/;"	p	signature:(void)
SDL_CloseAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudio(void);$/;"	p	signature:(void)
SDL_CloseAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_CloseAudioDevice(SDL_AudioDeviceID dev);$/;"	p	signature:(SDL_AudioDeviceID dev)
SDL_Color	/usr/include/SDL2/SDL_pixels.h	/^typedef struct SDL_Color$/;"	s
SDL_Color	/usr/include/SDL2/SDL_pixels.h	/^} SDL_Color;$/;"	t	typeref:struct:SDL_Color
SDL_Color::a	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 a;$/;"	m	struct:SDL_Color	access:public
SDL_Color::b	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 b;$/;"	m	struct:SDL_Color	access:public
SDL_Color::g	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 g;$/;"	m	struct:SDL_Color	access:public
SDL_Color::r	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 r;$/;"	m	struct:SDL_Color	access:public
SDL_Colour	/usr/include/SDL2/SDL_pixels.h	261;"	d
SDL_CommonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_CommonEvent$/;"	s
SDL_CommonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_CommonEvent;$/;"	t	typeref:struct:SDL_CommonEvent
SDL_CommonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_CommonEvent	access:public
SDL_CommonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;$/;"	m	struct:SDL_CommonEvent	access:public
SDL_CompilerBarrier	/usr/include/SDL2/SDL_atomic.h	124;"	d
SDL_CompilerBarrier	/usr/include/SDL2/SDL_atomic.h	126;"	d
SDL_CompilerBarrier	/usr/include/SDL2/SDL_atomic.h	128;"	d
SDL_CondBroadcast	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondBroadcast(SDL_cond * cond);$/;"	p	signature:(SDL_cond * cond)
SDL_CondSignal	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondSignal(SDL_cond * cond);$/;"	p	signature:(SDL_cond * cond)
SDL_CondWait	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWait(SDL_cond * cond, SDL_mutex * mutex);$/;"	p	signature:(SDL_cond * cond, SDL_mutex * mutex)
SDL_CondWaitTimeout	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_CondWaitTimeout(SDL_cond * cond,$/;"	p	signature:(SDL_cond * cond, SDL_mutex * mutex, Uint32 ms)
SDL_ControllerAxisEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_ControllerAxisEvent$/;"	s
SDL_ControllerAxisEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_ControllerAxisEvent;$/;"	t	typeref:struct:SDL_ControllerAxisEvent
SDL_ControllerAxisEvent::axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The controller axis (SDL_GameControllerAxis) *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERAXISMOTION *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerAxisEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
SDL_ControllerButtonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_ControllerButtonEvent$/;"	s
SDL_ControllerButtonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_ControllerButtonEvent;$/;"	t	typeref:struct:SDL_ControllerButtonEvent
SDL_ControllerButtonEvent::button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The controller button (SDL_GameControllerButton) *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerButtonEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerButtonEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerButtonEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerButtonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerButtonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerButtonEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
SDL_ControllerDeviceEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_ControllerDeviceEvent$/;"	s
SDL_ControllerDeviceEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_ControllerDeviceEvent;$/;"	t	typeref:struct:SDL_ControllerDeviceEvent
SDL_ControllerDeviceEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_ControllerDeviceEvent	access:public
SDL_ControllerDeviceEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::SDL_CONTROLLERDEVICEREMAPPED *\/$/;"	m	struct:SDL_ControllerDeviceEvent	access:public
SDL_ControllerDeviceEvent::which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the REMOVED or REMAPPED event *\/$/;"	m	struct:SDL_ControllerDeviceEvent	access:public
SDL_ConvertAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_ConvertAudio(SDL_AudioCVT * cvt);$/;"	p	signature:(SDL_AudioCVT * cvt)
SDL_ConvertPixels	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_ConvertPixels(int width, int height,$/;"	p	signature:(int width, int height, Uint32 src_format, const void * src, int src_pitch, Uint32 dst_format, void * dst, int dst_pitch)
SDL_ConvertSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_ConvertSurface$/;"	p	signature:(SDL_Surface * src, const SDL_PixelFormat * fmt, Uint32 flags)
SDL_ConvertSurfaceFormat	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_ConvertSurfaceFormat$/;"	p	signature:(SDL_Surface * src, Uint32 pixel_format, Uint32 flags)
SDL_CreateColorCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateColorCursor(SDL_Surface *surface,$/;"	p	signature:(SDL_Surface *surface, int hot_x, int hot_y)
SDL_CreateCond	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC SDL_cond *SDLCALL SDL_CreateCond(void);$/;"	p	signature:(void)
SDL_CreateCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateCursor(const Uint8 * data,$/;"	p	signature:(const Uint8 * data, const Uint8 * mask, int w, int h, int hot_x, int hot_y)
SDL_CreateMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC SDL_mutex *SDLCALL SDL_CreateMutex(void);$/;"	p	signature:(void)
SDL_CreateRGBSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurface$/;"	p	signature:(Uint32 flags, int width, int height, int depth, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)
SDL_CreateRGBSurfaceFrom	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_CreateRGBSurfaceFrom(void *pixels,$/;"	p	signature:(void *pixels, int width, int height, int depth, int pitch, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)
SDL_CreateRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_CreateRenderer(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int index, Uint32 flags)
SDL_CreateSemaphore	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC SDL_sem *SDLCALL SDL_CreateSemaphore(Uint32 initial_value);$/;"	p	signature:(Uint32 initial_value)
SDL_CreateShapedWindow	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateShapedWindow(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags);$/;"	p	signature:(const char *title,unsigned int x,unsigned int y,unsigned int w,unsigned int h,Uint32 flags)
SDL_CreateSoftwareRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_CreateSoftwareRenderer(SDL_Surface * surface);$/;"	p	signature:(SDL_Surface * surface)
SDL_CreateSystemCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_CreateSystemCursor(SDL_SystemCursor id);$/;"	p	signature:(SDL_SystemCursor id)
SDL_CreateTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_CreateTexture(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, Uint32 format, int access, int w, int h)
SDL_CreateTextureFromSurface	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_CreateTextureFromSurface(SDL_Renderer * renderer, SDL_Surface * surface);$/;"	p	signature:(SDL_Renderer * renderer, SDL_Surface * surface)
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data);$/;"	p	signature:(SDL_ThreadFunction fn, const char *name, void *data)
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	/^SDL_CreateThread(SDL_ThreadFunction fn, const char *name, void *data,$/;"	p	signature:(SDL_ThreadFunction fn, const char *name, void *data, pfnSDL_CurrentBeginThread pfnBeginThread, pfnSDL_CurrentEndThread pfnEndThread)
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	115;"	d
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	116;"	d
SDL_CreateThread	/usr/include/SDL2/SDL_thread.h	118;"	d
SDL_CreateWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindow(const char *title,$/;"	p	signature:(const char *title, int x, int y, int w, int h, Uint32 flags)
SDL_CreateWindowAndRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_CreateWindowAndRenderer($/;"	p	signature:( int width, int height, Uint32 window_flags, SDL_Window **window, SDL_Renderer **renderer)
SDL_CreateWindowFrom	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_CreateWindowFrom(const void *data);$/;"	p	signature:(const void *data)
SDL_Cursor	/usr/include/SDL2/SDL_mouse.h	/^typedef struct SDL_Cursor SDL_Cursor;   \/* Implementation dependent *\/$/;"	t	typeref:struct:SDL_Cursor
SDL_DEFINE_PIXELFORMAT	/usr/include/SDL2/SDL_pixels.h	116;"	d
SDL_DEFINE_PIXELFOURCC	/usr/include/SDL2/SDL_pixels.h	114;"	d
SDL_DEPRECATED	/usr/include/SDL2/begin_code.h	38;"	d
SDL_DEPRECATED	/usr/include/SDL2/begin_code.h	40;"	d
SDL_DISABLE	/usr/include/SDL2/SDL_events.h	690;"	d
SDL_DOLLARGESTURE	/usr/include/SDL2/SDL_events.h	/^    SDL_DOLLARGESTURE   = 0x800,$/;"	e	enum:__anon11
SDL_DOLLARRECORD	/usr/include/SDL2/SDL_events.h	/^    SDL_DOLLARRECORD,$/;"	e	enum:__anon11
SDL_DONTFREE	/usr/include/SDL2/SDL_surface.h	55;"	d
SDL_DROPFILE	/usr/include/SDL2/SDL_events.h	/^    SDL_DROPFILE        = 0x1000, \/**< The system requests a file open *\/$/;"	e	enum:__anon11
SDL_DUMMY_ENUM	/usr/include/SDL2/SDL_stdinc.h	/^} SDL_DUMMY_ENUM;$/;"	t	typeref:enum:__anon74
SDL_DXGIGetOutputInfo	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_DXGIGetOutputInfo( int displayIndex, int *adapterIndex, int *outputIndex );$/;"	p	signature:( int displayIndex, int *adapterIndex, int *outputIndex )
SDL_DelEventWatch	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_DelEventWatch(SDL_EventFilter filter,$/;"	p	signature:(SDL_EventFilter filter, void *userdata)
SDL_DelHintCallback	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC void SDLCALL SDL_DelHintCallback(const char *name,$/;"	p	signature:(const char *name, SDL_HintCallback callback, void *userdata)
SDL_Delay	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC void SDLCALL SDL_Delay(Uint32 ms);$/;"	p	signature:(Uint32 ms)
SDL_DestroyCond	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyCond(SDL_cond * cond);$/;"	p	signature:(SDL_cond * cond)
SDL_DestroyMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroyMutex(SDL_mutex * mutex);$/;"	p	signature:(SDL_mutex * mutex)
SDL_DestroyRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_DestroyRenderer(SDL_Renderer * renderer);$/;"	p	signature:(SDL_Renderer * renderer)
SDL_DestroySemaphore	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC void SDLCALL SDL_DestroySemaphore(SDL_sem * sem);$/;"	p	signature:(SDL_sem * sem)
SDL_DestroyTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_DestroyTexture(SDL_Texture * texture);$/;"	p	signature:(SDL_Texture * texture)
SDL_DestroyWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_DestroyWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_DetachThread	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_DetachThread(SDL_Thread * thread);$/;"	p	signature:(SDL_Thread * thread)
SDL_Direct3D9GetAdapterIndex	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_Direct3D9GetAdapterIndex( int displayIndex );$/;"	p	signature:( int displayIndex )
SDL_DisableScreenSaver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_DisableScreenSaver(void);$/;"	p	signature:(void)
SDL_DisplayMode	/usr/include/SDL2/SDL_video.h	/^} SDL_DisplayMode;$/;"	t	typeref:struct:__anon5
SDL_DollarGestureEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_DollarGestureEvent$/;"	s
SDL_DollarGestureEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_DollarGestureEvent;$/;"	t	typeref:struct:SDL_DollarGestureEvent
SDL_DollarGestureEvent::error	/usr/include/SDL2/SDL_events.h	/^    float error;$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::gestureId	/usr/include/SDL2/SDL_events.h	/^    SDL_GestureID gestureId;$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint32 numFingers;$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DOLLARGESTURE *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DollarGestureEvent::y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
SDL_DropEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_DropEvent$/;"	s
SDL_DropEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_DropEvent;$/;"	t	typeref:struct:SDL_DropEvent
SDL_DropEvent::file	/usr/include/SDL2/SDL_events.h	/^    char *file;         \/**< The file name, which should be freed with SDL_free() *\/$/;"	m	struct:SDL_DropEvent	access:public
SDL_DropEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_DropEvent	access:public
SDL_DropEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DROPFILE *\/$/;"	m	struct:SDL_DropEvent	access:public
SDL_EFREAD	/usr/include/SDL2/SDL_error.h	/^    SDL_EFREAD,$/;"	e	enum:__anon29
SDL_EFSEEK	/usr/include/SDL2/SDL_error.h	/^    SDL_EFSEEK,$/;"	e	enum:__anon29
SDL_EFWRITE	/usr/include/SDL2/SDL_error.h	/^    SDL_EFWRITE,$/;"	e	enum:__anon29
SDL_ENABLE	/usr/include/SDL2/SDL_events.h	691;"	d
SDL_ENOMEM	/usr/include/SDL2/SDL_error.h	/^    SDL_ENOMEM,$/;"	e	enum:__anon29
SDL_EnableScreenSaver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_EnableScreenSaver(void);$/;"	p	signature:(void)
SDL_EnclosePoints	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_EnclosePoints(const SDL_Point * points,$/;"	p	signature:(const SDL_Point * points, int count, const SDL_Rect * clip, SDL_Rect * result)
SDL_Error	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC int SDLCALL SDL_Error(SDL_errorcode code);$/;"	p	signature:(SDL_errorcode code)
SDL_Event	/usr/include/SDL2/SDL_events.h	/^typedef union SDL_Event$/;"	u
SDL_Event	/usr/include/SDL2/SDL_events.h	/^} SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event::button	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseButtonEvent button;    \/**< Mouse button event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::caxis	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerAxisEvent caxis;      \/**< Game Controller axis event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::cbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerButtonEvent cbutton;  \/**< Game Controller button event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::cdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerDeviceEvent cdevice;  \/**< Game Controller device event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::common	/usr/include/SDL2/SDL_events.h	/^    SDL_CommonEvent common;         \/**< Common event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::dgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_DollarGestureEvent dgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::drop	/usr/include/SDL2/SDL_events.h	/^    SDL_DropEvent drop;             \/**< Drag and drop event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::edit	/usr/include/SDL2/SDL_events.h	/^    SDL_TextEditingEvent edit;      \/**< Text editing event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::jaxis	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyAxisEvent jaxis;         \/**< Joystick axis event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::jball	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyBallEvent jball;         \/**< Joystick ball event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::jbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyButtonEvent jbutton;     \/**< Joystick button event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::jdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyDeviceEvent jdevice;     \/**< Joystick device change event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::jhat	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyHatEvent jhat;           \/**< Joystick hat event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::key	/usr/include/SDL2/SDL_events.h	/^    SDL_KeyboardEvent key;          \/**< Keyboard event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::mgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_MultiGestureEvent mgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::motion	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseMotionEvent motion;    \/**< Mouse motion event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::padding	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding[56];$/;"	m	union:SDL_Event	access:public
SDL_Event::quit	/usr/include/SDL2/SDL_events.h	/^    SDL_QuitEvent quit;             \/**< Quit request event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::syswm	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMEvent syswm;           \/**< System dependent window event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::text	/usr/include/SDL2/SDL_events.h	/^    SDL_TextInputEvent text;        \/**< Text input event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::tfinger	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchFingerEvent tfinger;   \/**< Touch finger event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                    \/**< Event type, shared with all events *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::user	/usr/include/SDL2/SDL_events.h	/^    SDL_UserEvent user;             \/**< Custom event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::wheel	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseWheelEvent wheel;      \/**< Mouse wheel event data *\/$/;"	m	union:SDL_Event	access:public
SDL_Event::window	/usr/include/SDL2/SDL_events.h	/^    SDL_WindowEvent window;         \/**< Window event data *\/$/;"	m	union:SDL_Event	access:public
SDL_EventFilter	/usr/include/SDL2/SDL_events.h	/^typedef int (SDLCALL * SDL_EventFilter) (void *userdata, SDL_Event * event);$/;"	t
SDL_EventState	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC Uint8 SDLCALL SDL_EventState(Uint32 type, int state);$/;"	p	signature:(Uint32 type, int state)
SDL_EventType	/usr/include/SDL2/SDL_events.h	/^} SDL_EventType;$/;"	t	typeref:enum:__anon11
SDL_FALSE	/usr/include/SDL2/SDL_stdinc.h	/^    SDL_FALSE = 0,$/;"	e	enum:__anon73
SDL_FILE	/usr/include/SDL2/SDL_assert.h	71;"	d
SDL_FILESYSTEM_UNIX	/usr/include/SDL2/SDL_config.h	326;"	d
SDL_FINGERDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_FINGERDOWN      = 0x700,$/;"	e	enum:__anon11
SDL_FINGERMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_FINGERMOTION,$/;"	e	enum:__anon11
SDL_FINGERUP	/usr/include/SDL2/SDL_events.h	/^    SDL_FINGERUP,$/;"	e	enum:__anon11
SDL_FIRSTEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_FIRSTEVENT     = 0,     \/**< Unused (do not remove) *\/$/;"	e	enum:__anon11
SDL_FLIP_HORIZONTAL	/usr/include/SDL2/SDL_render.h	/^    SDL_FLIP_HORIZONTAL = 0x00000001,    \/**< flip horizontally *\/$/;"	e	enum:__anon68
SDL_FLIP_NONE	/usr/include/SDL2/SDL_render.h	/^    SDL_FLIP_NONE = 0x00000000,     \/**< Do not flip *\/$/;"	e	enum:__anon68
SDL_FLIP_VERTICAL	/usr/include/SDL2/SDL_render.h	/^    SDL_FLIP_VERTICAL = 0x00000002     \/**< flip vertically *\/$/;"	e	enum:__anon68
SDL_FORCE_INLINE	/usr/include/SDL2/begin_code.h	123;"	d
SDL_FORCE_INLINE	/usr/include/SDL2/begin_code.h	125;"	d
SDL_FORCE_INLINE	/usr/include/SDL2/begin_code.h	127;"	d
SDL_FOURCC	/usr/include/SDL2/SDL_stdinc.h	105;"	d
SDL_FUNCTION	/usr/include/SDL2/SDL_assert.h	65;"	d
SDL_FUNCTION	/usr/include/SDL2/SDL_assert.h	67;"	d
SDL_FUNCTION	/usr/include/SDL2/SDL_assert.h	69;"	d
SDL_FillRect	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_FillRect$/;"	p	signature:(SDL_Surface * dst, const SDL_Rect * rect, Uint32 color)
SDL_FillRects	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_FillRects$/;"	p	signature:(SDL_Surface * dst, const SDL_Rect * rects, int count, Uint32 color)
SDL_FilterEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FilterEvents(SDL_EventFilter filter,$/;"	p	signature:(SDL_EventFilter filter, void *userdata)
SDL_Finger	/usr/include/SDL2/SDL_touch.h	/^typedef struct SDL_Finger$/;"	s
SDL_Finger	/usr/include/SDL2/SDL_touch.h	/^} SDL_Finger;$/;"	t	typeref:struct:SDL_Finger
SDL_Finger::id	/usr/include/SDL2/SDL_touch.h	/^    SDL_FingerID id;$/;"	m	struct:SDL_Finger	access:public
SDL_Finger::pressure	/usr/include/SDL2/SDL_touch.h	/^    float pressure;$/;"	m	struct:SDL_Finger	access:public
SDL_Finger::x	/usr/include/SDL2/SDL_touch.h	/^    float x;$/;"	m	struct:SDL_Finger	access:public
SDL_Finger::y	/usr/include/SDL2/SDL_touch.h	/^    float y;$/;"	m	struct:SDL_Finger	access:public
SDL_FingerID	/usr/include/SDL2/SDL_touch.h	/^typedef Sint64 SDL_FingerID;$/;"	t
SDL_FlushEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FlushEvent(Uint32 type);$/;"	p	signature:(Uint32 type)
SDL_FlushEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_FlushEvents(Uint32 minType, Uint32 maxType);$/;"	p	signature:(Uint32 minType, Uint32 maxType)
SDL_FreeCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_FreeCursor(SDL_Cursor * cursor);$/;"	p	signature:(SDL_Cursor * cursor)
SDL_FreeFormat	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_FreeFormat(SDL_PixelFormat *format);$/;"	p	signature:(SDL_PixelFormat *format)
SDL_FreePalette	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_FreePalette(SDL_Palette * palette);$/;"	p	signature:(SDL_Palette * palette)
SDL_FreeRW	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC void SDLCALL SDL_FreeRW(SDL_RWops * area);$/;"	p	signature:(SDL_RWops * area)
SDL_FreeSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_FreeSurface(SDL_Surface * surface);$/;"	p	signature:(SDL_Surface * surface)
SDL_FreeWAV	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_FreeWAV(Uint8 * audio_buf);$/;"	p	signature:(Uint8 * audio_buf)
SDL_GETEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_GETEVENT$/;"	e	enum:__anon12
SDL_GLContext	/usr/include/SDL2/SDL_video.h	/^typedef void *SDL_GLContext;$/;"	t
SDL_GL_ACCELERATED_VISUAL	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCELERATED_VISUAL,$/;"	e	enum:__anon8
SDL_GL_ACCUM_ALPHA_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_ALPHA_SIZE,$/;"	e	enum:__anon8
SDL_GL_ACCUM_BLUE_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_BLUE_SIZE,$/;"	e	enum:__anon8
SDL_GL_ACCUM_GREEN_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_GREEN_SIZE,$/;"	e	enum:__anon8
SDL_GL_ACCUM_RED_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ACCUM_RED_SIZE,$/;"	e	enum:__anon8
SDL_GL_ALPHA_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_ALPHA_SIZE,$/;"	e	enum:__anon8
SDL_GL_BLUE_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_BLUE_SIZE,$/;"	e	enum:__anon8
SDL_GL_BUFFER_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_BUFFER_SIZE,$/;"	e	enum:__anon8
SDL_GL_BindTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GL_BindTexture(SDL_Texture *texture, float *texw, float *texh);$/;"	p	signature:(SDL_Texture *texture, float *texw, float *texh)
SDL_GL_CONTEXT_DEBUG_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_DEBUG_FLAG              = 0x0001,$/;"	e	enum:__anon10
SDL_GL_CONTEXT_EGL	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_EGL,$/;"	e	enum:__anon8
SDL_GL_CONTEXT_FLAGS	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_FLAGS,$/;"	e	enum:__anon8
SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_FORWARD_COMPATIBLE_FLAG = 0x0002,$/;"	e	enum:__anon10
SDL_GL_CONTEXT_MAJOR_VERSION	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_MAJOR_VERSION,$/;"	e	enum:__anon8
SDL_GL_CONTEXT_MINOR_VERSION	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_MINOR_VERSION,$/;"	e	enum:__anon8
SDL_GL_CONTEXT_PROFILE_COMPATIBILITY	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_COMPATIBILITY  = 0x0002,$/;"	e	enum:__anon9
SDL_GL_CONTEXT_PROFILE_CORE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_CORE           = 0x0001,$/;"	e	enum:__anon9
SDL_GL_CONTEXT_PROFILE_ES	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_ES             = 0x0004 \/* GLX_CONTEXT_ES2_PROFILE_BIT_EXT *\/$/;"	e	enum:__anon9
SDL_GL_CONTEXT_PROFILE_MASK	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_PROFILE_MASK,$/;"	e	enum:__anon8
SDL_GL_CONTEXT_RESET_ISOLATION_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_RESET_ISOLATION_FLAG    = 0x0008$/;"	e	enum:__anon10
SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_CONTEXT_ROBUST_ACCESS_FLAG      = 0x0004,$/;"	e	enum:__anon10
SDL_GL_CreateContext	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_GLContext SDLCALL SDL_GL_CreateContext(SDL_Window *$/;"	p	signature:(SDL_Window * window)
SDL_GL_DEPTH_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_DEPTH_SIZE,$/;"	e	enum:__anon8
SDL_GL_DOUBLEBUFFER	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_DOUBLEBUFFER,$/;"	e	enum:__anon8
SDL_GL_DeleteContext	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_DeleteContext(SDL_GLContext context);$/;"	p	signature:(SDL_GLContext context)
SDL_GL_ExtensionSupported	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GL_ExtensionSupported(const char$/;"	p	signature:(const char *extension)
SDL_GL_FRAMEBUFFER_SRGB_CAPABLE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_FRAMEBUFFER_SRGB_CAPABLE$/;"	e	enum:__anon8
SDL_GL_GREEN_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_GREEN_SIZE,$/;"	e	enum:__anon8
SDL_GL_GetAttribute	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetAttribute(SDL_GLattr attr, int *value);$/;"	p	signature:(SDL_GLattr attr, int *value)
SDL_GL_GetCurrentContext	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_GLContext SDLCALL SDL_GL_GetCurrentContext(void);$/;"	p	signature:(void)
SDL_GL_GetCurrentWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window* SDLCALL SDL_GL_GetCurrentWindow(void);$/;"	p	signature:(void)
SDL_GL_GetDrawableSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_GetDrawableSize(SDL_Window * window, int *w,$/;"	p	signature:(SDL_Window * window, int *w, int *h)
SDL_GL_GetProcAddress	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void *SDLCALL SDL_GL_GetProcAddress(const char *proc);$/;"	p	signature:(const char *proc)
SDL_GL_GetSwapInterval	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_GetSwapInterval(void);$/;"	p	signature:(void)
SDL_GL_LoadLibrary	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_LoadLibrary(const char *path);$/;"	p	signature:(const char *path)
SDL_GL_MULTISAMPLEBUFFERS	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_MULTISAMPLEBUFFERS,$/;"	e	enum:__anon8
SDL_GL_MULTISAMPLESAMPLES	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_MULTISAMPLESAMPLES,$/;"	e	enum:__anon8
SDL_GL_MakeCurrent	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_MakeCurrent(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, SDL_GLContext context)
SDL_GL_RED_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_RED_SIZE,$/;"	e	enum:__anon8
SDL_GL_RETAINED_BACKING	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_RETAINED_BACKING,$/;"	e	enum:__anon8
SDL_GL_ResetAttributes	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_ResetAttributes(void);$/;"	p	signature:(void)
SDL_GL_SHARE_WITH_CURRENT_CONTEXT	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_SHARE_WITH_CURRENT_CONTEXT,$/;"	e	enum:__anon8
SDL_GL_STENCIL_SIZE	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_STENCIL_SIZE,$/;"	e	enum:__anon8
SDL_GL_STEREO	/usr/include/SDL2/SDL_video.h	/^    SDL_GL_STEREO,$/;"	e	enum:__anon8
SDL_GL_SetAttribute	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetAttribute(SDL_GLattr attr, int value);$/;"	p	signature:(SDL_GLattr attr, int value)
SDL_GL_SetSwapInterval	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GL_SetSwapInterval(int interval);$/;"	p	signature:(int interval)
SDL_GL_SwapWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_SwapWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GL_UnbindTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GL_UnbindTexture(SDL_Texture *texture);$/;"	p	signature:(SDL_Texture *texture)
SDL_GL_UnloadLibrary	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GL_UnloadLibrary(void);$/;"	p	signature:(void)
SDL_GLattr	/usr/include/SDL2/SDL_video.h	/^} SDL_GLattr;$/;"	t	typeref:enum:__anon8
SDL_GLcontextFlag	/usr/include/SDL2/SDL_video.h	/^} SDL_GLcontextFlag;$/;"	t	typeref:enum:__anon10
SDL_GLprofile	/usr/include/SDL2/SDL_video.h	/^} SDL_GLprofile;$/;"	t	typeref:enum:__anon9
SDL_GameController	/usr/include/SDL2/SDL_gamecontroller.h	/^typedef struct _SDL_GameController SDL_GameController;$/;"	t	typeref:struct:_SDL_GameController
SDL_GameControllerAddMapping	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerAddMapping( const char* mappingString );$/;"	p	signature:( const char* mappingString )
SDL_GameControllerAddMappingsFromFile	/usr/include/SDL2/SDL_gamecontroller.h	127;"	d
SDL_GameControllerAddMappingsFromRW	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerAddMappingsFromRW( SDL_RWops * rw, int freerw );$/;"	p	signature:( SDL_RWops * rw, int freerw )
SDL_GameControllerAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerAxis;$/;"	t	typeref:enum:__anon56
SDL_GameControllerBindType	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerBindType;$/;"	t	typeref:enum:__anon53
SDL_GameControllerButton	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerButton;$/;"	t	typeref:enum:__anon57
SDL_GameControllerButtonBind	/usr/include/SDL2/SDL_gamecontroller.h	/^typedef struct SDL_GameControllerButtonBind$/;"	s
SDL_GameControllerButtonBind	/usr/include/SDL2/SDL_gamecontroller.h	/^} SDL_GameControllerButtonBind;$/;"	t	typeref:struct:SDL_GameControllerButtonBind
SDL_GameControllerButtonBind::__anon54::__anon55::hat	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat;$/;"	m	struct:SDL_GameControllerButtonBind::__anon54::__anon55	access:public
SDL_GameControllerButtonBind::__anon54::__anon55::hat_mask	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat_mask;$/;"	m	struct:SDL_GameControllerButtonBind::__anon54::__anon55	access:public
SDL_GameControllerButtonBind::__anon54::axis	/usr/include/SDL2/SDL_gamecontroller.h	/^        int axis;$/;"	m	union:SDL_GameControllerButtonBind::__anon54	access:public
SDL_GameControllerButtonBind::__anon54::button	/usr/include/SDL2/SDL_gamecontroller.h	/^        int button;$/;"	m	union:SDL_GameControllerButtonBind::__anon54	access:public
SDL_GameControllerButtonBind::__anon54::hat	/usr/include/SDL2/SDL_gamecontroller.h	/^        } hat;$/;"	m	union:SDL_GameControllerButtonBind::__anon54	typeref:struct:SDL_GameControllerButtonBind::__anon54::__anon55	access:public
SDL_GameControllerButtonBind::bindType	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_GameControllerBindType bindType;$/;"	m	struct:SDL_GameControllerButtonBind	access:public
SDL_GameControllerButtonBind::value	/usr/include/SDL2/SDL_gamecontroller.h	/^    } value;$/;"	m	struct:SDL_GameControllerButtonBind	typeref:union:SDL_GameControllerButtonBind::__anon54	access:public
SDL_GameControllerClose	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerClose(SDL_GameController *gamecontroller);$/;"	p	signature:(SDL_GameController *gamecontroller)
SDL_GameControllerEventState	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC int SDLCALL SDL_GameControllerEventState(int state);$/;"	p	signature:(int state)
SDL_GameControllerGetAttached	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GameControllerGetAttached(SDL_GameController *gamecontroller);$/;"	p	signature:(SDL_GameController *gamecontroller)
SDL_GameControllerGetAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^SDL_GameControllerGetAxis(SDL_GameController *gamecontroller,$/;"	p	signature:(SDL_GameController *gamecontroller, SDL_GameControllerAxis axis)
SDL_GameControllerGetAxisFromString	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerAxis SDLCALL SDL_GameControllerGetAxisFromString(const char *pchString);$/;"	p	signature:(const char *pchString)
SDL_GameControllerGetBindForAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^SDL_GameControllerGetBindForAxis(SDL_GameController *gamecontroller,$/;"	p	signature:(SDL_GameController *gamecontroller, SDL_GameControllerAxis axis)
SDL_GameControllerGetBindForButton	/usr/include/SDL2/SDL_gamecontroller.h	/^SDL_GameControllerGetBindForButton(SDL_GameController *gamecontroller,$/;"	p	signature:(SDL_GameController *gamecontroller, SDL_GameControllerButton button)
SDL_GameControllerGetButton	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC Uint8 SDLCALL SDL_GameControllerGetButton(SDL_GameController *gamecontroller,$/;"	p	signature:(SDL_GameController *gamecontroller, SDL_GameControllerButton button)
SDL_GameControllerGetButtonFromString	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameControllerButton SDLCALL SDL_GameControllerGetButtonFromString(const char *pchString);$/;"	p	signature:(const char *pchString)
SDL_GameControllerGetJoystick	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_GameControllerGetJoystick(SDL_GameController *gamecontroller);$/;"	p	signature:(SDL_GameController *gamecontroller)
SDL_GameControllerGetStringForAxis	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char* SDLCALL SDL_GameControllerGetStringForAxis(SDL_GameControllerAxis axis);$/;"	p	signature:(SDL_GameControllerAxis axis)
SDL_GameControllerGetStringForButton	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char* SDLCALL SDL_GameControllerGetStringForButton(SDL_GameControllerButton button);$/;"	p	signature:(SDL_GameControllerButton button)
SDL_GameControllerMapping	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMapping( SDL_GameController * gamecontroller );$/;"	p	signature:( SDL_GameController * gamecontroller )
SDL_GameControllerMappingForGUID	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC char * SDLCALL SDL_GameControllerMappingForGUID( SDL_JoystickGUID guid );$/;"	p	signature:( SDL_JoystickGUID guid )
SDL_GameControllerName	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char *SDLCALL SDL_GameControllerName(SDL_GameController *gamecontroller);$/;"	p	signature:(SDL_GameController *gamecontroller)
SDL_GameControllerNameForIndex	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC const char *SDLCALL SDL_GameControllerNameForIndex(int joystick_index);$/;"	p	signature:(int joystick_index)
SDL_GameControllerOpen	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_GameController *SDLCALL SDL_GameControllerOpen(int joystick_index);$/;"	p	signature:(int joystick_index)
SDL_GameControllerUpdate	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC void SDLCALL SDL_GameControllerUpdate(void);$/;"	p	signature:(void)
SDL_GestureID	/usr/include/SDL2/SDL_gesture.h	/^typedef Sint64 SDL_GestureID;$/;"	t
SDL_GetAssertionHandler	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetAssertionHandler(void **puserdata);$/;"	p	signature:(void **puserdata)
SDL_GetAssertionReport	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC const SDL_assert_data * SDLCALL SDL_GetAssertionReport(void);$/;"	p	signature:(void)
SDL_GetAudioDeviceName	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetAudioDeviceName(int index,$/;"	p	signature:(int index, int iscapture)
SDL_GetAudioDeviceStatus	/usr/include/SDL2/SDL_audio.h	/^SDL_GetAudioDeviceStatus(SDL_AudioDeviceID dev);$/;"	p	signature:(SDL_AudioDeviceID dev)
SDL_GetAudioDriver	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetAudioDriver(int index);$/;"	p	signature:(int index)
SDL_GetAudioStatus	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioStatus SDLCALL SDL_GetAudioStatus(void);$/;"	p	signature:(void)
SDL_GetBasePath	/usr/include/SDL2/SDL_filesystem.h	/^extern DECLSPEC char *SDLCALL SDL_GetBasePath(void);$/;"	p	signature:(void)
SDL_GetCPUCacheLineSize	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetCPUCacheLineSize(void);$/;"	p	signature:(void)
SDL_GetCPUCount	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetCPUCount(void);$/;"	p	signature:(void)
SDL_GetClipRect	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_GetClipRect(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, SDL_Rect * rect)
SDL_GetClipboardText	/usr/include/SDL2/SDL_clipboard.h	/^extern DECLSPEC char * SDLCALL SDL_GetClipboardText(void);$/;"	p	signature:(void)
SDL_GetClosestDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_DisplayMode * SDLCALL SDL_GetClosestDisplayMode(int displayIndex, const SDL_DisplayMode * mode, SDL_DisplayMode * closest);$/;"	p	signature:(int displayIndex, const SDL_DisplayMode * mode, SDL_DisplayMode * closest)
SDL_GetColorKey	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetColorKey(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, Uint32 * key)
SDL_GetCurrentAudioDriver	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC const char *SDLCALL SDL_GetCurrentAudioDriver(void);$/;"	p	signature:(void)
SDL_GetCurrentDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetCurrentDisplayMode(int displayIndex, SDL_DisplayMode * mode);$/;"	p	signature:(int displayIndex, SDL_DisplayMode * mode)
SDL_GetCurrentVideoDriver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetCurrentVideoDriver(void);$/;"	p	signature:(void)
SDL_GetCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_GetCursor(void);$/;"	p	signature:(void)
SDL_GetDefaultAssertionHandler	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC SDL_AssertionHandler SDLCALL SDL_GetDefaultAssertionHandler(void);$/;"	p	signature:(void)
SDL_GetDefaultCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Cursor *SDLCALL SDL_GetDefaultCursor(void);$/;"	p	signature:(void)
SDL_GetDesktopDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDesktopDisplayMode(int displayIndex, SDL_DisplayMode * mode);$/;"	p	signature:(int displayIndex, SDL_DisplayMode * mode)
SDL_GetDisplayBounds	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayBounds(int displayIndex, SDL_Rect * rect);$/;"	p	signature:(int displayIndex, SDL_Rect * rect)
SDL_GetDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetDisplayMode(int displayIndex, int modeIndex,$/;"	p	signature:(int displayIndex, int modeIndex, SDL_DisplayMode * mode)
SDL_GetDisplayName	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char * SDLCALL SDL_GetDisplayName(int displayIndex);$/;"	p	signature:(int displayIndex)
SDL_GetError	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC const char *SDLCALL SDL_GetError(void);$/;"	p	signature:(void)
SDL_GetEventFilter	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetEventFilter(SDL_EventFilter * filter,$/;"	p	signature:(SDL_EventFilter * filter, void **userdata)
SDL_GetEventState	/usr/include/SDL2/SDL_events.h	704;"	d
SDL_GetHint	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC const char * SDLCALL SDL_GetHint(const char *name);$/;"	p	signature:(const char *name)
SDL_GetKeyFromName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromName(const char *name);$/;"	p	signature:(const char *name)
SDL_GetKeyFromScancode	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Keycode SDLCALL SDL_GetKeyFromScancode(SDL_Scancode scancode);$/;"	p	signature:(SDL_Scancode scancode)
SDL_GetKeyName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC const char *SDLCALL SDL_GetKeyName(SDL_Keycode key);$/;"	p	signature:(SDL_Keycode key)
SDL_GetKeyboardFocus	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetKeyboardFocus(void);$/;"	p	signature:(void)
SDL_GetKeyboardState	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC const Uint8 *SDLCALL SDL_GetKeyboardState(int *numkeys);$/;"	p	signature:(int *numkeys)
SDL_GetModState	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Keymod SDLCALL SDL_GetModState(void);$/;"	p	signature:(void)
SDL_GetMouseFocus	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetMouseFocus(void);$/;"	p	signature:(void)
SDL_GetMouseState	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetMouseState(int *x, int *y);$/;"	p	signature:(int *x, int *y)
SDL_GetNumAudioDevices	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAudioDevices(int iscapture);$/;"	p	signature:(int iscapture)
SDL_GetNumAudioDrivers	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_GetNumAudioDrivers(void);$/;"	p	signature:(void)
SDL_GetNumDisplayModes	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumDisplayModes(int displayIndex);$/;"	p	signature:(int displayIndex)
SDL_GetNumRenderDrivers	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetNumRenderDrivers(void);$/;"	p	signature:(void)
SDL_GetNumTouchDevices	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC int SDLCALL SDL_GetNumTouchDevices(void);$/;"	p	signature:(void)
SDL_GetNumTouchFingers	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC int SDLCALL SDL_GetNumTouchFingers(SDL_TouchID touchID);$/;"	p	signature:(SDL_TouchID touchID)
SDL_GetNumVideoDisplays	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumVideoDisplays(void);$/;"	p	signature:(void)
SDL_GetNumVideoDrivers	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetNumVideoDrivers(void);$/;"	p	signature:(void)
SDL_GetPerformanceCounter	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceCounter(void);$/;"	p	signature:(void)
SDL_GetPerformanceFrequency	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC Uint64 SDLCALL SDL_GetPerformanceFrequency(void);$/;"	p	signature:(void)
SDL_GetPixelFormatName	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC const char* SDLCALL SDL_GetPixelFormatName(Uint32 format);$/;"	p	signature:(Uint32 format)
SDL_GetPlatform	/usr/include/SDL2/SDL_platform.h	/^extern DECLSPEC const char * SDLCALL SDL_GetPlatform (void);$/;"	p	signature:(void)
SDL_GetPowerInfo	/usr/include/SDL2/SDL_power.h	/^extern DECLSPEC SDL_PowerState SDLCALL SDL_GetPowerInfo(int *secs, int *pct);$/;"	p	signature:(int *secs, int *pct)
SDL_GetPrefPath	/usr/include/SDL2/SDL_filesystem.h	/^extern DECLSPEC char *SDLCALL SDL_GetPrefPath(const char *org, const char *app);$/;"	p	signature:(const char *org, const char *app)
SDL_GetRGB	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_GetRGB(Uint32 pixel,$/;"	p	signature:(Uint32 pixel, const SDL_PixelFormat * format, Uint8 * r, Uint8 * g, Uint8 * b)
SDL_GetRGBA	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC void SDLCALL SDL_GetRGBA(Uint32 pixel,$/;"	p	signature:(Uint32 pixel, const SDL_PixelFormat * format, Uint8 * r, Uint8 * g, Uint8 * b, Uint8 * a)
SDL_GetRelativeMouseMode	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetRelativeMouseMode(void);$/;"	p	signature:(void)
SDL_GetRelativeMouseState	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetRelativeMouseState(int *x, int *y);$/;"	p	signature:(int *x, int *y)
SDL_GetRenderDrawBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDrawBlendMode(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_BlendMode *blendMode)
SDL_GetRenderDrawColor	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDrawColor(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, Uint8 * r, Uint8 * g, Uint8 * b, Uint8 * a)
SDL_GetRenderDriverInfo	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRenderDriverInfo(int index,$/;"	p	signature:(int index, SDL_RendererInfo * info)
SDL_GetRenderTarget	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Texture * SDLCALL SDL_GetRenderTarget(SDL_Renderer *renderer);$/;"	p	signature:(SDL_Renderer *renderer)
SDL_GetRenderer	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_Renderer * SDLCALL SDL_GetRenderer(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetRendererInfo	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRendererInfo(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_RendererInfo * info)
SDL_GetRendererOutputSize	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetRendererOutputSize(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, int *w, int *h)
SDL_GetRevision	/usr/include/SDL2/SDL_version.h	/^extern DECLSPEC const char *SDLCALL SDL_GetRevision(void);$/;"	p	signature:(void)
SDL_GetRevisionNumber	/usr/include/SDL2/SDL_version.h	/^extern DECLSPEC int SDLCALL SDL_GetRevisionNumber(void);$/;"	p	signature:(void)
SDL_GetScancodeFromKey	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromKey(SDL_Keycode key);$/;"	p	signature:(SDL_Keycode key)
SDL_GetScancodeFromName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_Scancode SDLCALL SDL_GetScancodeFromName(const char *name);$/;"	p	signature:(const char *name)
SDL_GetScancodeName	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC const char *SDLCALL SDL_GetScancodeName(SDL_Scancode scancode);$/;"	p	signature:(SDL_Scancode scancode)
SDL_GetShapedWindowMode	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC int SDLCALL SDL_GetShapedWindowMode(SDL_Window *window,SDL_WindowShapeMode *shape_mode);$/;"	p	signature:(SDL_Window *window,SDL_WindowShapeMode *shape_mode)
SDL_GetSurfaceAlphaMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceAlphaMod(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, Uint8 * alpha)
SDL_GetSurfaceBlendMode	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceBlendMode(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, SDL_BlendMode *blendMode)
SDL_GetSurfaceColorMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_GetSurfaceColorMod(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, Uint8 * r, Uint8 * g, Uint8 * b)
SDL_GetSystemRAM	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC int SDLCALL SDL_GetSystemRAM(void);$/;"	p	signature:(void)
SDL_GetTextureAlphaMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureAlphaMod(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, Uint8 * alpha)
SDL_GetTextureBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureBlendMode(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, SDL_BlendMode *blendMode)
SDL_GetTextureColorMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_GetTextureColorMod(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, Uint8 * r, Uint8 * g, Uint8 * b)
SDL_GetThreadID	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC SDL_threadID SDLCALL SDL_GetThreadID(SDL_Thread * thread);$/;"	p	signature:(SDL_Thread * thread)
SDL_GetThreadName	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC const char *SDLCALL SDL_GetThreadName(SDL_Thread *thread);$/;"	p	signature:(SDL_Thread *thread)
SDL_GetTicks	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetTicks(void);$/;"	p	signature:(void)
SDL_GetTouchDevice	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC SDL_TouchID SDLCALL SDL_GetTouchDevice(int index);$/;"	p	signature:(int index)
SDL_GetTouchFinger	/usr/include/SDL2/SDL_touch.h	/^extern DECLSPEC SDL_Finger * SDLCALL SDL_GetTouchFinger(SDL_TouchID touchID, int index);$/;"	p	signature:(SDL_TouchID touchID, int index)
SDL_GetVersion	/usr/include/SDL2/SDL_version.h	/^extern DECLSPEC void SDLCALL SDL_GetVersion(SDL_version * ver);$/;"	p	signature:(SDL_version * ver)
SDL_GetVideoDriver	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetVideoDriver(int index);$/;"	p	signature:(int index)
SDL_GetWindowBrightness	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC float SDLCALL SDL_GetWindowBrightness(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowData	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void *SDLCALL SDL_GetWindowData(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, const char *name)
SDL_GetWindowDisplayIndex	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowDisplayIndex(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowDisplayMode(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, SDL_DisplayMode * mode)
SDL_GetWindowFlags	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowFlags(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowFromID	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Window * SDLCALL SDL_GetWindowFromID(Uint32 id);$/;"	p	signature:(Uint32 id)
SDL_GetWindowGammaRamp	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_GetWindowGammaRamp(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, Uint16 * red, Uint16 * green, Uint16 * blue)
SDL_GetWindowGrab	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetWindowGrab(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowID	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowID(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowMaximumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowMaximumSize(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int *w, int *h)
SDL_GetWindowMinimumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowMinimumSize(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int *w, int *h)
SDL_GetWindowPixelFormat	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC Uint32 SDLCALL SDL_GetWindowPixelFormat(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowPosition	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowPosition(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int *x, int *y)
SDL_GetWindowSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_GetWindowSize(SDL_Window * window, int *w,$/;"	p	signature:(SDL_Window * window, int *w, int *h)
SDL_GetWindowSurface	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_Surface * SDLCALL SDL_GetWindowSurface(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowTitle	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC const char *SDLCALL SDL_GetWindowTitle(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_GetWindowWMInfo	/usr/include/SDL2/SDL_syswm.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_GetWindowWMInfo(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, SDL_SysWMinfo * info)
SDL_HAPTIC_AUTOCENTER	/usr/include/SDL2/SDL_haptic.h	285;"	d
SDL_HAPTIC_CARTESIAN	/usr/include/SDL2/SDL_haptic.h	322;"	d
SDL_HAPTIC_CONSTANT	/usr/include/SDL2/SDL_haptic.h	157;"	d
SDL_HAPTIC_CUSTOM	/usr/include/SDL2/SDL_haptic.h	263;"	d
SDL_HAPTIC_DAMPER	/usr/include/SDL2/SDL_haptic.h	236;"	d
SDL_HAPTIC_FRICTION	/usr/include/SDL2/SDL_haptic.h	256;"	d
SDL_HAPTIC_GAIN	/usr/include/SDL2/SDL_haptic.h	276;"	d
SDL_HAPTIC_INERTIA	/usr/include/SDL2/SDL_haptic.h	246;"	d
SDL_HAPTIC_INFINITY	/usr/include/SDL2/SDL_haptic.h	344;"	d
SDL_HAPTIC_LEFTRIGHT	/usr/include/SDL2/SDL_haptic.h	177;"	d
SDL_HAPTIC_LINUX	/usr/include/SDL2/SDL_config.h	235;"	d
SDL_HAPTIC_PAUSE	/usr/include/SDL2/SDL_haptic.h	302;"	d
SDL_HAPTIC_POLAR	/usr/include/SDL2/SDL_haptic.h	315;"	d
SDL_HAPTIC_RAMP	/usr/include/SDL2/SDL_haptic.h	216;"	d
SDL_HAPTIC_SAWTOOTHDOWN	/usr/include/SDL2/SDL_haptic.h	207;"	d
SDL_HAPTIC_SAWTOOTHUP	/usr/include/SDL2/SDL_haptic.h	198;"	d
SDL_HAPTIC_SINE	/usr/include/SDL2/SDL_haptic.h	166;"	d
SDL_HAPTIC_SPHERICAL	/usr/include/SDL2/SDL_haptic.h	329;"	d
SDL_HAPTIC_SPRING	/usr/include/SDL2/SDL_haptic.h	226;"	d
SDL_HAPTIC_STATUS	/usr/include/SDL2/SDL_haptic.h	294;"	d
SDL_HAPTIC_TRIANGLE	/usr/include/SDL2/SDL_haptic.h	189;"	d
SDL_HAT_CENTERED	/usr/include/SDL2/SDL_joystick.h	191;"	d
SDL_HAT_DOWN	/usr/include/SDL2/SDL_joystick.h	194;"	d
SDL_HAT_LEFT	/usr/include/SDL2/SDL_joystick.h	195;"	d
SDL_HAT_LEFTDOWN	/usr/include/SDL2/SDL_joystick.h	199;"	d
SDL_HAT_LEFTUP	/usr/include/SDL2/SDL_joystick.h	198;"	d
SDL_HAT_RIGHT	/usr/include/SDL2/SDL_joystick.h	193;"	d
SDL_HAT_RIGHTDOWN	/usr/include/SDL2/SDL_joystick.h	197;"	d
SDL_HAT_RIGHTUP	/usr/include/SDL2/SDL_joystick.h	196;"	d
SDL_HAT_UP	/usr/include/SDL2/SDL_joystick.h	192;"	d
SDL_HINT_ACCELEROMETER_AS_JOYSTICK	/usr/include/SDL2/SDL_hints.h	236;"	d
SDL_HINT_ALLOW_TOPMOST	/usr/include/SDL2/SDL_hints.h	282;"	d
SDL_HINT_DEFAULT	/usr/include/SDL2/SDL_hints.h	/^    SDL_HINT_DEFAULT,$/;"	e	enum:__anon62
SDL_HINT_FRAMEBUFFER_ACCELERATION	/usr/include/SDL2/SDL_hints.h	65;"	d
SDL_HINT_GAMECONTROLLERCONFIG	/usr/include/SDL2/SDL_hints.h	257;"	d
SDL_HINT_GRAB_KEYBOARD	/usr/include/SDL2/SDL_hints.h	184;"	d
SDL_HINT_IDLE_TIMER_DISABLED	/usr/include/SDL2/SDL_hints.h	215;"	d
SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS	/usr/include/SDL2/SDL_hints.h	271;"	d
SDL_HINT_MAC_CTRL_CLICK_EMULATE_RIGHT_CLICK	/usr/include/SDL2/SDL_hints.h	313;"	d
SDL_HINT_MOUSE_RELATIVE_MODE_WARP	/usr/include/SDL2/SDL_hints.h	195;"	d
SDL_HINT_NORMAL	/usr/include/SDL2/SDL_hints.h	/^    SDL_HINT_NORMAL,$/;"	e	enum:__anon62
SDL_HINT_ORIENTATIONS	/usr/include/SDL2/SDL_hints.h	226;"	d
SDL_HINT_OVERRIDE	/usr/include/SDL2/SDL_hints.h	/^    SDL_HINT_OVERRIDE$/;"	e	enum:__anon62
SDL_HINT_RENDER_DIRECT3D_THREADSAFE	/usr/include/SDL2/SDL_hints.h	106;"	d
SDL_HINT_RENDER_DRIVER	/usr/include/SDL2/SDL_hints.h	84;"	d
SDL_HINT_RENDER_OPENGL_SHADERS	/usr/include/SDL2/SDL_hints.h	95;"	d
SDL_HINT_RENDER_SCALE_QUALITY	/usr/include/SDL2/SDL_hints.h	118;"	d
SDL_HINT_RENDER_VSYNC	/usr/include/SDL2/SDL_hints.h	129;"	d
SDL_HINT_TIMER_RESOLUTION	/usr/include/SDL2/SDL_hints.h	299;"	d
SDL_HINT_VIDEO_ALLOW_SCREENSAVER	/usr/include/SDL2/SDL_hints.h	140;"	d
SDL_HINT_VIDEO_HIGHDPI_DISABLED	/usr/include/SDL2/SDL_hints.h	305;"	d
SDL_HINT_VIDEO_MAC_FULLSCREEN_SPACES	/usr/include/SDL2/SDL_hints.h	367;"	d
SDL_HINT_VIDEO_MINIMIZE_ON_FOCUS_LOSS	/usr/include/SDL2/SDL_hints.h	201;"	d
SDL_HINT_VIDEO_WINDOW_SHARE_PIXEL_FORMAT	/usr/include/SDL2/SDL_hints.h	348;"	d
SDL_HINT_VIDEO_WIN_D3DCOMPILER	/usr/include/SDL2/SDL_hints.h	329;"	d
SDL_HINT_VIDEO_X11_XINERAMA	/usr/include/SDL2/SDL_hints.h	162;"	d
SDL_HINT_VIDEO_X11_XRANDR	/usr/include/SDL2/SDL_hints.h	173;"	d
SDL_HINT_VIDEO_X11_XVIDMODE	/usr/include/SDL2/SDL_hints.h	151;"	d
SDL_HINT_XINPUT_ENABLED	/usr/include/SDL2/SDL_hints.h	246;"	d
SDL_Haptic	/usr/include/SDL2/SDL_haptic.h	/^typedef struct _SDL_Haptic SDL_Haptic;$/;"	t	typeref:struct:_SDL_Haptic
SDL_HapticClose	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC void SDLCALL SDL_HapticClose(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticCondition	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticCondition$/;"	s
SDL_HapticCondition	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticCondition;$/;"	t	typeref:struct:SDL_HapticCondition
SDL_HapticCondition::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::center	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 center[3];       \/**< Position of the dead zone. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::deadband	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 deadband[3];     \/**< Size of the dead zone. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect - Not used ATM. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::left_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 left_coeff[3];   \/**< How fast to increase the force towards the negative side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::left_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 left_sat[3];     \/**< Level when joystick is to the negative side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::right_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 right_coeff[3];  \/**< How fast to increase the force towards the positive side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::right_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 right_sat[3];    \/**< Level when joystick is to the positive side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticCondition::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,$/;"	m	struct:SDL_HapticCondition	access:public
SDL_HapticConstant	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticConstant$/;"	s
SDL_HapticConstant	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticConstant;$/;"	t	typeref:struct:SDL_HapticConstant
SDL_HapticConstant::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::level	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 level;           \/**< Strength of the constant effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticConstant::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CONSTANT *\/$/;"	m	struct:SDL_HapticConstant	access:public
SDL_HapticCustom	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticCustom$/;"	s
SDL_HapticCustom	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticCustom;$/;"	t	typeref:struct:SDL_HapticCustom
SDL_HapticCustom::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::channels	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 channels;         \/**< Axes to use, minimum of one. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::data	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 *data;           \/**< Should contain channels*samples items. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;          \/**< Sample periods. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::samples	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 samples;         \/**< Amount of samples. *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticCustom::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CUSTOM *\/$/;"	m	struct:SDL_HapticCustom	access:public
SDL_HapticDestroyEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC void SDLCALL SDL_HapticDestroyEffect(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, int effect)
SDL_HapticDirection	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticDirection$/;"	s
SDL_HapticDirection	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticDirection;$/;"	t	typeref:struct:SDL_HapticDirection
SDL_HapticDirection::dir	/usr/include/SDL2/SDL_haptic.h	/^    Sint32 dir[3];      \/**< The encoded direction. *\/$/;"	m	struct:SDL_HapticDirection	access:public
SDL_HapticDirection::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 type;         \/**< The type of encoding. *\/$/;"	m	struct:SDL_HapticDirection	access:public
SDL_HapticEffect	/usr/include/SDL2/SDL_haptic.h	/^typedef union SDL_HapticEffect$/;"	u
SDL_HapticEffect	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticEffect;$/;"	t	typeref:union:SDL_HapticEffect
SDL_HapticEffect::condition	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCondition condition;  \/**< Condition effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffect::constant	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticConstant constant;    \/**< Constant effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffect::custom	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCustom custom;        \/**< Custom effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffect::leftright	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticLeftRight leftright;  \/**< Left\/Right effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffect::periodic	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticPeriodic periodic;    \/**< Periodic effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffect::ramp	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticRamp ramp;            \/**< Ramp effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffect::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;                    \/**< Effect type. *\/$/;"	m	union:SDL_HapticEffect	access:public
SDL_HapticEffectSupported	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticEffectSupported(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, SDL_HapticEffect * effect)
SDL_HapticGetEffectStatus	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticGetEffectStatus(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, int effect)
SDL_HapticIndex	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticIndex(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticLeftRight	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticLeftRight$/;"	s
SDL_HapticLeftRight	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticLeftRight;$/;"	t	typeref:struct:SDL_HapticLeftRight
SDL_HapticLeftRight::large_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 large_magnitude; \/**< Control of the large controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
SDL_HapticLeftRight::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
SDL_HapticLeftRight::small_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 small_magnitude; \/**< Control of the small controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
SDL_HapticLeftRight::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_LEFTRIGHT *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
SDL_HapticName	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC const char *SDLCALL SDL_HapticName(int device_index);$/;"	p	signature:(int device_index)
SDL_HapticNewEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNewEffect(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, SDL_HapticEffect * effect)
SDL_HapticNumAxes	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumAxes(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticNumEffects	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumEffects(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticNumEffectsPlaying	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticNumEffectsPlaying(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticOpen	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpen(int device_index);$/;"	p	signature:(int device_index)
SDL_HapticOpenFromJoystick	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromJoystick(SDL_Joystick *$/;"	p	signature:(SDL_Joystick * joystick)
SDL_HapticOpenFromMouse	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC SDL_Haptic *SDLCALL SDL_HapticOpenFromMouse(void);$/;"	p	signature:(void)
SDL_HapticOpened	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticOpened(int device_index);$/;"	p	signature:(int device_index)
SDL_HapticPause	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticPause(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticPeriodic	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticPeriodic$/;"	s
SDL_HapticPeriodic	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticPeriodic;$/;"	t	typeref:struct:SDL_HapticPeriodic
SDL_HapticPeriodic::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;      \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;       \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length; \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;  \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;    \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;      \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 magnitude;   \/**< Peak value. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::offset	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 offset;      \/**< Mean value of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;      \/**< Period of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::phase	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 phase;       \/**< Horizontal shift given by hundredth of a cycle. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticPeriodic::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;        \/**< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,$/;"	m	struct:SDL_HapticPeriodic	access:public
SDL_HapticQuery	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC unsigned int SDLCALL SDL_HapticQuery(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticRamp	/usr/include/SDL2/SDL_haptic.h	/^typedef struct SDL_HapticRamp$/;"	s
SDL_HapticRamp	/usr/include/SDL2/SDL_haptic.h	/^} SDL_HapticRamp;$/;"	t	typeref:struct:SDL_HapticRamp
SDL_HapticRamp::attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::end	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 end;             \/**< Ending strength level. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::start	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 start;           \/**< Beginning strength level. *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRamp::type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_RAMP *\/$/;"	m	struct:SDL_HapticRamp	access:public
SDL_HapticRumbleInit	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleInit(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticRumblePlay	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumblePlay(SDL_Haptic * haptic, float strength, Uint32 length );$/;"	p	signature:(SDL_Haptic * haptic, float strength, Uint32 length )
SDL_HapticRumbleStop	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleStop(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticRumbleSupported	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRumbleSupported(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticRunEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticRunEffect(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, int effect, Uint32 iterations)
SDL_HapticSetAutocenter	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticSetAutocenter(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, int autocenter)
SDL_HapticSetGain	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticSetGain(SDL_Haptic * haptic, int gain);$/;"	p	signature:(SDL_Haptic * haptic, int gain)
SDL_HapticStopAll	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticStopAll(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticStopEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticStopEffect(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, int effect)
SDL_HapticUnpause	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticUnpause(SDL_Haptic * haptic);$/;"	p	signature:(SDL_Haptic * haptic)
SDL_HapticUpdateEffect	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_HapticUpdateEffect(SDL_Haptic * haptic,$/;"	p	signature:(SDL_Haptic * haptic, int effect, SDL_HapticEffect * data)
SDL_Has3DNow	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_Has3DNow(void);$/;"	p	signature:(void)
SDL_HasAVX	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAVX(void);$/;"	p	signature:(void)
SDL_HasAltiVec	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasAltiVec(void);$/;"	p	signature:(void)
SDL_HasClipboardText	/usr/include/SDL2/SDL_clipboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasClipboardText(void);$/;"	p	signature:(void)
SDL_HasEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasEvent(Uint32 type);$/;"	p	signature:(Uint32 type)
SDL_HasEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasEvents(Uint32 minType, Uint32 maxType);$/;"	p	signature:(Uint32 minType, Uint32 maxType)
SDL_HasIntersection	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasIntersection(const SDL_Rect * A,$/;"	p	signature:(const SDL_Rect * A, const SDL_Rect * B)
SDL_HasMMX	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasMMX(void);$/;"	p	signature:(void)
SDL_HasRDTSC	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasRDTSC(void);$/;"	p	signature:(void)
SDL_HasSSE	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE(void);$/;"	p	signature:(void)
SDL_HasSSE2	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE2(void);$/;"	p	signature:(void)
SDL_HasSSE3	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE3(void);$/;"	p	signature:(void)
SDL_HasSSE41	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE41(void);$/;"	p	signature:(void)
SDL_HasSSE42	/usr/include/SDL2/SDL_cpuinfo.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasSSE42(void);$/;"	p	signature:(void)
SDL_HasScreenKeyboardSupport	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_HasScreenKeyboardSupport(void);$/;"	p	signature:(void)
SDL_HideWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_HideWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_HintCallback	/usr/include/SDL2/SDL_hints.h	/^typedef void (*SDL_HintCallback)(void *userdata, const char *name, const char *oldValue, const char *newValue);$/;"	t
SDL_HintPriority	/usr/include/SDL2/SDL_hints.h	/^} SDL_HintPriority;$/;"	t	typeref:enum:__anon62
SDL_ICONV_E2BIG	/usr/include/SDL2/SDL_stdinc.h	363;"	d
SDL_ICONV_EILSEQ	/usr/include/SDL2/SDL_stdinc.h	364;"	d
SDL_ICONV_EINVAL	/usr/include/SDL2/SDL_stdinc.h	365;"	d
SDL_ICONV_ERROR	/usr/include/SDL2/SDL_stdinc.h	362;"	d
SDL_IGNORE	/usr/include/SDL2/SDL_events.h	689;"	d
SDL_INIT_AUDIO	/usr/include/SDL2/SDL.h	111;"	d
SDL_INIT_EVENTS	/usr/include/SDL2/SDL.h	116;"	d
SDL_INIT_EVERYTHING	/usr/include/SDL2/SDL.h	118;"	d
SDL_INIT_GAMECONTROLLER	/usr/include/SDL2/SDL.h	115;"	d
SDL_INIT_HAPTIC	/usr/include/SDL2/SDL.h	114;"	d
SDL_INIT_JOYSTICK	/usr/include/SDL2/SDL.h	113;"	d
SDL_INIT_NOPARACHUTE	/usr/include/SDL2/SDL.h	117;"	d
SDL_INIT_TIMER	/usr/include/SDL2/SDL.h	110;"	d
SDL_INIT_VIDEO	/usr/include/SDL2/SDL.h	112;"	d
SDL_INLINE	/usr/include/SDL2/begin_code.h	104;"	d
SDL_INLINE	/usr/include/SDL2/begin_code.h	109;"	d
SDL_INLINE	/usr/include/SDL2/begin_code.h	114;"	d
SDL_INPUT_LINUXEV	/usr/include/SDL2/SDL_config.h	223;"	d
SDL_INPUT_LINUXKD	/usr/include/SDL2/SDL_config.h	224;"	d
SDL_INVALID_SHAPE_ARGUMENT	/usr/include/SDL2/SDL_shape.h	43;"	d
SDL_ISPIXELFORMAT_ALPHA	/usr/include/SDL2/SDL_pixels.h	137;"	d
SDL_ISPIXELFORMAT_FOURCC	/usr/include/SDL2/SDL_pixels.h	145;"	d
SDL_ISPIXELFORMAT_INDEXED	/usr/include/SDL2/SDL_pixels.h	131;"	d
SDL_Init	/usr/include/SDL2/SDL.h	/^extern DECLSPEC int SDLCALL SDL_Init(Uint32 flags);$/;"	p	signature:(Uint32 flags)
SDL_InitSubSystem	/usr/include/SDL2/SDL.h	/^extern DECLSPEC int SDLCALL SDL_InitSubSystem(Uint32 flags);$/;"	p	signature:(Uint32 flags)
SDL_IntersectRect	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IntersectRect(const SDL_Rect * A,$/;"	p	signature:(const SDL_Rect * A, const SDL_Rect * B, SDL_Rect * result)
SDL_IntersectRectAndLine	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IntersectRectAndLine(const SDL_Rect *$/;"	p	signature:(const SDL_Rect * rect, int *X1, int *Y1, int *X2, int *Y2)
SDL_InvalidParamError	/usr/include/SDL2/SDL_error.h	54;"	d
SDL_IsGameController	/usr/include/SDL2/SDL_gamecontroller.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsGameController(int joystick_index);$/;"	p	signature:(int joystick_index)
SDL_IsScreenKeyboardShown	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsScreenKeyboardShown(SDL_Window *window);$/;"	p	signature:(SDL_Window *window)
SDL_IsScreenSaverEnabled	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsScreenSaverEnabled(void);$/;"	p	signature:(void)
SDL_IsShapedWindow	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsShapedWindow(const SDL_Window *window);$/;"	p	signature:(const SDL_Window *window)
SDL_IsTextInputActive	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_IsTextInputActive(void);$/;"	p	signature:(void)
SDL_JOYAXISMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYAXISMOTION  = 0x600, \/**< Joystick axis motion *\/$/;"	e	enum:__anon11
SDL_JOYBALLMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYBALLMOTION,          \/**< Joystick trackball motion *\/$/;"	e	enum:__anon11
SDL_JOYBUTTONDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYBUTTONDOWN,          \/**< Joystick button pressed *\/$/;"	e	enum:__anon11
SDL_JOYBUTTONUP	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYBUTTONUP,            \/**< Joystick button released *\/$/;"	e	enum:__anon11
SDL_JOYDEVICEADDED	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYDEVICEADDED,         \/**< A new joystick has been inserted into the system *\/$/;"	e	enum:__anon11
SDL_JOYDEVICEREMOVED	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYDEVICEREMOVED,       \/**< An opened joystick has been removed *\/$/;"	e	enum:__anon11
SDL_JOYHATMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_JOYHATMOTION,           \/**< Joystick hat position change *\/$/;"	e	enum:__anon11
SDL_JOYSTICK_LINUX	/usr/include/SDL2/SDL_config.h	230;"	d
SDL_JoyAxisEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyAxisEvent$/;"	s
SDL_JoyAxisEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyAxisEvent;$/;"	t	typeref:struct:SDL_JoyAxisEvent
SDL_JoyAxisEvent::axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The joystick axis index *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYAXISMOTION *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyAxisEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
SDL_JoyBallEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyBallEvent$/;"	s
SDL_JoyBallEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyBallEvent;$/;"	t	typeref:struct:SDL_JoyBallEvent
SDL_JoyBallEvent::ball	/usr/include/SDL2/SDL_events.h	/^    Uint8 ball;         \/**< The joystick trackball index *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBALLMOTION *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::xrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyBallEvent::yrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
SDL_JoyButtonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyButtonEvent$/;"	s
SDL_JoyButtonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyButtonEvent;$/;"	t	typeref:struct:SDL_JoyButtonEvent
SDL_JoyButtonEvent::button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The joystick button index *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyButtonEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyButtonEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyButtonEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyButtonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyButtonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyButtonEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
SDL_JoyDeviceEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyDeviceEvent$/;"	s
SDL_JoyDeviceEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyDeviceEvent;$/;"	t	typeref:struct:SDL_JoyDeviceEvent
SDL_JoyDeviceEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyDeviceEvent	access:public
SDL_JoyDeviceEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED *\/$/;"	m	struct:SDL_JoyDeviceEvent	access:public
SDL_JoyDeviceEvent::which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the REMOVED event *\/$/;"	m	struct:SDL_JoyDeviceEvent	access:public
SDL_JoyHatEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_JoyHatEvent$/;"	s
SDL_JoyHatEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_JoyHatEvent;$/;"	t	typeref:struct:SDL_JoyHatEvent
SDL_JoyHatEvent::hat	/usr/include/SDL2/SDL_events.h	/^    Uint8 hat;          \/**< The joystick hat index *\/$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_JoyHatEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_JoyHatEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_JoyHatEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_JoyHatEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYHATMOTION *\/$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_JoyHatEvent::value	/usr/include/SDL2/SDL_events.h	/^    Uint8 value;        \/**< The hat position value.$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_JoyHatEvent::which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyHatEvent	access:public
SDL_Joystick	/usr/include/SDL2/SDL_joystick.h	/^typedef struct _SDL_Joystick SDL_Joystick;$/;"	t	typeref:struct:_SDL_Joystick
SDL_JoystickClose	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickClose(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickEventState	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickEventState(int state);$/;"	p	signature:(int state)
SDL_JoystickGUID	/usr/include/SDL2/SDL_joystick.h	/^} SDL_JoystickGUID;$/;"	t	typeref:struct:__anon60
SDL_JoystickGetAttached	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_JoystickGetAttached(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickGetAxis	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Sint16 SDLCALL SDL_JoystickGetAxis(SDL_Joystick * joystick,$/;"	p	signature:(SDL_Joystick * joystick, int axis)
SDL_JoystickGetBall	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickGetBall(SDL_Joystick * joystick,$/;"	p	signature:(SDL_Joystick * joystick, int ball, int *dx, int *dy)
SDL_JoystickGetButton	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetButton(SDL_Joystick * joystick,$/;"	p	signature:(SDL_Joystick * joystick, int button)
SDL_JoystickGetDeviceGUID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetDeviceGUID(int device_index);$/;"	p	signature:(int device_index)
SDL_JoystickGetGUID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUID(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickGetGUIDFromString	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickGUID SDLCALL SDL_JoystickGetGUIDFromString(const char *pchGUID);$/;"	p	signature:(const char *pchGUID)
SDL_JoystickGetGUIDString	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickGetGUIDString(SDL_JoystickGUID guid, char *pszGUID, int cbGUID);$/;"	p	signature:(SDL_JoystickGUID guid, char *pszGUID, int cbGUID)
SDL_JoystickGetHat	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC Uint8 SDLCALL SDL_JoystickGetHat(SDL_Joystick * joystick,$/;"	p	signature:(SDL_Joystick * joystick, int hat)
SDL_JoystickID	/usr/include/SDL2/SDL_joystick.h	/^typedef Sint32 SDL_JoystickID;$/;"	t
SDL_JoystickInstanceID	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_JoystickID SDLCALL SDL_JoystickInstanceID(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickIsHaptic	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_JoystickIsHaptic(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickName	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC const char *SDLCALL SDL_JoystickName(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickNameForIndex	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC const char *SDLCALL SDL_JoystickNameForIndex(int device_index);$/;"	p	signature:(int device_index)
SDL_JoystickNumAxes	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumAxes(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickNumBalls	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumBalls(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickNumButtons	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumButtons(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickNumHats	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_JoystickNumHats(SDL_Joystick * joystick);$/;"	p	signature:(SDL_Joystick * joystick)
SDL_JoystickOpen	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC SDL_Joystick *SDLCALL SDL_JoystickOpen(int device_index);$/;"	p	signature:(int device_index)
SDL_JoystickUpdate	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC void SDLCALL SDL_JoystickUpdate(void);$/;"	p	signature:(void)
SDL_KEYDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_KEYDOWN        = 0x300, \/**< Key pressed *\/$/;"	e	enum:__anon11
SDL_KEYUP	/usr/include/SDL2/SDL_events.h	/^    SDL_KEYUP,                  \/**< Key released *\/$/;"	e	enum:__anon11
SDL_KeyboardEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_KeyboardEvent$/;"	s
SDL_KeyboardEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_KeyboardEvent;$/;"	t	typeref:struct:SDL_KeyboardEvent
SDL_KeyboardEvent::keysym	/usr/include/SDL2/SDL_events.h	/^    SDL_Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::repeat	/usr/include/SDL2/SDL_events.h	/^    Uint8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_KEYDOWN or ::SDL_KEYUP *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_KeyboardEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
SDL_Keycode	/usr/include/SDL2/SDL_keycode.h	/^typedef Sint32 SDL_Keycode;$/;"	t
SDL_Keymod	/usr/include/SDL2/SDL_keycode.h	/^} SDL_Keymod;$/;"	t	typeref:enum:__anon70
SDL_Keysym	/usr/include/SDL2/SDL_keyboard.h	/^typedef struct SDL_Keysym$/;"	s
SDL_Keysym	/usr/include/SDL2/SDL_keyboard.h	/^} SDL_Keysym;$/;"	t	typeref:struct:SDL_Keysym
SDL_Keysym::mod	/usr/include/SDL2/SDL_keyboard.h	/^    Uint16 mod;                 \/**< current key modifiers *\/$/;"	m	struct:SDL_Keysym	access:public
SDL_Keysym::scancode	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	m	struct:SDL_Keysym	access:public
SDL_Keysym::sym	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	m	struct:SDL_Keysym	access:public
SDL_Keysym::unused	/usr/include/SDL2/SDL_keyboard.h	/^    Uint32 unused;$/;"	m	struct:SDL_Keysym	access:public
SDL_LASTERROR	/usr/include/SDL2/SDL_error.h	/^    SDL_LASTERROR$/;"	e	enum:__anon29
SDL_LASTEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_LASTEVENT    = 0xFFFF$/;"	e	enum:__anon11
SDL_LIL_ENDIAN	/usr/include/SDL2/SDL_endian.h	37;"	d
SDL_LINE	/usr/include/SDL2/SDL_assert.h	72;"	d
SDL_LOADSO_DISABLED	/usr/include/SDL2/SDL_config.h	185;"	d
SDL_LOADSO_DLOPEN	/usr/include/SDL2/SDL_config.h	241;"	d
SDL_LOG_CATEGORY_APPLICATION	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_APPLICATION,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_ASSERT	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_ASSERT,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_AUDIO	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_AUDIO,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_CUSTOM	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_CUSTOM$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_ERROR	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_ERROR,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_INPUT	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_INPUT,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RENDER	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RENDER,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED1	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED1,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED10	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED10,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED2	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED2,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED3	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED3,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED4	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED4,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED5	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED5,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED6	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED6,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED7	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED7,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED8	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED8,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_RESERVED9	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_RESERVED9,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_SYSTEM	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_SYSTEM,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_TEST	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_TEST,$/;"	e	enum:__anon63
SDL_LOG_CATEGORY_VIDEO	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_CATEGORY_VIDEO,$/;"	e	enum:__anon63
SDL_LOG_PRIORITY_CRITICAL	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_CRITICAL,$/;"	e	enum:__anon64
SDL_LOG_PRIORITY_DEBUG	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_DEBUG,$/;"	e	enum:__anon64
SDL_LOG_PRIORITY_ERROR	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_ERROR,$/;"	e	enum:__anon64
SDL_LOG_PRIORITY_INFO	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_INFO,$/;"	e	enum:__anon64
SDL_LOG_PRIORITY_VERBOSE	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_VERBOSE = 1,$/;"	e	enum:__anon64
SDL_LOG_PRIORITY_WARN	/usr/include/SDL2/SDL_log.h	/^    SDL_LOG_PRIORITY_WARN,$/;"	e	enum:__anon64
SDL_LoadBMP	/usr/include/SDL2/SDL_surface.h	182;"	d
SDL_LoadBMP_RW	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_Surface *SDLCALL SDL_LoadBMP_RW(SDL_RWops * src,$/;"	p	signature:(SDL_RWops * src, int freesrc)
SDL_LoadDollarTemplates	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_LoadDollarTemplates(SDL_TouchID touchId, SDL_RWops *src);$/;"	p	signature:(SDL_TouchID touchId, SDL_RWops *src)
SDL_LoadFunction	/usr/include/SDL2/SDL_loadso.h	/^extern DECLSPEC void *SDLCALL SDL_LoadFunction(void *handle,$/;"	p	signature:(void *handle, const char *name)
SDL_LoadObject	/usr/include/SDL2/SDL_loadso.h	/^extern DECLSPEC void *SDLCALL SDL_LoadObject(const char *sofile);$/;"	p	signature:(const char *sofile)
SDL_LoadWAV	/usr/include/SDL2/SDL_audio.h	419;"	d
SDL_LoadWAV_RW	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioSpec *SDLCALL SDL_LoadWAV_RW(SDL_RWops * src,$/;"	p	signature:(SDL_RWops * src, int freesrc, SDL_AudioSpec * spec, Uint8 ** audio_buf, Uint32 * audio_len)
SDL_LockAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudio(void);$/;"	p	signature:(void)
SDL_LockAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_LockAudioDevice(SDL_AudioDeviceID dev);$/;"	p	signature:(SDL_AudioDeviceID dev)
SDL_LockMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_LockMutex(SDL_mutex * mutex);$/;"	p	signature:(SDL_mutex * mutex)
SDL_LockSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LockSurface(SDL_Surface * surface);$/;"	p	signature:(SDL_Surface * surface)
SDL_LockTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_LockTexture(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, const SDL_Rect * rect, void **pixels, int *pitch)
SDL_Log	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_Log(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
SDL_LogCritical	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogCritical(int category, const char *fmt, ...);$/;"	p	signature:(int category, const char *fmt, ...)
SDL_LogDebug	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogDebug(int category, const char *fmt, ...);$/;"	p	signature:(int category, const char *fmt, ...)
SDL_LogError	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogError(int category, const char *fmt, ...);$/;"	p	signature:(int category, const char *fmt, ...)
SDL_LogGetOutputFunction	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogGetOutputFunction(SDL_LogOutputFunction *callback, void **userdata);$/;"	p	signature:(SDL_LogOutputFunction *callback, void **userdata)
SDL_LogGetPriority	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC SDL_LogPriority SDLCALL SDL_LogGetPriority(int category);$/;"	p	signature:(int category)
SDL_LogInfo	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogInfo(int category, const char *fmt, ...);$/;"	p	signature:(int category, const char *fmt, ...)
SDL_LogMessage	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogMessage(int category,$/;"	p	signature:(int category, SDL_LogPriority priority, const char *fmt, ...)
SDL_LogMessageV	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogMessageV(int category,$/;"	p	signature:(int category, SDL_LogPriority priority, const char *fmt, va_list ap)
SDL_LogOutputFunction	/usr/include/SDL2/SDL_log.h	/^typedef void (*SDL_LogOutputFunction)(void *userdata, int category, SDL_LogPriority priority, const char *message);$/;"	t
SDL_LogPriority	/usr/include/SDL2/SDL_log.h	/^} SDL_LogPriority;$/;"	t	typeref:enum:__anon64
SDL_LogResetPriorities	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogResetPriorities(void);$/;"	p	signature:(void)
SDL_LogSetAllPriority	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetAllPriority(SDL_LogPriority priority);$/;"	p	signature:(SDL_LogPriority priority)
SDL_LogSetOutputFunction	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetOutputFunction(SDL_LogOutputFunction callback, void *userdata);$/;"	p	signature:(SDL_LogOutputFunction callback, void *userdata)
SDL_LogSetPriority	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogSetPriority(int category,$/;"	p	signature:(int category, SDL_LogPriority priority)
SDL_LogVerbose	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogVerbose(int category, const char *fmt, ...);$/;"	p	signature:(int category, const char *fmt, ...)
SDL_LogWarn	/usr/include/SDL2/SDL_log.h	/^extern DECLSPEC void SDLCALL SDL_LogWarn(int category, const char *fmt, ...);$/;"	p	signature:(int category, const char *fmt, ...)
SDL_LowerBlit	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlit$/;"	p	signature:(SDL_Surface * src, SDL_Rect * srcrect, SDL_Surface * dst, SDL_Rect * dstrect)
SDL_LowerBlitScaled	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_LowerBlitScaled$/;"	p	signature:(SDL_Surface * src, SDL_Rect * srcrect, SDL_Surface * dst, SDL_Rect * dstrect)
SDL_MAIN_AVAILABLE	/usr/include/SDL2/SDL_main.h	40;"	d
SDL_MAIN_NEEDED	/usr/include/SDL2/SDL_main.h	48;"	d
SDL_MAIN_NEEDED	/usr/include/SDL2/SDL_main.h	56;"	d
SDL_MAJOR_VERSION	/usr/include/SDL2/SDL_version.h	60;"	d
SDL_MAX_LOG_MESSAGE	/usr/include/SDL2/SDL_log.h	54;"	d
SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTON_ESCAPEKEY_DEFAULT = 0x00000002   \/**< Marks the default button when escape is hit *\/$/;"	e	enum:__anon41
SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_BUTTON_RETURNKEY_DEFAULT = 0x00000001,  \/**< Marks the default button when return is hit *\/$/;"	e	enum:__anon41
SDL_MESSAGEBOX_COLOR_BACKGROUND	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BACKGROUND,$/;"	e	enum:__anon44
SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_BACKGROUND,$/;"	e	enum:__anon44
SDL_MESSAGEBOX_COLOR_BUTTON_BORDER	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_BORDER,$/;"	e	enum:__anon44
SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_BUTTON_SELECTED,$/;"	e	enum:__anon44
SDL_MESSAGEBOX_COLOR_MAX	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_MAX$/;"	e	enum:__anon44
SDL_MESSAGEBOX_COLOR_TEXT	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_COLOR_TEXT,$/;"	e	enum:__anon44
SDL_MESSAGEBOX_ERROR	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_ERROR        = 0x00000010,   \/**< error dialog *\/$/;"	e	enum:__anon40
SDL_MESSAGEBOX_INFORMATION	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_INFORMATION  = 0x00000040    \/**< informational dialog *\/$/;"	e	enum:__anon40
SDL_MESSAGEBOX_WARNING	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MESSAGEBOX_WARNING      = 0x00000020,   \/**< warning dialog *\/$/;"	e	enum:__anon40
SDL_MINOR_VERSION	/usr/include/SDL2/SDL_version.h	61;"	d
SDL_MIX_MAXVOLUME	/usr/include/SDL2/SDL_audio.h	456;"	d
SDL_MOUSEBUTTONDOWN	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEBUTTONDOWN,        \/**< Mouse button pressed *\/$/;"	e	enum:__anon11
SDL_MOUSEBUTTONUP	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEBUTTONUP,          \/**< Mouse button released *\/$/;"	e	enum:__anon11
SDL_MOUSEMOTION	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEMOTION    = 0x400, \/**< Mouse moved *\/$/;"	e	enum:__anon11
SDL_MOUSEWHEEL	/usr/include/SDL2/SDL_events.h	/^    SDL_MOUSEWHEEL,             \/**< Mouse wheel motion *\/$/;"	e	enum:__anon11
SDL_MULTIGESTURE	/usr/include/SDL2/SDL_events.h	/^    SDL_MULTIGESTURE,$/;"	e	enum:__anon11
SDL_MUSTLOCK	/usr/include/SDL2/SDL_surface.h	61;"	d
SDL_MUTEX_MAXWAIT	/usr/include/SDL2/SDL_mutex.h	49;"	d
SDL_MUTEX_TIMEDOUT	/usr/include/SDL2/SDL_mutex.h	44;"	d
SDL_MapRGB	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGB(const SDL_PixelFormat * format,$/;"	p	signature:(const SDL_PixelFormat * format, Uint8 r, Uint8 g, Uint8 b)
SDL_MapRGBA	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MapRGBA(const SDL_PixelFormat * format,$/;"	p	signature:(const SDL_PixelFormat * format, Uint8 r, Uint8 g, Uint8 b, Uint8 a)
SDL_MasksToPixelFormatEnum	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC Uint32 SDLCALL SDL_MasksToPixelFormatEnum(int bpp,$/;"	p	signature:(int bpp, Uint32 Rmask, Uint32 Gmask, Uint32 Bmask, Uint32 Amask)
SDL_MaximizeWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_MaximizeWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_MemoryBarrierAcquire();$/;"	p	signature:()
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	153;"	d
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	157;"	d
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	165;"	d
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	169;"	d
SDL_MemoryBarrierAcquire	/usr/include/SDL2/SDL_atomic.h	174;"	d
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	/^extern DECLSPEC void SDLCALL SDL_MemoryBarrierRelease();$/;"	p	signature:()
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	152;"	d
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	156;"	d
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	164;"	d
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	168;"	d
SDL_MemoryBarrierRelease	/usr/include/SDL2/SDL_atomic.h	173;"	d
SDL_MessageBoxButtonData	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxButtonData;$/;"	t	typeref:struct:__anon42
SDL_MessageBoxButtonFlags	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxButtonFlags;$/;"	t	typeref:enum:__anon41
SDL_MessageBoxColor	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxColor;$/;"	t	typeref:struct:__anon43
SDL_MessageBoxColorScheme	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxColorScheme;$/;"	t	typeref:struct:__anon45
SDL_MessageBoxColorType	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxColorType;$/;"	t	typeref:enum:__anon44
SDL_MessageBoxData	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxData;$/;"	t	typeref:struct:__anon46
SDL_MessageBoxFlags	/usr/include/SDL2/SDL_messagebox.h	/^} SDL_MessageBoxFlags;$/;"	t	typeref:enum:__anon40
SDL_MinimizeWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_MinimizeWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_MixAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudio(Uint8 * dst, const Uint8 * src,$/;"	p	signature:(Uint8 * dst, const Uint8 * src, Uint32 len, int volume)
SDL_MixAudioFormat	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_MixAudioFormat(Uint8 * dst,$/;"	p	signature:(Uint8 * dst, const Uint8 * src, SDL_AudioFormat format, Uint32 len, int volume)
SDL_MostSignificantBitIndex32	/usr/include/SDL2/SDL_bits.h	/^SDL_MostSignificantBitIndex32(Uint32 x)$/;"	f	signature:(Uint32 x)
SDL_MouseButtonEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MouseButtonEvent$/;"	s
SDL_MouseButtonEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MouseButtonEvent;$/;"	t	typeref:struct:SDL_MouseButtonEvent
SDL_MouseButtonEvent::button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The mouse button index *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::clicks	/usr/include/SDL2/SDL_events.h	/^    Uint8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseButtonEvent::y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
SDL_MouseIsHaptic	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_MouseIsHaptic(void);$/;"	p	signature:(void)
SDL_MouseMotionEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MouseMotionEvent$/;"	s
SDL_MouseMotionEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MouseMotionEvent;$/;"	t	typeref:struct:SDL_MouseMotionEvent
SDL_MouseMotionEvent::state	/usr/include/SDL2/SDL_events.h	/^    Uint32 state;       \/**< The current button state *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEMOTION *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::xrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseMotionEvent::yrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
SDL_MouseWheelEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MouseWheelEvent$/;"	s
SDL_MouseWheelEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MouseWheelEvent;$/;"	t	typeref:struct:SDL_MouseWheelEvent
SDL_MouseWheelEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MouseWheelEvent	access:public
SDL_MouseWheelEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEWHEEL *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
SDL_MouseWheelEvent::which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
SDL_MouseWheelEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
SDL_MouseWheelEvent::x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< The amount scrolled horizontally, positive to the right and negative to the left *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
SDL_MouseWheelEvent::y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< The amount scrolled vertically, positive away from the user and negative toward the user *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
SDL_MultiGestureEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_MultiGestureEvent$/;"	s
SDL_MultiGestureEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_MultiGestureEvent;$/;"	t	typeref:struct:SDL_MultiGestureEvent
SDL_MultiGestureEvent::dDist	/usr/include/SDL2/SDL_events.h	/^    float dDist;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::dTheta	/usr/include/SDL2/SDL_events.h	/^    float dTheta;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint16 numFingers;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::padding	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device index *\/$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MULTIGESTURE *\/$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::x	/usr/include/SDL2/SDL_events.h	/^    float x;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_MultiGestureEvent::y	/usr/include/SDL2/SDL_events.h	/^    float y;$/;"	m	struct:SDL_MultiGestureEvent	access:public
SDL_NAME	/usr/include/SDL2/SDL_name.h	9;"	d
SDL_NONSHAPEABLE_WINDOW	/usr/include/SDL2/SDL_shape.h	42;"	d
SDL_NULL_WHILE_LOOP_CONDITION	/usr/include/SDL2/SDL_assert.h	90;"	d
SDL_NULL_WHILE_LOOP_CONDITION	/usr/include/SDL2/SDL_assert.h	92;"	d
SDL_NUM_LOG_PRIORITIES	/usr/include/SDL2/SDL_log.h	/^    SDL_NUM_LOG_PRIORITIES$/;"	e	enum:__anon64
SDL_NUM_SCANCODES	/usr/include/SDL2/SDL_scancode.h	/^    SDL_NUM_SCANCODES = 512 \/**< not a key, just marks the number of scancodes$/;"	e	enum:__anon59
SDL_NUM_SYSTEM_CURSORS	/usr/include/SDL2/SDL_mouse.h	/^    SDL_NUM_SYSTEM_CURSORS$/;"	e	enum:__anon61
SDL_NumHaptics	/usr/include/SDL2/SDL_haptic.h	/^extern DECLSPEC int SDLCALL SDL_NumHaptics(void);$/;"	p	signature:(void)
SDL_NumJoysticks	/usr/include/SDL2/SDL_joystick.h	/^extern DECLSPEC int SDLCALL SDL_NumJoysticks(void);$/;"	p	signature:(void)
SDL_OSEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_OSEvent$/;"	s
SDL_OSEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_OSEvent;$/;"	t	typeref:struct:SDL_OSEvent
SDL_OSEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_OSEvent	access:public
SDL_OSEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_OSEvent	access:public
SDL_OpenAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC int SDLCALL SDL_OpenAudio(SDL_AudioSpec * desired,$/;"	p	signature:(SDL_AudioSpec * desired, SDL_AudioSpec * obtained)
SDL_OpenAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC SDL_AudioDeviceID SDLCALL SDL_OpenAudioDevice(const char$/;"	p	signature:(const char *device, int iscapture, const SDL_AudioSpec * desired, SDL_AudioSpec * obtained, int allowed_changes)
SDL_OutOfMemory	/usr/include/SDL2/SDL_error.h	52;"	d
SDL_PACKEDLAYOUT_1010102	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_1010102$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_1555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_1555,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_2101010	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_2101010,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_332	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_332,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_4444,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_5551	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_5551,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_565	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_565,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_8888,$/;"	e	enum:__anon51
SDL_PACKEDLAYOUT_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDLAYOUT_NONE,$/;"	e	enum:__anon51
SDL_PACKEDORDER_ABGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_ABGR,$/;"	e	enum:__anon49
SDL_PACKEDORDER_ARGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_ARGB,$/;"	e	enum:__anon49
SDL_PACKEDORDER_BGRA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_BGRA$/;"	e	enum:__anon49
SDL_PACKEDORDER_BGRX	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_BGRX,$/;"	e	enum:__anon49
SDL_PACKEDORDER_NONE	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_NONE,$/;"	e	enum:__anon49
SDL_PACKEDORDER_RGBA	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_RGBA,$/;"	e	enum:__anon49
SDL_PACKEDORDER_RGBX	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_RGBX,$/;"	e	enum:__anon49
SDL_PACKEDORDER_XBGR	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_XBGR,$/;"	e	enum:__anon49
SDL_PACKEDORDER_XRGB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PACKEDORDER_XRGB,$/;"	e	enum:__anon49
SDL_PASSED_BEGINTHREAD_ENDTHREAD	/usr/include/SDL2/SDL_thread.h	92;"	d
SDL_PATCHLEVEL	/usr/include/SDL2/SDL_version.h	62;"	d
SDL_PEEKEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_PEEKEVENT,$/;"	e	enum:__anon12
SDL_PIXELFLAG	/usr/include/SDL2/SDL_pixels.h	120;"	d
SDL_PIXELFORMAT_ABGR1555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR1555 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_ABGR4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR4444 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_ABGR8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ABGR8888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_ARGB1555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB1555 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_ARGB2101010	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB2101010 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_ARGB4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB4444 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_ARGB8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_ARGB8888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGR24	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR24 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGR555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR555 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGR565	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR565 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGR888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGR888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGRA4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA4444 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGRA5551	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA5551 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGRA8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRA8888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_BGRX8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_BGRX8888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_INDEX1LSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX1LSB =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_INDEX1MSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX1MSB =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_INDEX4LSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX4LSB =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_INDEX4MSB	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX4MSB =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_INDEX8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_INDEX8 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_IYUV	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_IYUV =      \/**< Planar mode: Y + U + V  (3 planes) *\/$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGB24	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB24 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGB332	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB332 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGB444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB444 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGB555	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB555 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGB565	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB565 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGB888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGB888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGBA4444	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA4444 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGBA5551	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA5551 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGBA8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBA8888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_RGBX8888	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_RGBX8888 =$/;"	e	enum:__anon52
SDL_PIXELFORMAT_UNKNOWN	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_UNKNOWN,$/;"	e	enum:__anon52
SDL_PIXELFORMAT_UYVY	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_UYVY =      \/**< Packed mode: U0+Y0+V0+Y1 (1 plane) *\/$/;"	e	enum:__anon52
SDL_PIXELFORMAT_YUY2	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_YUY2 =      \/**< Packed mode: Y0+U0+Y1+V0 (1 plane) *\/$/;"	e	enum:__anon52
SDL_PIXELFORMAT_YV12	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_YV12 =      \/**< Planar mode: Y + V + U  (3 planes) *\/$/;"	e	enum:__anon52
SDL_PIXELFORMAT_YVYU	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELFORMAT_YVYU =      \/**< Packed mode: Y0+V0+Y1+U0 (1 plane) *\/$/;"	e	enum:__anon52
SDL_PIXELLAYOUT	/usr/include/SDL2/SDL_pixels.h	123;"	d
SDL_PIXELORDER	/usr/include/SDL2/SDL_pixels.h	122;"	d
SDL_PIXELTYPE	/usr/include/SDL2/SDL_pixels.h	121;"	d
SDL_PIXELTYPE_ARRAYF16	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYF16,$/;"	e	enum:__anon47
SDL_PIXELTYPE_ARRAYF32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYF32$/;"	e	enum:__anon47
SDL_PIXELTYPE_ARRAYU16	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU16,$/;"	e	enum:__anon47
SDL_PIXELTYPE_ARRAYU32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU32,$/;"	e	enum:__anon47
SDL_PIXELTYPE_ARRAYU8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_ARRAYU8,$/;"	e	enum:__anon47
SDL_PIXELTYPE_INDEX1	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX1,$/;"	e	enum:__anon47
SDL_PIXELTYPE_INDEX4	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX4,$/;"	e	enum:__anon47
SDL_PIXELTYPE_INDEX8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_INDEX8,$/;"	e	enum:__anon47
SDL_PIXELTYPE_PACKED16	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED16,$/;"	e	enum:__anon47
SDL_PIXELTYPE_PACKED32	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED32,$/;"	e	enum:__anon47
SDL_PIXELTYPE_PACKED8	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_PACKED8,$/;"	e	enum:__anon47
SDL_PIXELTYPE_UNKNOWN	/usr/include/SDL2/SDL_pixels.h	/^    SDL_PIXELTYPE_UNKNOWN,$/;"	e	enum:__anon47
SDL_POWERSTATE_CHARGED	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_CHARGED       \/**< Plugged in, battery charged *\/$/;"	e	enum:__anon72
SDL_POWERSTATE_CHARGING	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_CHARGING,     \/**< Plugged in, charging battery *\/$/;"	e	enum:__anon72
SDL_POWERSTATE_NO_BATTERY	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_NO_BATTERY,   \/**< Plugged in, no battery available *\/$/;"	e	enum:__anon72
SDL_POWERSTATE_ON_BATTERY	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_ON_BATTERY,   \/**< Not plugged in, running on the battery *\/$/;"	e	enum:__anon72
SDL_POWERSTATE_UNKNOWN	/usr/include/SDL2/SDL_power.h	/^    SDL_POWERSTATE_UNKNOWN,      \/**< cannot determine power status *\/$/;"	e	enum:__anon72
SDL_POWER_LINUX	/usr/include/SDL2/SDL_config.h	316;"	d
SDL_PREALLOC	/usr/include/SDL2/SDL_surface.h	53;"	d
SDL_PRESSED	/usr/include/SDL2/SDL_events.h	50;"	d
SDL_Palette	/usr/include/SDL2/SDL_pixels.h	/^typedef struct SDL_Palette$/;"	s
SDL_Palette	/usr/include/SDL2/SDL_pixels.h	/^} SDL_Palette;$/;"	t	typeref:struct:SDL_Palette
SDL_Palette::colors	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Color *colors;$/;"	m	struct:SDL_Palette	access:public
SDL_Palette::ncolors	/usr/include/SDL2/SDL_pixels.h	/^    int ncolors;$/;"	m	struct:SDL_Palette	access:public
SDL_Palette::refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_Palette	access:public
SDL_Palette::version	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 version;$/;"	m	struct:SDL_Palette	access:public
SDL_PauseAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudio(int pause_on);$/;"	p	signature:(int pause_on)
SDL_PauseAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_PauseAudioDevice(SDL_AudioDeviceID dev,$/;"	p	signature:(SDL_AudioDeviceID dev, int pause_on)
SDL_PeepEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PeepEvents(SDL_Event * events, int numevents,$/;"	p	signature:(SDL_Event * events, int numevents, SDL_eventaction action, Uint32 minType, Uint32 maxType)
SDL_PixelFormat	/usr/include/SDL2/SDL_pixels.h	/^typedef struct SDL_PixelFormat$/;"	s
SDL_PixelFormat	/usr/include/SDL2/SDL_pixels.h	/^} SDL_PixelFormat;$/;"	t	typeref:struct:SDL_PixelFormat
SDL_PixelFormat::Aloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Aloss;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Amask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Amask;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Ashift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Ashift;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::BitsPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BitsPerPixel;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Bloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bloss;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Bmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Bmask;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Bshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Bshift;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::BytesPerPixel	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 BytesPerPixel;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Gloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gloss;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Gmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Gmask;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Gshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Gshift;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Rloss	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rloss;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Rmask	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 Rmask;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::Rshift	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 Rshift;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::format	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 format;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::next	/usr/include/SDL2/SDL_pixels.h	/^    struct SDL_PixelFormat *next;$/;"	m	struct:SDL_PixelFormat	typeref:struct:SDL_PixelFormat::SDL_PixelFormat	access:public
SDL_PixelFormat::padding	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 padding[2];$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::palette	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Palette *palette;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormat::refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_PixelFormat	access:public
SDL_PixelFormatEnumToMasks	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_PixelFormatEnumToMasks(Uint32 format,$/;"	p	signature:(Uint32 format, int *bpp, Uint32 * Rmask, Uint32 * Gmask, Uint32 * Bmask, Uint32 * Amask)
SDL_Point	/usr/include/SDL2/SDL_rect.h	/^typedef struct SDL_Point$/;"	s
SDL_Point	/usr/include/SDL2/SDL_rect.h	/^} SDL_Point;$/;"	t	typeref:struct:SDL_Point
SDL_Point::x	/usr/include/SDL2/SDL_rect.h	/^    int x;$/;"	m	struct:SDL_Point	access:public
SDL_Point::y	/usr/include/SDL2/SDL_rect.h	/^    int y;$/;"	m	struct:SDL_Point	access:public
SDL_PollEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PollEvent(SDL_Event * event);$/;"	p	signature:(SDL_Event * event)
SDL_PowerState	/usr/include/SDL2/SDL_power.h	/^} SDL_PowerState;$/;"	t	typeref:enum:__anon72
SDL_PumpEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_PumpEvents(void);$/;"	p	signature:(void)
SDL_PushEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_PushEvent(SDL_Event * event);$/;"	p	signature:(SDL_Event * event)
SDL_QUERY	/usr/include/SDL2/SDL_events.h	688;"	d
SDL_QUIT	/usr/include/SDL2/SDL_events.h	/^    SDL_QUIT           = 0x100, \/**< User-requested quit *\/$/;"	e	enum:__anon11
SDL_QueryTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_QueryTexture(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, Uint32 * format, int *access, int *w, int *h)
SDL_Quit	/usr/include/SDL2/SDL.h	/^extern DECLSPEC void SDLCALL SDL_Quit(void);$/;"	p	signature:(void)
SDL_QuitEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_QuitEvent$/;"	s
SDL_QuitEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_QuitEvent;$/;"	t	typeref:struct:SDL_QuitEvent
SDL_QuitEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_QuitEvent	access:public
SDL_QuitEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_QuitEvent	access:public
SDL_QuitRequested	/usr/include/SDL2/SDL_quit.h	55;"	d
SDL_QuitSubSystem	/usr/include/SDL2/SDL.h	/^extern DECLSPEC void SDLCALL SDL_QuitSubSystem(Uint32 flags);$/;"	p	signature:(Uint32 flags)
SDL_RELEASED	/usr/include/SDL2/SDL_events.h	49;"	d
SDL_RENDERER_ACCELERATED	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_ACCELERATED = 0x00000002,      \/**< The renderer uses hardware$/;"	e	enum:__anon65
SDL_RENDERER_PRESENTVSYNC	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_PRESENTVSYNC = 0x00000004,     \/**< Present is synchronized$/;"	e	enum:__anon65
SDL_RENDERER_SOFTWARE	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_SOFTWARE = 0x00000001,         \/**< The renderer is a software fallback *\/$/;"	e	enum:__anon65
SDL_RENDERER_TARGETTEXTURE	/usr/include/SDL2/SDL_render.h	/^    SDL_RENDERER_TARGETTEXTURE = 0x00000008     \/**< The renderer supports$/;"	e	enum:__anon65
SDL_RENDER_TARGETS_RESET	/usr/include/SDL2/SDL_events.h	/^    SDL_RENDER_TARGETS_RESET = 0x2000, \/**< The render targets have been reset *\/$/;"	e	enum:__anon11
SDL_REVISION	/usr/include/SDL2/SDL_revision.h	1;"	d
SDL_REVISION_NUMBER	/usr/include/SDL2/SDL_revision.h	2;"	d
SDL_RLEACCEL	/usr/include/SDL2/SDL_surface.h	54;"	d
SDL_RWFromConstMem	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromConstMem(const void *mem,$/;"	p	signature:(const void *mem, int size)
SDL_RWFromFP	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFP(FILE * fp,$/;"	p	signature:(FILE * fp, SDL_bool autoclose)
SDL_RWFromFP	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFP(void * fp,$/;"	p	signature:(void * fp, SDL_bool autoclose)
SDL_RWFromFile	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromFile(const char *file,$/;"	p	signature:(const char *file, const char *mode)
SDL_RWFromMem	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC SDL_RWops *SDLCALL SDL_RWFromMem(void *mem, int size);$/;"	p	signature:(void *mem, int size)
SDL_RWOPS_JNIFILE	/usr/include/SDL2/SDL_rwops.h	45;"	d
SDL_RWOPS_MEMORY	/usr/include/SDL2/SDL_rwops.h	46;"	d
SDL_RWOPS_MEMORY_RO	/usr/include/SDL2/SDL_rwops.h	47;"	d
SDL_RWOPS_STDFILE	/usr/include/SDL2/SDL_rwops.h	44;"	d
SDL_RWOPS_UNKNOWN	/usr/include/SDL2/SDL_rwops.h	42;"	d
SDL_RWOPS_WINFILE	/usr/include/SDL2/SDL_rwops.h	43;"	d
SDL_RWclose	/usr/include/SDL2/SDL_rwops.h	189;"	d
SDL_RWops	/usr/include/SDL2/SDL_rwops.h	/^typedef struct SDL_RWops$/;"	s
SDL_RWops	/usr/include/SDL2/SDL_rwops.h	/^} SDL_RWops;$/;"	t	typeref:struct:SDL_RWops
SDL_RWops::__anon30::__anon31::assetFileDescriptorRef	/usr/include/SDL2/SDL_rwops.h	/^            void *assetFileDescriptorRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::fd	/usr/include/SDL2/SDL_rwops.h	/^            int fd;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::fileNameRef	/usr/include/SDL2/SDL_rwops.h	/^            void *fileNameRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::inputStreamRef	/usr/include/SDL2/SDL_rwops.h	/^            void *inputStreamRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::offset	/usr/include/SDL2/SDL_rwops.h	/^            long offset;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::position	/usr/include/SDL2/SDL_rwops.h	/^            long position;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::readMethod	/usr/include/SDL2/SDL_rwops.h	/^            void *readMethod;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::readableByteChannelRef	/usr/include/SDL2/SDL_rwops.h	/^            void *readableByteChannelRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon31::size	/usr/include/SDL2/SDL_rwops.h	/^            long size;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::__anon32::autoclose	/usr/include/SDL2/SDL_rwops.h	/^            SDL_bool autoclose;$/;"	m	struct:SDL_RWops::__anon30::__anon32	access:public
SDL_RWops::__anon30::__anon32::fp	/usr/include/SDL2/SDL_rwops.h	/^            FILE *fp;$/;"	m	struct:SDL_RWops::__anon30::__anon32	access:public
SDL_RWops::__anon30::__anon33::base	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *base;$/;"	m	struct:SDL_RWops::__anon30::__anon33	access:public
SDL_RWops::__anon30::__anon33::here	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *here;$/;"	m	struct:SDL_RWops::__anon30::__anon33	access:public
SDL_RWops::__anon30::__anon33::stop	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *stop;$/;"	m	struct:SDL_RWops::__anon30::__anon33	access:public
SDL_RWops::__anon30::__anon34::data1	/usr/include/SDL2/SDL_rwops.h	/^            void *data1;$/;"	m	struct:SDL_RWops::__anon30::__anon34	access:public
SDL_RWops::__anon30::__anon34::data2	/usr/include/SDL2/SDL_rwops.h	/^            void *data2;$/;"	m	struct:SDL_RWops::__anon30::__anon34	access:public
SDL_RWops::__anon30::androidio	/usr/include/SDL2/SDL_rwops.h	/^        } androidio;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon31	access:public
SDL_RWops::__anon30::mem	/usr/include/SDL2/SDL_rwops.h	/^        } mem;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon33	access:public
SDL_RWops::__anon30::stdio	/usr/include/SDL2/SDL_rwops.h	/^        } stdio;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon32	access:public
SDL_RWops::__anon30::unknown	/usr/include/SDL2/SDL_rwops.h	/^        } unknown;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon34	access:public
SDL_RWops::close	/usr/include/SDL2/SDL_rwops.h	/^    int (SDLCALL * close) (struct SDL_RWops * context);$/;"	m	struct:SDL_RWops	access:public
SDL_RWops::hidden	/usr/include/SDL2/SDL_rwops.h	/^    } hidden;$/;"	m	struct:SDL_RWops	typeref:union:SDL_RWops::__anon30	access:public
SDL_RWops::read	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * read) (struct SDL_RWops * context, void *ptr,$/;"	m	struct:SDL_RWops	access:public
SDL_RWops::seek	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset,$/;"	m	struct:SDL_RWops	access:public
SDL_RWops::size	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * size) (struct SDL_RWops * context);$/;"	m	struct:SDL_RWops	access:public
SDL_RWops::type	/usr/include/SDL2/SDL_rwops.h	/^    Uint32 type;$/;"	m	struct:SDL_RWops	access:public
SDL_RWops::write	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * write) (struct SDL_RWops * context, const void *ptr,$/;"	m	struct:SDL_RWops	access:public
SDL_RWread	/usr/include/SDL2/SDL_rwops.h	187;"	d
SDL_RWseek	/usr/include/SDL2/SDL_rwops.h	185;"	d
SDL_RWsize	/usr/include/SDL2/SDL_rwops.h	184;"	d
SDL_RWtell	/usr/include/SDL2/SDL_rwops.h	186;"	d
SDL_RWwrite	/usr/include/SDL2/SDL_rwops.h	188;"	d
SDL_RaiseWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_RaiseWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_ReadBE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadBE16(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_ReadBE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadBE32(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_ReadBE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadBE64(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_ReadLE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint16 SDLCALL SDL_ReadLE16(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_ReadLE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint32 SDLCALL SDL_ReadLE32(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_ReadLE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint64 SDLCALL SDL_ReadLE64(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_ReadU8	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC Uint8 SDLCALL SDL_ReadU8(SDL_RWops * src);$/;"	p	signature:(SDL_RWops * src)
SDL_RecordGesture	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_RecordGesture(SDL_TouchID touchId);$/;"	p	signature:(SDL_TouchID touchId)
SDL_Rect	/usr/include/SDL2/SDL_rect.h	/^typedef struct SDL_Rect$/;"	s
SDL_Rect	/usr/include/SDL2/SDL_rect.h	/^} SDL_Rect;$/;"	t	typeref:struct:SDL_Rect
SDL_Rect::h	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	access:public
SDL_Rect::w	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	access:public
SDL_Rect::x	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	access:public
SDL_Rect::y	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	access:public
SDL_RectEmpty	/usr/include/SDL2/SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_RectEmpty(const SDL_Rect *r)$/;"	f	signature:(const SDL_Rect *r)
SDL_RectEquals	/usr/include/SDL2/SDL_rect.h	/^SDL_FORCE_INLINE SDL_bool SDL_RectEquals(const SDL_Rect *a, const SDL_Rect *b)$/;"	f	signature:(const SDL_Rect *a, const SDL_Rect *b)
SDL_RegisterApp	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC int SDLCALL SDL_RegisterApp(char *name, Uint32 style,$/;"	p	signature:(char *name, Uint32 style, void *hInst)
SDL_RegisterEvents	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC Uint32 SDLCALL SDL_RegisterEvents(int numevents);$/;"	p	signature:(int numevents)
SDL_RemoveTimer	/usr/include/SDL2/SDL_timer.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RemoveTimer(SDL_TimerID id);$/;"	p	signature:(SDL_TimerID id)
SDL_RenderClear	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderClear(SDL_Renderer * renderer);$/;"	p	signature:(SDL_Renderer * renderer)
SDL_RenderCopy	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopy(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_Texture * texture, const SDL_Rect * srcrect, const SDL_Rect * dstrect)
SDL_RenderCopyEx	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderCopyEx(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_Texture * texture, const SDL_Rect * srcrect, const SDL_Rect * dstrect, const double angle, const SDL_Point *center, const SDL_RendererFlip flip)
SDL_RenderDrawLine	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLine(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, int x1, int y1, int x2, int y2)
SDL_RenderDrawLines	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawLines(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Point * points, int count)
SDL_RenderDrawPoint	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPoint(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, int x, int y)
SDL_RenderDrawPoints	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawPoints(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Point * points, int count)
SDL_RenderDrawRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRect(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rect)
SDL_RenderDrawRects	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderDrawRects(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rects, int count)
SDL_RenderFillRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRect(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rect)
SDL_RenderFillRects	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderFillRects(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rects, int count)
SDL_RenderGetClipRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetClipRect(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_Rect * rect)
SDL_RenderGetD3D9Device	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC IDirect3DDevice9* SDLCALL SDL_RenderGetD3D9Device(SDL_Renderer * renderer);$/;"	p	signature:(SDL_Renderer * renderer)
SDL_RenderGetLogicalSize	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetLogicalSize(SDL_Renderer * renderer, int *w, int *h);$/;"	p	signature:(SDL_Renderer * renderer, int *w, int *h)
SDL_RenderGetScale	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetScale(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, float *scaleX, float *scaleY)
SDL_RenderGetViewport	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderGetViewport(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_Rect * rect)
SDL_RenderPresent	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_RenderPresent(SDL_Renderer * renderer);$/;"	p	signature:(SDL_Renderer * renderer)
SDL_RenderReadPixels	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderReadPixels(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rect, Uint32 format, void *pixels, int pitch)
SDL_RenderSetClipRect	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetClipRect(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rect)
SDL_RenderSetLogicalSize	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetLogicalSize(SDL_Renderer * renderer, int w, int h);$/;"	p	signature:(SDL_Renderer * renderer, int w, int h)
SDL_RenderSetScale	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetScale(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, float scaleX, float scaleY)
SDL_RenderSetViewport	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_RenderSetViewport(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, const SDL_Rect * rect)
SDL_RenderTargetSupported	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_RenderTargetSupported(SDL_Renderer *renderer);$/;"	p	signature:(SDL_Renderer *renderer)
SDL_Renderer	/usr/include/SDL2/SDL_render.h	/^typedef struct SDL_Renderer SDL_Renderer;$/;"	t	typeref:struct:SDL_Renderer
SDL_RendererFlags	/usr/include/SDL2/SDL_render.h	/^} SDL_RendererFlags;$/;"	t	typeref:enum:__anon65
SDL_RendererFlip	/usr/include/SDL2/SDL_render.h	/^} SDL_RendererFlip;$/;"	t	typeref:enum:__anon68
SDL_RendererInfo	/usr/include/SDL2/SDL_render.h	/^typedef struct SDL_RendererInfo$/;"	s
SDL_RendererInfo	/usr/include/SDL2/SDL_render.h	/^} SDL_RendererInfo;$/;"	t	typeref:struct:SDL_RendererInfo
SDL_RendererInfo::flags	/usr/include/SDL2/SDL_render.h	/^    Uint32 flags;               \/**< Supported ::SDL_RendererFlags *\/$/;"	m	struct:SDL_RendererInfo	access:public
SDL_RendererInfo::max_texture_height	/usr/include/SDL2/SDL_render.h	/^    int max_texture_height;     \/**< The maximimum texture height *\/$/;"	m	struct:SDL_RendererInfo	access:public
SDL_RendererInfo::max_texture_width	/usr/include/SDL2/SDL_render.h	/^    int max_texture_width;      \/**< The maximimum texture width *\/$/;"	m	struct:SDL_RendererInfo	access:public
SDL_RendererInfo::name	/usr/include/SDL2/SDL_render.h	/^    const char *name;           \/**< The name of the renderer *\/$/;"	m	struct:SDL_RendererInfo	access:public
SDL_RendererInfo::num_texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 num_texture_formats; \/**< The number of available texture formats *\/$/;"	m	struct:SDL_RendererInfo	access:public
SDL_RendererInfo::texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 texture_formats[16]; \/**< The available texture formats *\/$/;"	m	struct:SDL_RendererInfo	access:public
SDL_ReportAssertion	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC SDL_assert_state SDLCALL SDL_ReportAssertion(SDL_assert_data *,$/;"	p	signature:(SDL_assert_data *, const char *, const char *, int)
SDL_ResetAssertionReport	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC void SDLCALL SDL_ResetAssertionReport(void);$/;"	p	signature:(void)
SDL_RestoreWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_RestoreWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_SCANCODE_0	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_0 = 39,$/;"	e	enum:__anon59
SDL_SCANCODE_1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_1 = 30,$/;"	e	enum:__anon59
SDL_SCANCODE_2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_2 = 31,$/;"	e	enum:__anon59
SDL_SCANCODE_3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_3 = 32,$/;"	e	enum:__anon59
SDL_SCANCODE_4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_4 = 33,$/;"	e	enum:__anon59
SDL_SCANCODE_5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_5 = 34,$/;"	e	enum:__anon59
SDL_SCANCODE_6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_6 = 35,$/;"	e	enum:__anon59
SDL_SCANCODE_7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_7 = 36,$/;"	e	enum:__anon59
SDL_SCANCODE_8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_8 = 37,$/;"	e	enum:__anon59
SDL_SCANCODE_9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_9 = 38,$/;"	e	enum:__anon59
SDL_SCANCODE_A	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_A = 4,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_BACK	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_BACK = 270,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_BOOKMARKS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_BOOKMARKS = 274,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_FORWARD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_FORWARD = 271,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_HOME	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_HOME = 269,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_REFRESH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_REFRESH = 273,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_SEARCH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_SEARCH = 268,$/;"	e	enum:__anon59
SDL_SCANCODE_AC_STOP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AC_STOP = 272,$/;"	e	enum:__anon59
SDL_SCANCODE_AGAIN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AGAIN = 121,   \/**< redo *\/$/;"	e	enum:__anon59
SDL_SCANCODE_ALTERASE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_ALTERASE = 153, \/**< Erase-Eaze *\/$/;"	e	enum:__anon59
SDL_SCANCODE_APOSTROPHE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APOSTROPHE = 52,$/;"	e	enum:__anon59
SDL_SCANCODE_APP1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APP1 = 283,$/;"	e	enum:__anon59
SDL_SCANCODE_APP2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APP2 = 284,$/;"	e	enum:__anon59
SDL_SCANCODE_APPLICATION	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_APPLICATION = 101, \/**< windows contextual menu, compose *\/$/;"	e	enum:__anon59
SDL_SCANCODE_AUDIOMUTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOMUTE = 262,$/;"	e	enum:__anon59
SDL_SCANCODE_AUDIONEXT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIONEXT = 258,$/;"	e	enum:__anon59
SDL_SCANCODE_AUDIOPLAY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOPLAY = 261,$/;"	e	enum:__anon59
SDL_SCANCODE_AUDIOPREV	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOPREV = 259,$/;"	e	enum:__anon59
SDL_SCANCODE_AUDIOSTOP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_AUDIOSTOP = 260,$/;"	e	enum:__anon59
SDL_SCANCODE_B	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_B = 5,$/;"	e	enum:__anon59
SDL_SCANCODE_BACKSLASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BACKSLASH = 49, \/**< Located at the lower left of the return$/;"	e	enum:__anon59
SDL_SCANCODE_BACKSPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BACKSPACE = 42,$/;"	e	enum:__anon59
SDL_SCANCODE_BRIGHTNESSDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BRIGHTNESSDOWN = 275,$/;"	e	enum:__anon59
SDL_SCANCODE_BRIGHTNESSUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_BRIGHTNESSUP = 276,$/;"	e	enum:__anon59
SDL_SCANCODE_C	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_C = 6,$/;"	e	enum:__anon59
SDL_SCANCODE_CALCULATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CALCULATOR = 266,$/;"	e	enum:__anon59
SDL_SCANCODE_CANCEL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CANCEL = 155,$/;"	e	enum:__anon59
SDL_SCANCODE_CAPSLOCK	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CAPSLOCK = 57,$/;"	e	enum:__anon59
SDL_SCANCODE_CLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CLEAR = 156,$/;"	e	enum:__anon59
SDL_SCANCODE_CLEARAGAIN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CLEARAGAIN = 162,$/;"	e	enum:__anon59
SDL_SCANCODE_COMMA	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_COMMA = 54,$/;"	e	enum:__anon59
SDL_SCANCODE_COMPUTER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_COMPUTER = 267,$/;"	e	enum:__anon59
SDL_SCANCODE_COPY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_COPY = 124,$/;"	e	enum:__anon59
SDL_SCANCODE_CRSEL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CRSEL = 163,$/;"	e	enum:__anon59
SDL_SCANCODE_CURRENCYSUBUNIT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CURRENCYSUBUNIT = 181,$/;"	e	enum:__anon59
SDL_SCANCODE_CURRENCYUNIT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CURRENCYUNIT = 180,$/;"	e	enum:__anon59
SDL_SCANCODE_CUT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_CUT = 123,$/;"	e	enum:__anon59
SDL_SCANCODE_D	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_D = 7,$/;"	e	enum:__anon59
SDL_SCANCODE_DECIMALSEPARATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DECIMALSEPARATOR = 179,$/;"	e	enum:__anon59
SDL_SCANCODE_DELETE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DELETE = 76,$/;"	e	enum:__anon59
SDL_SCANCODE_DISPLAYSWITCH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DISPLAYSWITCH = 277, \/**< display mirroring\/dual display$/;"	e	enum:__anon59
SDL_SCANCODE_DOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_DOWN = 81,$/;"	e	enum:__anon59
SDL_SCANCODE_E	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_E = 8,$/;"	e	enum:__anon59
SDL_SCANCODE_EJECT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EJECT = 281,$/;"	e	enum:__anon59
SDL_SCANCODE_END	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_END = 77,$/;"	e	enum:__anon59
SDL_SCANCODE_EQUALS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EQUALS = 46,$/;"	e	enum:__anon59
SDL_SCANCODE_ESCAPE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_ESCAPE = 41,$/;"	e	enum:__anon59
SDL_SCANCODE_EXECUTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EXECUTE = 116,$/;"	e	enum:__anon59
SDL_SCANCODE_EXSEL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_EXSEL = 164,$/;"	e	enum:__anon59
SDL_SCANCODE_F	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F = 9,$/;"	e	enum:__anon59
SDL_SCANCODE_F1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F1 = 58,$/;"	e	enum:__anon59
SDL_SCANCODE_F10	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F10 = 67,$/;"	e	enum:__anon59
SDL_SCANCODE_F11	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F11 = 68,$/;"	e	enum:__anon59
SDL_SCANCODE_F12	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F12 = 69,$/;"	e	enum:__anon59
SDL_SCANCODE_F13	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F13 = 104,$/;"	e	enum:__anon59
SDL_SCANCODE_F14	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F14 = 105,$/;"	e	enum:__anon59
SDL_SCANCODE_F15	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F15 = 106,$/;"	e	enum:__anon59
SDL_SCANCODE_F16	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F16 = 107,$/;"	e	enum:__anon59
SDL_SCANCODE_F17	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F17 = 108,$/;"	e	enum:__anon59
SDL_SCANCODE_F18	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F18 = 109,$/;"	e	enum:__anon59
SDL_SCANCODE_F19	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F19 = 110,$/;"	e	enum:__anon59
SDL_SCANCODE_F2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F2 = 59,$/;"	e	enum:__anon59
SDL_SCANCODE_F20	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F20 = 111,$/;"	e	enum:__anon59
SDL_SCANCODE_F21	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F21 = 112,$/;"	e	enum:__anon59
SDL_SCANCODE_F22	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F22 = 113,$/;"	e	enum:__anon59
SDL_SCANCODE_F23	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F23 = 114,$/;"	e	enum:__anon59
SDL_SCANCODE_F24	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F24 = 115,$/;"	e	enum:__anon59
SDL_SCANCODE_F3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F3 = 60,$/;"	e	enum:__anon59
SDL_SCANCODE_F4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F4 = 61,$/;"	e	enum:__anon59
SDL_SCANCODE_F5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F5 = 62,$/;"	e	enum:__anon59
SDL_SCANCODE_F6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F6 = 63,$/;"	e	enum:__anon59
SDL_SCANCODE_F7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F7 = 64,$/;"	e	enum:__anon59
SDL_SCANCODE_F8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F8 = 65,$/;"	e	enum:__anon59
SDL_SCANCODE_F9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_F9 = 66,$/;"	e	enum:__anon59
SDL_SCANCODE_FIND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_FIND = 126,$/;"	e	enum:__anon59
SDL_SCANCODE_G	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_G = 10,$/;"	e	enum:__anon59
SDL_SCANCODE_GRAVE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_GRAVE = 53, \/**< Located in the top left corner (on both ANSI$/;"	e	enum:__anon59
SDL_SCANCODE_H	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_H = 11,$/;"	e	enum:__anon59
SDL_SCANCODE_HELP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_HELP = 117,$/;"	e	enum:__anon59
SDL_SCANCODE_HOME	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_HOME = 74,$/;"	e	enum:__anon59
SDL_SCANCODE_I	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_I = 12,$/;"	e	enum:__anon59
SDL_SCANCODE_INSERT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INSERT = 73, \/**< insert on PC, help on some Mac keyboards (but$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL1 = 135, \/**< used on Asian keyboards, see$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL2 = 136,$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL3 = 137, \/**< Yen *\/$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL4 = 138,$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL5 = 139,$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL6 = 140,$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL7 = 141,$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL8 = 142,$/;"	e	enum:__anon59
SDL_SCANCODE_INTERNATIONAL9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_INTERNATIONAL9 = 143,$/;"	e	enum:__anon59
SDL_SCANCODE_J	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_J = 13,$/;"	e	enum:__anon59
SDL_SCANCODE_K	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_K = 14,$/;"	e	enum:__anon59
SDL_SCANCODE_KBDILLUMDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMDOWN = 279,$/;"	e	enum:__anon59
SDL_SCANCODE_KBDILLUMTOGGLE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMTOGGLE = 278,$/;"	e	enum:__anon59
SDL_SCANCODE_KBDILLUMUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KBDILLUMUP = 280,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_0	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_0 = 98,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_00	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_00 = 176,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_000	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_000 = 177,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_1 = 89,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_2 = 90,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_3 = 91,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_4 = 92,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_5 = 93,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_6 = 94,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_7 = 95,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_8 = 96,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_9 = 97,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_A	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_A = 188,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_AMPERSAND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_AMPERSAND = 199,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_AT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_AT = 206,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_B	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_B = 189,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_BACKSPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_BACKSPACE = 187,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_BINARY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_BINARY = 218,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_C	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_C = 190,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_CLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_CLEAR = 216,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_CLEARENTRY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_CLEARENTRY = 217,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_COLON	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_COLON = 203,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_COMMA	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_COMMA = 133,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_D	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_D = 191,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_DBLAMPERSAND	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DBLAMPERSAND = 200,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_DBLVERTICALBAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DBLVERTICALBAR = 202,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_DECIMAL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DECIMAL = 220,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_DIVIDE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_DIVIDE = 84,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_E	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_E = 192,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_ENTER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_ENTER = 88,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_EQUALS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_EQUALS = 103,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_EQUALSAS400	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_EQUALSAS400 = 134,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_EXCLAM	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_EXCLAM = 207,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_F	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_F = 193,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_GREATER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_GREATER = 198,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_HASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_HASH = 204,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_HEXADECIMAL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_HEXADECIMAL = 221,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_LEFTBRACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_LEFTBRACE = 184,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_LEFTPAREN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_LEFTPAREN = 182,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_LESS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_LESS = 197,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMADD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMADD = 211,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMCLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMCLEAR = 210,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMDIVIDE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMDIVIDE = 214,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMMULTIPLY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMMULTIPLY = 213,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMRECALL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMRECALL = 209,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMSTORE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMSTORE = 208,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MEMSUBTRACT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MEMSUBTRACT = 212,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MINUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MINUS = 86,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_MULTIPLY	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_MULTIPLY = 85,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_OCTAL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_OCTAL = 219,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_PERCENT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PERCENT = 196,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_PERIOD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PERIOD = 99,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_PLUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PLUS = 87,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_PLUSMINUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_PLUSMINUS = 215,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_POWER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_POWER = 195,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_RIGHTBRACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_RIGHTBRACE = 185,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_RIGHTPAREN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_RIGHTPAREN = 183,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_SPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_SPACE = 205,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_TAB	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_TAB = 186,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_VERTICALBAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_VERTICALBAR = 201,$/;"	e	enum:__anon59
SDL_SCANCODE_KP_XOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_KP_XOR = 194,$/;"	e	enum:__anon59
SDL_SCANCODE_L	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_L = 15,$/;"	e	enum:__anon59
SDL_SCANCODE_LALT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LALT = 226, \/**< alt, option *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG1	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG1 = 144, \/**< Hangul\/English toggle *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG2 = 145, \/**< Hanja conversion *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG3	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG3 = 146, \/**< Katakana *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG4	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG4 = 147, \/**< Hiragana *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG5	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG5 = 148, \/**< Zenkaku\/Hankaku *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG6	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG6 = 149, \/**< reserved *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG7	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG7 = 150, \/**< reserved *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG8	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG8 = 151, \/**< reserved *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LANG9	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LANG9 = 152, \/**< reserved *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LCTRL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LCTRL = 224,$/;"	e	enum:__anon59
SDL_SCANCODE_LEFT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LEFT = 80,$/;"	e	enum:__anon59
SDL_SCANCODE_LEFTBRACKET	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LEFTBRACKET = 47,$/;"	e	enum:__anon59
SDL_SCANCODE_LGUI	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LGUI = 227, \/**< windows, command (apple), meta *\/$/;"	e	enum:__anon59
SDL_SCANCODE_LSHIFT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_LSHIFT = 225,$/;"	e	enum:__anon59
SDL_SCANCODE_M	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_M = 16,$/;"	e	enum:__anon59
SDL_SCANCODE_MAIL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MAIL = 265,$/;"	e	enum:__anon59
SDL_SCANCODE_MEDIASELECT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MEDIASELECT = 263,$/;"	e	enum:__anon59
SDL_SCANCODE_MENU	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MENU = 118,$/;"	e	enum:__anon59
SDL_SCANCODE_MINUS	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MINUS = 45,$/;"	e	enum:__anon59
SDL_SCANCODE_MODE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MODE = 257,    \/**< I'm not sure if this is really not covered$/;"	e	enum:__anon59
SDL_SCANCODE_MUTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_MUTE = 127,$/;"	e	enum:__anon59
SDL_SCANCODE_N	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_N = 17,$/;"	e	enum:__anon59
SDL_SCANCODE_NONUSBACKSLASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_NONUSBACKSLASH = 100, \/**< This is the additional key that ISO$/;"	e	enum:__anon59
SDL_SCANCODE_NONUSHASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_NONUSHASH = 50, \/**< ISO USB keyboards actually use this code$/;"	e	enum:__anon59
SDL_SCANCODE_NUMLOCKCLEAR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_NUMLOCKCLEAR = 83, \/**< num lock on PC, clear on Mac keyboards$/;"	e	enum:__anon59
SDL_SCANCODE_O	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_O = 18,$/;"	e	enum:__anon59
SDL_SCANCODE_OPER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_OPER = 161,$/;"	e	enum:__anon59
SDL_SCANCODE_OUT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_OUT = 160,$/;"	e	enum:__anon59
SDL_SCANCODE_P	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_P = 19,$/;"	e	enum:__anon59
SDL_SCANCODE_PAGEDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PAGEDOWN = 78,$/;"	e	enum:__anon59
SDL_SCANCODE_PAGEUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PAGEUP = 75,$/;"	e	enum:__anon59
SDL_SCANCODE_PASTE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PASTE = 125,$/;"	e	enum:__anon59
SDL_SCANCODE_PAUSE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PAUSE = 72,$/;"	e	enum:__anon59
SDL_SCANCODE_PERIOD	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PERIOD = 55,$/;"	e	enum:__anon59
SDL_SCANCODE_POWER	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_POWER = 102, \/**< The USB document says this is a status flag,$/;"	e	enum:__anon59
SDL_SCANCODE_PRINTSCREEN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PRINTSCREEN = 70,$/;"	e	enum:__anon59
SDL_SCANCODE_PRIOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_PRIOR = 157,$/;"	e	enum:__anon59
SDL_SCANCODE_Q	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_Q = 20,$/;"	e	enum:__anon59
SDL_SCANCODE_R	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_R = 21,$/;"	e	enum:__anon59
SDL_SCANCODE_RALT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RALT = 230, \/**< alt gr, option *\/$/;"	e	enum:__anon59
SDL_SCANCODE_RCTRL	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RCTRL = 228,$/;"	e	enum:__anon59
SDL_SCANCODE_RETURN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RETURN = 40,$/;"	e	enum:__anon59
SDL_SCANCODE_RETURN2	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RETURN2 = 158,$/;"	e	enum:__anon59
SDL_SCANCODE_RGUI	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RGUI = 231, \/**< windows, command (apple), meta *\/$/;"	e	enum:__anon59
SDL_SCANCODE_RIGHT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RIGHT = 79,$/;"	e	enum:__anon59
SDL_SCANCODE_RIGHTBRACKET	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RIGHTBRACKET = 48,$/;"	e	enum:__anon59
SDL_SCANCODE_RSHIFT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_RSHIFT = 229,$/;"	e	enum:__anon59
SDL_SCANCODE_S	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_S = 22,$/;"	e	enum:__anon59
SDL_SCANCODE_SCROLLLOCK	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SCROLLLOCK = 71,$/;"	e	enum:__anon59
SDL_SCANCODE_SELECT	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SELECT = 119,$/;"	e	enum:__anon59
SDL_SCANCODE_SEMICOLON	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SEMICOLON = 51,$/;"	e	enum:__anon59
SDL_SCANCODE_SEPARATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SEPARATOR = 159,$/;"	e	enum:__anon59
SDL_SCANCODE_SLASH	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SLASH = 56,$/;"	e	enum:__anon59
SDL_SCANCODE_SLEEP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SLEEP = 282,$/;"	e	enum:__anon59
SDL_SCANCODE_SPACE	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SPACE = 44,$/;"	e	enum:__anon59
SDL_SCANCODE_STOP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_STOP = 120,$/;"	e	enum:__anon59
SDL_SCANCODE_SYSREQ	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_SYSREQ = 154,$/;"	e	enum:__anon59
SDL_SCANCODE_T	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_T = 23,$/;"	e	enum:__anon59
SDL_SCANCODE_TAB	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_TAB = 43,$/;"	e	enum:__anon59
SDL_SCANCODE_THOUSANDSSEPARATOR	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_THOUSANDSSEPARATOR = 178,$/;"	e	enum:__anon59
SDL_SCANCODE_TO_KEYCODE	/usr/include/SDL2/SDL_keycode.h	45;"	d
SDL_SCANCODE_U	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_U = 24,$/;"	e	enum:__anon59
SDL_SCANCODE_UNDO	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_UNDO = 122,$/;"	e	enum:__anon59
SDL_SCANCODE_UNKNOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_UNKNOWN = 0,$/;"	e	enum:__anon59
SDL_SCANCODE_UP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_UP = 82,$/;"	e	enum:__anon59
SDL_SCANCODE_V	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_V = 25,$/;"	e	enum:__anon59
SDL_SCANCODE_VOLUMEDOWN	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_VOLUMEDOWN = 129,$/;"	e	enum:__anon59
SDL_SCANCODE_VOLUMEUP	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_VOLUMEUP = 128,$/;"	e	enum:__anon59
SDL_SCANCODE_W	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_W = 26,$/;"	e	enum:__anon59
SDL_SCANCODE_WWW	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_WWW = 264,$/;"	e	enum:__anon59
SDL_SCANCODE_X	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_X = 27,$/;"	e	enum:__anon59
SDL_SCANCODE_Y	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_Y = 28,$/;"	e	enum:__anon59
SDL_SCANCODE_Z	/usr/include/SDL2/SDL_scancode.h	/^    SDL_SCANCODE_Z = 29,$/;"	e	enum:__anon59
SDL_SHAPEMODEALPHA	/usr/include/SDL2/SDL_shape.h	90;"	d
SDL_SWSURFACE	/usr/include/SDL2/SDL_surface.h	52;"	d
SDL_SYSTEM_CURSOR_ARROW	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_ARROW,     \/**< Arrow *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_CROSSHAIR	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_CROSSHAIR, \/**< Crosshair *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_HAND	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_HAND,      \/**< Hand *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_IBEAM	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_IBEAM,     \/**< I-beam *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_NO	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_NO,        \/**< Slashed circle or crossbones *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_SIZEALL	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZEALL,   \/**< Four pointed arrow pointing north, south, east, and west *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_SIZENESW	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENESW,  \/**< Double arrow pointing northeast and southwest *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_SIZENS	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENS,    \/**< Double arrow pointing north and south *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_SIZENWSE	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZENWSE,  \/**< Double arrow pointing northwest and southeast *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_SIZEWE	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_SIZEWE,    \/**< Double arrow pointing west and east *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_WAIT	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_WAIT,      \/**< Wait *\/$/;"	e	enum:__anon61
SDL_SYSTEM_CURSOR_WAITARROW	/usr/include/SDL2/SDL_mouse.h	/^    SDL_SYSTEM_CURSOR_WAITARROW, \/**< Small wait cursor (or Wait if not available) *\/$/;"	e	enum:__anon61
SDL_SYSWMEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_SYSWMEVENT,             \/**< System specific event *\/$/;"	e	enum:__anon11
SDL_SYSWM_COCOA	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_COCOA,$/;"	e	enum:__anon14
SDL_SYSWM_DIRECTFB	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_DIRECTFB,$/;"	e	enum:__anon14
SDL_SYSWM_MIR	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_MIR,$/;"	e	enum:__anon14
SDL_SYSWM_TYPE	/usr/include/SDL2/SDL_syswm.h	/^} SDL_SYSWM_TYPE;$/;"	t	typeref:enum:__anon14
SDL_SYSWM_UIKIT	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_UIKIT,$/;"	e	enum:__anon14
SDL_SYSWM_UNKNOWN	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_UNKNOWN,$/;"	e	enum:__anon14
SDL_SYSWM_WAYLAND	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_WAYLAND,$/;"	e	enum:__anon14
SDL_SYSWM_WINDOWS	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_WINDOWS,$/;"	e	enum:__anon14
SDL_SYSWM_X11	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_X11,$/;"	e	enum:__anon14
SDL_SaveAllDollarTemplates	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_SaveAllDollarTemplates(SDL_RWops *dst);$/;"	p	signature:(SDL_RWops *dst)
SDL_SaveBMP	/usr/include/SDL2/SDL_surface.h	199;"	d
SDL_SaveBMP_RW	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SaveBMP_RW$/;"	p	signature:(SDL_Surface * surface, SDL_RWops * dst, int freedst)
SDL_SaveDollarTemplate	/usr/include/SDL2/SDL_gesture.h	/^extern DECLSPEC int SDLCALL SDL_SaveDollarTemplate(SDL_GestureID gestureId,SDL_RWops *dst);$/;"	p	signature:(SDL_GestureID gestureId,SDL_RWops *dst)
SDL_Scancode	/usr/include/SDL2/SDL_scancode.h	/^} SDL_Scancode;$/;"	t	typeref:enum:__anon59
SDL_SemPost	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemPost(SDL_sem * sem);$/;"	p	signature:(SDL_sem * sem)
SDL_SemTryWait	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemTryWait(SDL_sem * sem);$/;"	p	signature:(SDL_sem * sem)
SDL_SemValue	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC Uint32 SDLCALL SDL_SemValue(SDL_sem * sem);$/;"	p	signature:(SDL_sem * sem)
SDL_SemWait	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWait(SDL_sem * sem);$/;"	p	signature:(SDL_sem * sem)
SDL_SemWaitTimeout	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_SemWaitTimeout(SDL_sem * sem, Uint32 ms);$/;"	p	signature:(SDL_sem * sem, Uint32 ms)
SDL_SetAssertionHandler	/usr/include/SDL2/SDL_assert.h	/^extern DECLSPEC void SDLCALL SDL_SetAssertionHandler($/;"	p	signature:( SDL_AssertionHandler handler, void *userdata)
SDL_SetClipRect	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetClipRect(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, const SDL_Rect * rect)
SDL_SetClipboardText	/usr/include/SDL2/SDL_clipboard.h	/^extern DECLSPEC int SDLCALL SDL_SetClipboardText(const char *text);$/;"	p	signature:(const char *text)
SDL_SetColorKey	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetColorKey(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, int flag, Uint32 key)
SDL_SetCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_SetCursor(SDL_Cursor * cursor);$/;"	p	signature:(SDL_Cursor * cursor)
SDL_SetError	/usr/include/SDL2/SDL_error.h	/^extern DECLSPEC int SDLCALL SDL_SetError(const char *fmt, ...);$/;"	p	signature:(const char *fmt, ...)
SDL_SetEventFilter	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC void SDLCALL SDL_SetEventFilter(SDL_EventFilter filter,$/;"	p	signature:(SDL_EventFilter filter, void *userdata)
SDL_SetHint	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetHint(const char *name,$/;"	p	signature:(const char *name, const char *value)
SDL_SetHintWithPriority	/usr/include/SDL2/SDL_hints.h	/^extern DECLSPEC SDL_bool SDLCALL SDL_SetHintWithPriority(const char *name,$/;"	p	signature:(const char *name, const char *value, SDL_HintPriority priority)
SDL_SetMainReady	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_SetMainReady(void);$/;"	p	signature:(void)
SDL_SetModState	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetModState(SDL_Keymod modstate);$/;"	p	signature:(SDL_Keymod modstate)
SDL_SetPaletteColors	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC int SDLCALL SDL_SetPaletteColors(SDL_Palette * palette,$/;"	p	signature:(SDL_Palette * palette, const SDL_Color * colors, int firstcolor, int ncolors)
SDL_SetPixelFormatPalette	/usr/include/SDL2/SDL_pixels.h	/^extern DECLSPEC int SDLCALL SDL_SetPixelFormatPalette(SDL_PixelFormat * format,$/;"	p	signature:(SDL_PixelFormat * format, SDL_Palette *palette)
SDL_SetRelativeMouseMode	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_SetRelativeMouseMode(SDL_bool enabled);$/;"	p	signature:(SDL_bool enabled)
SDL_SetRenderDrawBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderDrawBlendMode(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, SDL_BlendMode blendMode)
SDL_SetRenderDrawColor	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderDrawColor(SDL_Renderer * renderer,$/;"	p	signature:(SDL_Renderer * renderer, Uint8 r, Uint8 g, Uint8 b, Uint8 a)
SDL_SetRenderTarget	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetRenderTarget(SDL_Renderer *renderer,$/;"	p	signature:(SDL_Renderer *renderer, SDL_Texture *texture)
SDL_SetSurfaceAlphaMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceAlphaMod(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, Uint8 alpha)
SDL_SetSurfaceBlendMode	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceBlendMode(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, SDL_BlendMode blendMode)
SDL_SetSurfaceColorMod	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceColorMod(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, Uint8 r, Uint8 g, Uint8 b)
SDL_SetSurfacePalette	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfacePalette(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, SDL_Palette * palette)
SDL_SetSurfaceRLE	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SetSurfaceRLE(SDL_Surface * surface,$/;"	p	signature:(SDL_Surface * surface, int flag)
SDL_SetTextInputRect	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_SetTextInputRect(SDL_Rect *rect);$/;"	p	signature:(SDL_Rect *rect)
SDL_SetTextureAlphaMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureAlphaMod(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, Uint8 alpha)
SDL_SetTextureBlendMode	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureBlendMode(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, SDL_BlendMode blendMode)
SDL_SetTextureColorMod	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_SetTextureColorMod(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, Uint8 r, Uint8 g, Uint8 b)
SDL_SetThreadPriority	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC int SDLCALL SDL_SetThreadPriority(SDL_ThreadPriority priority);$/;"	p	signature:(SDL_ThreadPriority priority)
SDL_SetWindowBordered	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowBordered(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, SDL_bool bordered)
SDL_SetWindowBrightness	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowBrightness(SDL_Window * window, float brightness);$/;"	p	signature:(SDL_Window * window, float brightness)
SDL_SetWindowData	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void* SDLCALL SDL_SetWindowData(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, const char *name, void *userdata)
SDL_SetWindowDisplayMode	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowDisplayMode(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, const SDL_DisplayMode * mode)
SDL_SetWindowFullscreen	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowFullscreen(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, Uint32 flags)
SDL_SetWindowGammaRamp	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowGammaRamp(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, const Uint16 * red, const Uint16 * green, const Uint16 * blue)
SDL_SetWindowGrab	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowGrab(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, SDL_bool grabbed)
SDL_SetWindowIcon	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowIcon(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, SDL_Surface * icon)
SDL_SetWindowMaximumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowMaximumSize(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int max_w, int max_h)
SDL_SetWindowMinimumSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowMinimumSize(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int min_w, int min_h)
SDL_SetWindowPosition	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowPosition(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int x, int y)
SDL_SetWindowShape	/usr/include/SDL2/SDL_shape.h	/^extern DECLSPEC int SDLCALL SDL_SetWindowShape(SDL_Window *window,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode);$/;"	p	signature:(SDL_Window *window,SDL_Surface *shape,SDL_WindowShapeMode *shape_mode)
SDL_SetWindowSize	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowSize(SDL_Window * window, int w,$/;"	p	signature:(SDL_Window * window, int w, int h)
SDL_SetWindowTitle	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_SetWindowTitle(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, const char *title)
SDL_ShowCursor	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC int SDLCALL SDL_ShowCursor(int toggle);$/;"	p	signature:(int toggle)
SDL_ShowMessageBox	/usr/include/SDL2/SDL_messagebox.h	/^extern DECLSPEC int SDLCALL SDL_ShowMessageBox(const SDL_MessageBoxData *messageboxdata, int *buttonid);$/;"	p	signature:(const SDL_MessageBoxData *messageboxdata, int *buttonid)
SDL_ShowSimpleMessageBox	/usr/include/SDL2/SDL_messagebox.h	/^extern DECLSPEC int SDLCALL SDL_ShowSimpleMessageBox(Uint32 flags, const char *title, const char *message, SDL_Window *window);$/;"	p	signature:(Uint32 flags, const char *title, const char *message, SDL_Window *window)
SDL_ShowWindow	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_ShowWindow(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_SoftStretch	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_SoftStretch(SDL_Surface * src,$/;"	p	signature:(SDL_Surface * src, const SDL_Rect * srcrect, SDL_Surface * dst, const SDL_Rect * dstrect)
SDL_SpinLock	/usr/include/SDL2/SDL_atomic.h	/^typedef int SDL_SpinLock;$/;"	t
SDL_StartTextInput	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_StartTextInput(void);$/;"	p	signature:(void)
SDL_StopTextInput	/usr/include/SDL2/SDL_keyboard.h	/^extern DECLSPEC void SDLCALL SDL_StopTextInput(void);$/;"	p	signature:(void)
SDL_Surface	/usr/include/SDL2/SDL_surface.h	/^typedef struct SDL_Surface$/;"	s
SDL_Surface	/usr/include/SDL2/SDL_surface.h	/^} SDL_Surface;$/;"	t	typeref:struct:SDL_Surface
SDL_Surface::clip_rect	/usr/include/SDL2/SDL_surface.h	/^    SDL_Rect clip_rect;         \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::flags	/usr/include/SDL2/SDL_surface.h	/^    Uint32 flags;               \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::format	/usr/include/SDL2/SDL_surface.h	/^    SDL_PixelFormat *format;    \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::h	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::lock_data	/usr/include/SDL2/SDL_surface.h	/^    void *lock_data;            \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::locked	/usr/include/SDL2/SDL_surface.h	/^    int locked;                 \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::map	/usr/include/SDL2/SDL_surface.h	/^    struct SDL_BlitMap *map;    \/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:struct:SDL_Surface::SDL_BlitMap	access:public
SDL_Surface::pitch	/usr/include/SDL2/SDL_surface.h	/^    int pitch;                  \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::pixels	/usr/include/SDL2/SDL_surface.h	/^    void *pixels;               \/**< Read-write *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::refcount	/usr/include/SDL2/SDL_surface.h	/^    int refcount;               \/**< Read-mostly *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::userdata	/usr/include/SDL2/SDL_surface.h	/^    void *userdata;             \/**< Read-write *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Surface::w	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
SDL_Swap16	/usr/include/SDL2/SDL_endian.h	/^SDL_Swap16(Uint16 x)$/;"	f	signature:(Uint16 x)
SDL_Swap32	/usr/include/SDL2/SDL_endian.h	/^SDL_Swap32(Uint32 x)$/;"	f	signature:(Uint32 x)
SDL_Swap64	/usr/include/SDL2/SDL_endian.h	/^SDL_Swap64(Uint64 x)$/;"	f	signature:(Uint64 x)
SDL_SwapBE16	/usr/include/SDL2/SDL_endian.h	215;"	d
SDL_SwapBE16	/usr/include/SDL2/SDL_endian.h	224;"	d
SDL_SwapBE32	/usr/include/SDL2/SDL_endian.h	216;"	d
SDL_SwapBE32	/usr/include/SDL2/SDL_endian.h	225;"	d
SDL_SwapBE64	/usr/include/SDL2/SDL_endian.h	217;"	d
SDL_SwapBE64	/usr/include/SDL2/SDL_endian.h	226;"	d
SDL_SwapFloat	/usr/include/SDL2/SDL_endian.h	/^SDL_SwapFloat(float x)$/;"	f	signature:(float x)
SDL_SwapFloatBE	/usr/include/SDL2/SDL_endian.h	218;"	d
SDL_SwapFloatBE	/usr/include/SDL2/SDL_endian.h	227;"	d
SDL_SwapFloatLE	/usr/include/SDL2/SDL_endian.h	214;"	d
SDL_SwapFloatLE	/usr/include/SDL2/SDL_endian.h	223;"	d
SDL_SwapLE16	/usr/include/SDL2/SDL_endian.h	211;"	d
SDL_SwapLE16	/usr/include/SDL2/SDL_endian.h	220;"	d
SDL_SwapLE32	/usr/include/SDL2/SDL_endian.h	212;"	d
SDL_SwapLE32	/usr/include/SDL2/SDL_endian.h	221;"	d
SDL_SwapLE64	/usr/include/SDL2/SDL_endian.h	213;"	d
SDL_SwapLE64	/usr/include/SDL2/SDL_endian.h	222;"	d
SDL_SysWMEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_SysWMEvent$/;"	s
SDL_SysWMEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_SysWMEvent;$/;"	t	typeref:struct:SDL_SysWMEvent
SDL_SysWMEvent::msg	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMmsg *msg;  \/**< driver dependent data, defined in SDL_syswm.h *\/$/;"	m	struct:SDL_SysWMEvent	access:public
SDL_SysWMEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_SysWMEvent	access:public
SDL_SysWMEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SYSWMEVENT *\/$/;"	m	struct:SDL_SysWMEvent	access:public
SDL_SysWMinfo	/usr/include/SDL2/SDL_syswm.h	/^struct SDL_SysWMinfo$/;"	s
SDL_SysWMinfo	/usr/include/SDL2/SDL_syswm.h	/^typedef struct SDL_SysWMinfo SDL_SysWMinfo;$/;"	t	typeref:struct:SDL_SysWMinfo
SDL_SysWMinfo::__anon21::__anon22::window	/usr/include/SDL2/SDL_syswm.h	/^            HWND window;                \/**< The window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon22	access:public
SDL_SysWMinfo::__anon21::__anon23::display	/usr/include/SDL2/SDL_syswm.h	/^            Display *display;           \/**< The X11 display *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon23	access:public
SDL_SysWMinfo::__anon21::__anon23::window	/usr/include/SDL2/SDL_syswm.h	/^            Window window;              \/**< The X11 window *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon23	access:public
SDL_SysWMinfo::__anon21::__anon24::dfb	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFB *dfb;             \/**< The directfb main interface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon24	access:public
SDL_SysWMinfo::__anon21::__anon24::surface	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBSurface *surface;  \/**< The directfb client surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon24	access:public
SDL_SysWMinfo::__anon21::__anon24::window	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBWindow *window;    \/**< The directfb window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon24	access:public
SDL_SysWMinfo::__anon21::__anon25::window	/usr/include/SDL2/SDL_syswm.h	/^            NSWindow *window;           \/* The Cocoa window *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon25	access:public
SDL_SysWMinfo::__anon21::__anon26::window	/usr/include/SDL2/SDL_syswm.h	/^            UIWindow *window;           \/* The UIKit window *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon26	access:public
SDL_SysWMinfo::__anon21::__anon27::display	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_display *display;            \/**< Wayland display *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon27	typeref:struct:SDL_SysWMinfo::__anon21::__anon27::wl_display	access:public
SDL_SysWMinfo::__anon21::__anon27::shell_surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_shell_surface *shell_surface; \/**< Wayland shell_surface (window manager handle) *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon27	typeref:struct:SDL_SysWMinfo::__anon21::__anon27::wl_shell_surface	access:public
SDL_SysWMinfo::__anon21::__anon27::surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_surface *surface;            \/**< Wayland surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon27	typeref:struct:SDL_SysWMinfo::__anon21::__anon27::wl_surface	access:public
SDL_SysWMinfo::__anon21::__anon28::connection	/usr/include/SDL2/SDL_syswm.h	/^            MirConnection *connection;  \/**< Mir display server connection *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon28	access:public
SDL_SysWMinfo::__anon21::__anon28::surface	/usr/include/SDL2/SDL_syswm.h	/^            MirSurface *surface;  \/**< Mir surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon28	access:public
SDL_SysWMinfo::__anon21::cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon25	access:public
SDL_SysWMinfo::__anon21::dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon24	access:public
SDL_SysWMinfo::__anon21::dummy	/usr/include/SDL2/SDL_syswm.h	/^        int dummy;$/;"	m	union:SDL_SysWMinfo::__anon21	access:public
SDL_SysWMinfo::__anon21::mir	/usr/include/SDL2/SDL_syswm.h	/^        } mir;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon28	access:public
SDL_SysWMinfo::__anon21::uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon26	access:public
SDL_SysWMinfo::__anon21::win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon22	access:public
SDL_SysWMinfo::__anon21::wl	/usr/include/SDL2/SDL_syswm.h	/^        } wl;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon27	access:public
SDL_SysWMinfo::__anon21::x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon23	access:public
SDL_SysWMinfo::info	/usr/include/SDL2/SDL_syswm.h	/^    } info;$/;"	m	struct:SDL_SysWMinfo	typeref:union:SDL_SysWMinfo::__anon21	access:public
SDL_SysWMinfo::subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMinfo	access:public
SDL_SysWMinfo::version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMinfo	access:public
SDL_SysWMmsg	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_SysWMmsg SDL_SysWMmsg;$/;"	t	typeref:struct:SDL_SysWMmsg
SDL_SysWMmsg	/usr/include/SDL2/SDL_syswm.h	/^struct SDL_SysWMmsg$/;"	s
SDL_SysWMmsg::__anon15::__anon16::hwnd	/usr/include/SDL2/SDL_syswm.h	/^            HWND hwnd;                  \/**< The window for the message *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
SDL_SysWMmsg::__anon15::__anon16::lParam	/usr/include/SDL2/SDL_syswm.h	/^            LPARAM lParam;              \/**< LONG message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
SDL_SysWMmsg::__anon15::__anon16::msg	/usr/include/SDL2/SDL_syswm.h	/^            UINT msg;                   \/**< The type of message *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
SDL_SysWMmsg::__anon15::__anon16::wParam	/usr/include/SDL2/SDL_syswm.h	/^            WPARAM wParam;              \/**< WORD message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
SDL_SysWMmsg::__anon15::__anon17::event	/usr/include/SDL2/SDL_syswm.h	/^            XEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon17	access:public
SDL_SysWMmsg::__anon15::__anon18::event	/usr/include/SDL2/SDL_syswm.h	/^            DFBEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon18	access:public
SDL_SysWMmsg::__anon15::cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon19	access:public
SDL_SysWMmsg::__anon15::dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon18	access:public
SDL_SysWMmsg::__anon15::dummy	/usr/include/SDL2/SDL_syswm.h	/^        int dummy;$/;"	m	union:SDL_SysWMmsg::__anon15	access:public
SDL_SysWMmsg::__anon15::uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon20	access:public
SDL_SysWMmsg::__anon15::win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon16	access:public
SDL_SysWMmsg::__anon15::x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon17	access:public
SDL_SysWMmsg::msg	/usr/include/SDL2/SDL_syswm.h	/^    } msg;$/;"	m	struct:SDL_SysWMmsg	typeref:union:SDL_SysWMmsg::__anon15	access:public
SDL_SysWMmsg::subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMmsg	access:public
SDL_SysWMmsg::version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMmsg	access:public
SDL_SystemCursor	/usr/include/SDL2/SDL_mouse.h	/^} SDL_SystemCursor;$/;"	t	typeref:enum:__anon61
SDL_TABLESIZE	/usr/include/SDL2/SDL_stdinc.h	84;"	d
SDL_TEXTEDITING	/usr/include/SDL2/SDL_events.h	/^    SDL_TEXTEDITING,            \/**< Keyboard text editing (composition) *\/$/;"	e	enum:__anon11
SDL_TEXTEDITINGEVENT_TEXT_SIZE	/usr/include/SDL2/SDL_events.h	191;"	d
SDL_TEXTINPUT	/usr/include/SDL2/SDL_events.h	/^    SDL_TEXTINPUT,              \/**< Keyboard text input *\/$/;"	e	enum:__anon11
SDL_TEXTINPUTEVENT_TEXT_SIZE	/usr/include/SDL2/SDL_events.h	206;"	d
SDL_TEXTUREACCESS_STATIC	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREACCESS_STATIC,    \/**< Changes rarely, not lockable *\/$/;"	e	enum:__anon66
SDL_TEXTUREACCESS_STREAMING	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREACCESS_STREAMING, \/**< Changes frequently, lockable *\/$/;"	e	enum:__anon66
SDL_TEXTUREACCESS_TARGET	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREACCESS_TARGET     \/**< Texture can be used as a render target *\/$/;"	e	enum:__anon66
SDL_TEXTUREMODULATE_ALPHA	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREMODULATE_ALPHA = 0x00000002     \/**< srcA = srcA * alpha *\/$/;"	e	enum:__anon67
SDL_TEXTUREMODULATE_COLOR	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREMODULATE_COLOR = 0x00000001,    \/**< srcC = srcC * color *\/$/;"	e	enum:__anon67
SDL_TEXTUREMODULATE_NONE	/usr/include/SDL2/SDL_render.h	/^    SDL_TEXTUREMODULATE_NONE = 0x00000000,     \/**< No modulation *\/$/;"	e	enum:__anon67
SDL_THREAD_PRIORITY_HIGH	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_HIGH$/;"	e	enum:__anon13
SDL_THREAD_PRIORITY_LOW	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_LOW,$/;"	e	enum:__anon13
SDL_THREAD_PRIORITY_NORMAL	/usr/include/SDL2/SDL_thread.h	/^    SDL_THREAD_PRIORITY_NORMAL,$/;"	e	enum:__anon13
SDL_THREAD_PTHREAD	/usr/include/SDL2/SDL_config.h	247;"	d
SDL_THREAD_PTHREAD_RECURSIVE_MUTEX	/usr/include/SDL2/SDL_config.h	248;"	d
SDL_TICKS_PASSED	/usr/include/SDL2/SDL_timer.h	56;"	d
SDL_TIMER_UNIX	/usr/include/SDL2/SDL_config.h	255;"	d
SDL_TLSCreate	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC SDL_TLSID SDLCALL SDL_TLSCreate(void);$/;"	p	signature:(void)
SDL_TLSGet	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC void * SDLCALL SDL_TLSGet(SDL_TLSID id);$/;"	p	signature:(SDL_TLSID id)
SDL_TLSID	/usr/include/SDL2/SDL_thread.h	/^typedef unsigned int SDL_TLSID;$/;"	t
SDL_TLSSet	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC int SDLCALL SDL_TLSSet(SDL_TLSID id, const void *value, void (*destructor)(void*));$/;"	p	signature:(SDL_TLSID id, const void *value, void (*destructor)(void*))
SDL_TOUCH_MOUSEID	/usr/include/SDL2/SDL_touch.h	53;"	d
SDL_TRUE	/usr/include/SDL2/SDL_stdinc.h	/^    SDL_TRUE = 1$/;"	e	enum:__anon73
SDL_TextEditingEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_TextEditingEvent$/;"	s
SDL_TextEditingEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_TextEditingEvent;$/;"	t	typeref:struct:SDL_TextEditingEvent
SDL_TextEditingEvent::length	/usr/include/SDL2/SDL_events.h	/^    Sint32 length;                              \/**< The length of selected editing text *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
SDL_TextEditingEvent::start	/usr/include/SDL2/SDL_events.h	/^    Sint32 start;                               \/**< The start cursor of selected editing text *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
SDL_TextEditingEvent::text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  \/**< The editing text *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
SDL_TextEditingEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_TextEditingEvent	access:public
SDL_TextEditingEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                                \/**< ::SDL_TEXTEDITING *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
SDL_TextEditingEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                            \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
SDL_TextInputEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_TextInputEvent$/;"	s
SDL_TextInputEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_TextInputEvent;$/;"	t	typeref:struct:SDL_TextInputEvent
SDL_TextInputEvent::text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  \/**< The input text *\/$/;"	m	struct:SDL_TextInputEvent	access:public
SDL_TextInputEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_TextInputEvent	access:public
SDL_TextInputEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                              \/**< ::SDL_TEXTINPUT *\/$/;"	m	struct:SDL_TextInputEvent	access:public
SDL_TextInputEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                          \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextInputEvent	access:public
SDL_Texture	/usr/include/SDL2/SDL_render.h	/^typedef struct SDL_Texture SDL_Texture;$/;"	t	typeref:struct:SDL_Texture
SDL_TextureAccess	/usr/include/SDL2/SDL_render.h	/^} SDL_TextureAccess;$/;"	t	typeref:enum:__anon66
SDL_TextureModulate	/usr/include/SDL2/SDL_render.h	/^} SDL_TextureModulate;$/;"	t	typeref:enum:__anon67
SDL_Thread	/usr/include/SDL2/SDL_thread.h	/^typedef struct SDL_Thread SDL_Thread;$/;"	t	typeref:struct:SDL_Thread
SDL_ThreadFunction	/usr/include/SDL2/SDL_thread.h	/^typedef int (SDLCALL * SDL_ThreadFunction) (void *data);$/;"	t
SDL_ThreadID	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC SDL_threadID SDLCALL SDL_ThreadID(void);$/;"	p	signature:(void)
SDL_ThreadPriority	/usr/include/SDL2/SDL_thread.h	/^} SDL_ThreadPriority;$/;"	t	typeref:enum:__anon13
SDL_TimerCallback	/usr/include/SDL2/SDL_timer.h	/^typedef Uint32 (SDLCALL * SDL_TimerCallback) (Uint32 interval, void *param);$/;"	t
SDL_TimerID	/usr/include/SDL2/SDL_timer.h	/^typedef int SDL_TimerID;$/;"	t
SDL_TouchFingerEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_TouchFingerEvent$/;"	s
SDL_TouchFingerEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_TouchFingerEvent;$/;"	t	typeref:struct:SDL_TouchFingerEvent
SDL_TouchFingerEvent::dx	/usr/include/SDL2/SDL_events.h	/^    float dx;           \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::dy	/usr/include/SDL2/SDL_events.h	/^    float dy;           \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::fingerId	/usr/include/SDL2/SDL_events.h	/^    SDL_FingerID fingerId;$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::pressure	/usr/include/SDL2/SDL_events.h	/^    float pressure;     \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchFingerEvent::y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
SDL_TouchID	/usr/include/SDL2/SDL_touch.h	/^typedef Sint64 SDL_TouchID;$/;"	t
SDL_TriggerBreakpoint	/usr/include/SDL2/SDL_assert.h	53;"	d
SDL_TriggerBreakpoint	/usr/include/SDL2/SDL_assert.h	55;"	d
SDL_TriggerBreakpoint	/usr/include/SDL2/SDL_assert.h	58;"	d
SDL_TriggerBreakpoint	/usr/include/SDL2/SDL_assert.h	61;"	d
SDL_TryLockMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_TryLockMutex(SDL_mutex * mutex);$/;"	p	signature:(SDL_mutex * mutex)
SDL_UNSUPPORTED	/usr/include/SDL2/SDL_error.h	/^    SDL_UNSUPPORTED,$/;"	e	enum:__anon29
SDL_USEREVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_USEREVENT    = 0x8000,$/;"	e	enum:__anon11
SDL_UnionRect	/usr/include/SDL2/SDL_rect.h	/^extern DECLSPEC void SDLCALL SDL_UnionRect(const SDL_Rect * A,$/;"	p	signature:(const SDL_Rect * A, const SDL_Rect * B, SDL_Rect * result)
SDL_UnloadObject	/usr/include/SDL2/SDL_loadso.h	/^extern DECLSPEC void SDLCALL SDL_UnloadObject(void *handle);$/;"	p	signature:(void *handle)
SDL_UnlockAudio	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudio(void);$/;"	p	signature:(void)
SDL_UnlockAudioDevice	/usr/include/SDL2/SDL_audio.h	/^extern DECLSPEC void SDLCALL SDL_UnlockAudioDevice(SDL_AudioDeviceID dev);$/;"	p	signature:(SDL_AudioDeviceID dev)
SDL_UnlockMutex	/usr/include/SDL2/SDL_mutex.h	/^extern DECLSPEC int SDLCALL SDL_UnlockMutex(SDL_mutex * mutex);$/;"	p	signature:(SDL_mutex * mutex)
SDL_UnlockSurface	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC void SDLCALL SDL_UnlockSurface(SDL_Surface * surface);$/;"	p	signature:(SDL_Surface * surface)
SDL_UnlockTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC void SDLCALL SDL_UnlockTexture(SDL_Texture * texture);$/;"	p	signature:(SDL_Texture * texture)
SDL_UnregisterApp	/usr/include/SDL2/SDL_main.h	/^extern DECLSPEC void SDLCALL SDL_UnregisterApp(void);$/;"	p	signature:(void)
SDL_Unsupported	/usr/include/SDL2/SDL_error.h	53;"	d
SDL_UpdateTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_UpdateTexture(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, const SDL_Rect * rect, const void *pixels, int pitch)
SDL_UpdateWindowSurface	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpdateWindowSurface(SDL_Window * window);$/;"	p	signature:(SDL_Window * window)
SDL_UpdateWindowSurfaceRects	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_UpdateWindowSurfaceRects(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, const SDL_Rect * rects, int numrects)
SDL_UpdateYUVTexture	/usr/include/SDL2/SDL_render.h	/^extern DECLSPEC int SDLCALL SDL_UpdateYUVTexture(SDL_Texture * texture,$/;"	p	signature:(SDL_Texture * texture, const SDL_Rect * rect, const Uint8 *Yplane, int Ypitch, const Uint8 *Uplane, int Upitch, const Uint8 *Vplane, int Vpitch)
SDL_UpperBlit	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlit$/;"	p	signature:(SDL_Surface * src, const SDL_Rect * srcrect, SDL_Surface * dst, SDL_Rect * dstrect)
SDL_UpperBlitScaled	/usr/include/SDL2/SDL_surface.h	/^extern DECLSPEC int SDLCALL SDL_UpperBlitScaled$/;"	p	signature:(SDL_Surface * src, const SDL_Rect * srcrect, SDL_Surface * dst, SDL_Rect * dstrect)
SDL_UserEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_UserEvent$/;"	s
SDL_UserEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_UserEvent;$/;"	t	typeref:struct:SDL_UserEvent
SDL_UserEvent::code	/usr/include/SDL2/SDL_events.h	/^    Sint32 code;        \/**< User defined event code *\/$/;"	m	struct:SDL_UserEvent	access:public
SDL_UserEvent::data1	/usr/include/SDL2/SDL_events.h	/^    void *data1;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	access:public
SDL_UserEvent::data2	/usr/include/SDL2/SDL_events.h	/^    void *data2;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	access:public
SDL_UserEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_UserEvent	access:public
SDL_UserEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 *\/$/;"	m	struct:SDL_UserEvent	access:public
SDL_UserEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window if any *\/$/;"	m	struct:SDL_UserEvent	access:public
SDL_VERSION	/usr/include/SDL2/SDL_version.h	79;"	d
SDL_VERSIONNUM	/usr/include/SDL2/SDL_version.h	94;"	d
SDL_VERSION_ATLEAST	/usr/include/SDL2/SDL_version.h	106;"	d
SDL_VIDEO_DRIVER_DUMMY	/usr/include/SDL2/SDL_config.h	263;"	d
SDL_VIDEO_DRIVER_WAYLAND	/usr/include/SDL2/SDL_config.h	265;"	d
SDL_VIDEO_DRIVER_WAYLAND_QT_TOUCH	/usr/include/SDL2/SDL_config.h	266;"	d
SDL_VIDEO_DRIVER_X11	/usr/include/SDL2/SDL_config.h	274;"	d
SDL_VIDEO_DRIVER_X11_CONST_PARAM_XDATA32	/usr/include/SDL2/SDL_config.h	293;"	d
SDL_VIDEO_DRIVER_X11_CONST_PARAM_XEXTADDDISPLAY	/usr/include/SDL2/SDL_config.h	294;"	d
SDL_VIDEO_DRIVER_X11_HAS_XKBKEYCODETOKEYSYM	/usr/include/SDL2/SDL_config.h	295;"	d
SDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS	/usr/include/SDL2/SDL_config.h	292;"	d
SDL_VIDEO_DRIVER_X11_XCURSOR	/usr/include/SDL2/SDL_config.h	284;"	d
SDL_VIDEO_DRIVER_X11_XINERAMA	/usr/include/SDL2/SDL_config.h	285;"	d
SDL_VIDEO_DRIVER_X11_XINPUT2	/usr/include/SDL2/SDL_config.h	286;"	d
SDL_VIDEO_DRIVER_X11_XINPUT2_SUPPORTS_MULTITOUCH	/usr/include/SDL2/SDL_config.h	287;"	d
SDL_VIDEO_DRIVER_X11_XRANDR	/usr/include/SDL2/SDL_config.h	288;"	d
SDL_VIDEO_DRIVER_X11_XSCRNSAVER	/usr/include/SDL2/SDL_config.h	289;"	d
SDL_VIDEO_DRIVER_X11_XSHAPE	/usr/include/SDL2/SDL_config.h	290;"	d
SDL_VIDEO_DRIVER_X11_XVIDMODE	/usr/include/SDL2/SDL_config.h	291;"	d
SDL_VIDEO_OPENGL	/usr/include/SDL2/SDL_config.h	304;"	d
SDL_VIDEO_OPENGL_EGL	/usr/include/SDL2/SDL_config.h	309;"	d
SDL_VIDEO_OPENGL_ES2	/usr/include/SDL2/SDL_config.h	306;"	d
SDL_VIDEO_OPENGL_GLX	/usr/include/SDL2/SDL_config.h	310;"	d
SDL_VIDEO_RENDER_OGL	/usr/include/SDL2/SDL_config.h	298;"	d
SDL_VIDEO_RENDER_OGL_ES2	/usr/include/SDL2/SDL_config.h	300;"	d
SDL_VideoInit	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC int SDLCALL SDL_VideoInit(const char *driver_name);$/;"	p	signature:(const char *driver_name)
SDL_VideoQuit	/usr/include/SDL2/SDL_video.h	/^extern DECLSPEC void SDLCALL SDL_VideoQuit(void);$/;"	p	signature:(void)
SDL_WINDOWEVENT	/usr/include/SDL2/SDL_events.h	/^    SDL_WINDOWEVENT    = 0x200, \/**< Window state change *\/$/;"	e	enum:__anon11
SDL_WINDOWEVENT_CLOSE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_CLOSE           \/**< The window manager requests that the$/;"	e	enum:__anon7
SDL_WINDOWEVENT_ENTER	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_ENTER,          \/**< Window has gained mouse focus *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_EXPOSED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_EXPOSED,        \/**< Window has been exposed and should be$/;"	e	enum:__anon7
SDL_WINDOWEVENT_FOCUS_GAINED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_FOCUS_GAINED,   \/**< Window has gained keyboard focus *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_FOCUS_LOST	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_FOCUS_LOST,     \/**< Window has lost keyboard focus *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_HIDDEN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_HIDDEN,         \/**< Window has been hidden *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_LEAVE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_LEAVE,          \/**< Window has lost mouse focus *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_MAXIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_MAXIMIZED,      \/**< Window has been maximized *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_MINIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_MINIMIZED,      \/**< Window has been minimized *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_MOVED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_MOVED,          \/**< Window has been moved to data1, data2$/;"	e	enum:__anon7
SDL_WINDOWEVENT_NONE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_NONE,           \/**< Never used *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_RESIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_RESIZED,        \/**< Window has been resized to data1xdata2 *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_RESTORED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_RESTORED,       \/**< Window has been restored to normal size$/;"	e	enum:__anon7
SDL_WINDOWEVENT_SHOWN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_SHOWN,          \/**< Window has been shown *\/$/;"	e	enum:__anon7
SDL_WINDOWEVENT_SIZE_CHANGED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOWEVENT_SIZE_CHANGED,   \/**< The window size has changed, either as a result of an API call or through the system or user changing the window size. *\/$/;"	e	enum:__anon7
SDL_WINDOWPOS_CENTERED	/usr/include/SDL2/SDL_video.h	128;"	d
SDL_WINDOWPOS_CENTERED_DISPLAY	/usr/include/SDL2/SDL_video.h	127;"	d
SDL_WINDOWPOS_CENTERED_MASK	/usr/include/SDL2/SDL_video.h	126;"	d
SDL_WINDOWPOS_ISCENTERED	/usr/include/SDL2/SDL_video.h	129;"	d
SDL_WINDOWPOS_ISUNDEFINED	/usr/include/SDL2/SDL_video.h	120;"	d
SDL_WINDOWPOS_UNDEFINED	/usr/include/SDL2/SDL_video.h	119;"	d
SDL_WINDOWPOS_UNDEFINED_DISPLAY	/usr/include/SDL2/SDL_video.h	118;"	d
SDL_WINDOWPOS_UNDEFINED_MASK	/usr/include/SDL2/SDL_video.h	117;"	d
SDL_WINDOW_ALLOW_HIGHDPI	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_ALLOW_HIGHDPI = 0x00002000       \/**< window should be created in high-DPI mode if supported *\/$/;"	e	enum:__anon6
SDL_WINDOW_BORDERLESS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_BORDERLESS = 0x00000010,         \/**< no window decoration *\/$/;"	e	enum:__anon6
SDL_WINDOW_FOREIGN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_FOREIGN = 0x00000800,            \/**< window not created by SDL *\/$/;"	e	enum:__anon6
SDL_WINDOW_FULLSCREEN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_FULLSCREEN = 0x00000001,         \/**< fullscreen window *\/$/;"	e	enum:__anon6
SDL_WINDOW_FULLSCREEN_DESKTOP	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_FULLSCREEN_DESKTOP = ( SDL_WINDOW_FULLSCREEN | 0x00001000 ),$/;"	e	enum:__anon6
SDL_WINDOW_HIDDEN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_HIDDEN = 0x00000008,             \/**< window is not visible *\/$/;"	e	enum:__anon6
SDL_WINDOW_INPUT_FOCUS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_INPUT_FOCUS = 0x00000200,        \/**< window has input focus *\/$/;"	e	enum:__anon6
SDL_WINDOW_INPUT_GRABBED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_INPUT_GRABBED = 0x00000100,      \/**< window has grabbed input focus *\/$/;"	e	enum:__anon6
SDL_WINDOW_LACKS_SHAPE	/usr/include/SDL2/SDL_shape.h	44;"	d
SDL_WINDOW_MAXIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MAXIMIZED = 0x00000080,          \/**< window is maximized *\/$/;"	e	enum:__anon6
SDL_WINDOW_MINIMIZED	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MINIMIZED = 0x00000040,          \/**< window is minimized *\/$/;"	e	enum:__anon6
SDL_WINDOW_MOUSE_FOCUS	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_MOUSE_FOCUS = 0x00000400,        \/**< window has mouse focus *\/$/;"	e	enum:__anon6
SDL_WINDOW_OPENGL	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_OPENGL = 0x00000002,             \/**< window usable with OpenGL context *\/$/;"	e	enum:__anon6
SDL_WINDOW_RESIZABLE	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_RESIZABLE = 0x00000020,          \/**< window can be resized *\/$/;"	e	enum:__anon6
SDL_WINDOW_SHOWN	/usr/include/SDL2/SDL_video.h	/^    SDL_WINDOW_SHOWN = 0x00000004,              \/**< window is visible *\/$/;"	e	enum:__anon6
SDL_WaitEvent	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEvent(SDL_Event * event);$/;"	p	signature:(SDL_Event * event)
SDL_WaitEventTimeout	/usr/include/SDL2/SDL_events.h	/^extern DECLSPEC int SDLCALL SDL_WaitEventTimeout(SDL_Event * event,$/;"	p	signature:(SDL_Event * event, int timeout)
SDL_WaitThread	/usr/include/SDL2/SDL_thread.h	/^extern DECLSPEC void SDLCALL SDL_WaitThread(SDL_Thread * thread, int *status);$/;"	p	signature:(SDL_Thread * thread, int *status)
SDL_WarpMouseInWindow	/usr/include/SDL2/SDL_mouse.h	/^extern DECLSPEC void SDLCALL SDL_WarpMouseInWindow(SDL_Window * window,$/;"	p	signature:(SDL_Window * window, int x, int y)
SDL_WasInit	/usr/include/SDL2/SDL.h	/^extern DECLSPEC Uint32 SDLCALL SDL_WasInit(Uint32 flags);$/;"	p	signature:(Uint32 flags)
SDL_Window	/usr/include/SDL2/SDL_video.h	/^typedef struct SDL_Window SDL_Window;$/;"	t	typeref:struct:SDL_Window
SDL_WindowEvent	/usr/include/SDL2/SDL_events.h	/^typedef struct SDL_WindowEvent$/;"	s
SDL_WindowEvent	/usr/include/SDL2/SDL_events.h	/^} SDL_WindowEvent;$/;"	t	typeref:struct:SDL_WindowEvent
SDL_WindowEvent::data1	/usr/include/SDL2/SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::data2	/usr/include/SDL2/SDL_events.h	/^    Sint32 data2;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::event	/usr/include/SDL2/SDL_events.h	/^    Uint8 event;        \/**< ::SDL_WindowEventID *\/$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_WINDOWEVENT *\/$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEvent::windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window *\/$/;"	m	struct:SDL_WindowEvent	access:public
SDL_WindowEventID	/usr/include/SDL2/SDL_video.h	/^} SDL_WindowEventID;$/;"	t	typeref:enum:__anon7
SDL_WindowFlags	/usr/include/SDL2/SDL_video.h	/^} SDL_WindowFlags;$/;"	t	typeref:enum:__anon6
SDL_WindowShapeMode	/usr/include/SDL2/SDL_shape.h	/^typedef struct SDL_WindowShapeMode {$/;"	s
SDL_WindowShapeMode	/usr/include/SDL2/SDL_shape.h	/^} SDL_WindowShapeMode;$/;"	t	typeref:struct:SDL_WindowShapeMode
SDL_WindowShapeMode::mode	/usr/include/SDL2/SDL_shape.h	/^    WindowShapeMode mode;$/;"	m	struct:SDL_WindowShapeMode	access:public
SDL_WindowShapeMode::parameters	/usr/include/SDL2/SDL_shape.h	/^    SDL_WindowShapeParams parameters;$/;"	m	struct:SDL_WindowShapeMode	access:public
SDL_WindowShapeParams	/usr/include/SDL2/SDL_shape.h	/^} SDL_WindowShapeParams;$/;"	t	typeref:union:__anon36
SDL_WriteBE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE16(SDL_RWops * dst, Uint16 value);$/;"	p	signature:(SDL_RWops * dst, Uint16 value)
SDL_WriteBE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE32(SDL_RWops * dst, Uint32 value);$/;"	p	signature:(SDL_RWops * dst, Uint32 value)
SDL_WriteBE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteBE64(SDL_RWops * dst, Uint64 value);$/;"	p	signature:(SDL_RWops * dst, Uint64 value)
SDL_WriteLE16	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE16(SDL_RWops * dst, Uint16 value);$/;"	p	signature:(SDL_RWops * dst, Uint16 value)
SDL_WriteLE32	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE32(SDL_RWops * dst, Uint32 value);$/;"	p	signature:(SDL_RWops * dst, Uint32 value)
SDL_WriteLE64	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteLE64(SDL_RWops * dst, Uint64 value);$/;"	p	signature:(SDL_RWops * dst, Uint64 value)
SDL_WriteU8	/usr/include/SDL2/SDL_rwops.h	/^extern DECLSPEC size_t SDLCALL SDL_WriteU8(SDL_RWops * dst, Uint8 value);$/;"	p	signature:(SDL_RWops * dst, Uint8 value)
SDL_abs	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_abs(int x);$/;"	p	signature:(int x)
SDL_acos	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_acos(double x);$/;"	p	signature:(double x)
SDL_arraysize	/usr/include/SDL2/SDL_stdinc.h	83;"	d
SDL_asin	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_asin(double x);$/;"	p	signature:(double x)
SDL_assert	/usr/include/SDL2/SDL_assert.h	164;"	d
SDL_assert	/usr/include/SDL2/SDL_assert.h	168;"	d
SDL_assert	/usr/include/SDL2/SDL_assert.h	172;"	d
SDL_assert	/usr/include/SDL2/SDL_assert.h	176;"	d
SDL_assert_always	/usr/include/SDL2/SDL_assert.h	184;"	d
SDL_assert_data	/usr/include/SDL2/SDL_assert.h	/^typedef struct SDL_assert_data$/;"	s
SDL_assert_data	/usr/include/SDL2/SDL_assert.h	/^} SDL_assert_data;$/;"	t	typeref:struct:SDL_assert_data
SDL_assert_data::always_ignore	/usr/include/SDL2/SDL_assert.h	/^    int always_ignore;$/;"	m	struct:SDL_assert_data	access:public
SDL_assert_data::condition	/usr/include/SDL2/SDL_assert.h	/^    const char *condition;$/;"	m	struct:SDL_assert_data	access:public
SDL_assert_data::filename	/usr/include/SDL2/SDL_assert.h	/^    const char *filename;$/;"	m	struct:SDL_assert_data	access:public
SDL_assert_data::function	/usr/include/SDL2/SDL_assert.h	/^    const char *function;$/;"	m	struct:SDL_assert_data	access:public
SDL_assert_data::linenum	/usr/include/SDL2/SDL_assert.h	/^    int linenum;$/;"	m	struct:SDL_assert_data	access:public
SDL_assert_data::next	/usr/include/SDL2/SDL_assert.h	/^    const struct SDL_assert_data *next;$/;"	m	struct:SDL_assert_data	typeref:struct:SDL_assert_data::SDL_assert_data	access:public
SDL_assert_data::trigger_count	/usr/include/SDL2/SDL_assert.h	/^    unsigned int trigger_count;$/;"	m	struct:SDL_assert_data	access:public
SDL_assert_paranoid	/usr/include/SDL2/SDL_assert.h	166;"	d
SDL_assert_paranoid	/usr/include/SDL2/SDL_assert.h	170;"	d
SDL_assert_paranoid	/usr/include/SDL2/SDL_assert.h	174;"	d
SDL_assert_paranoid	/usr/include/SDL2/SDL_assert.h	178;"	d
SDL_assert_release	/usr/include/SDL2/SDL_assert.h	165;"	d
SDL_assert_release	/usr/include/SDL2/SDL_assert.h	169;"	d
SDL_assert_release	/usr/include/SDL2/SDL_assert.h	173;"	d
SDL_assert_release	/usr/include/SDL2/SDL_assert.h	177;"	d
SDL_assert_state	/usr/include/SDL2/SDL_assert.h	/^} SDL_assert_state;$/;"	t	typeref:enum:__anon71
SDL_atan	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atan(double x);$/;"	p	signature:(double x)
SDL_atan2	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atan2(double x, double y);$/;"	p	signature:(double x, double y)
SDL_atof	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_atof(const char *str);$/;"	p	signature:(const char *str)
SDL_atoi	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_atoi(const char *str);$/;"	p	signature:(const char *str)
SDL_atomic_t	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	t	typeref:struct:__anon37
SDL_blit	/usr/include/SDL2/SDL_surface.h	/^typedef int (*SDL_blit) (struct SDL_Surface * src, SDL_Rect * srcrect,$/;"	t
SDL_bool	/usr/include/SDL2/SDL_stdinc.h	/^} SDL_bool;$/;"	t	typeref:enum:__anon73
SDL_calloc	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_calloc(size_t nmemb, size_t size);$/;"	p	signature:(size_t nmemb, size_t size)
SDL_ceil	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_ceil(double x);$/;"	p	signature:(double x)
SDL_cond	/usr/include/SDL2/SDL_mutex.h	/^typedef struct SDL_cond SDL_cond;$/;"	t	typeref:struct:SDL_cond
SDL_const_cast	/usr/include/SDL2/SDL_stdinc.h	100;"	d
SDL_const_cast	/usr/include/SDL2/SDL_stdinc.h	96;"	d
SDL_copysign	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_copysign(double x, double y);$/;"	p	signature:(double x, double y)
SDL_cos	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_cos(double x);$/;"	p	signature:(double x)
SDL_cosf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_cosf(float x);$/;"	p	signature:(float x)
SDL_disabled_assert	/usr/include/SDL2/SDL_assert.h	95;"	d
SDL_enabled_assert	/usr/include/SDL2/SDL_assert.h	141;"	d
SDL_errorcode	/usr/include/SDL2/SDL_error.h	/^} SDL_errorcode;$/;"	t	typeref:enum:__anon29
SDL_eventaction	/usr/include/SDL2/SDL_events.h	/^} SDL_eventaction;$/;"	t	typeref:enum:__anon12
SDL_fabs	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_fabs(double x);$/;"	p	signature:(double x)
SDL_floor	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_floor(double x);$/;"	p	signature:(double x)
SDL_free	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_free(void *mem);$/;"	p	signature:(void *mem)
SDL_getenv	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_getenv(const char *name);$/;"	p	signature:(const char *name)
SDL_iPhoneSetAnimationCallback	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC int SDLCALL SDL_iPhoneSetAnimationCallback(SDL_Window * window, int interval, void (*callback)(void*), void *callbackParam);$/;"	p	signature:(SDL_Window * window, int interval, void (*callback)(void*), void *callbackParam)
SDL_iPhoneSetEventPump	/usr/include/SDL2/SDL_system.h	/^extern DECLSPEC void SDLCALL SDL_iPhoneSetEventPump(SDL_bool enabled);$/;"	p	signature:(SDL_bool enabled)
SDL_iconv	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_iconv(SDL_iconv_t cd, const char **inbuf,$/;"	p	signature:(SDL_iconv_t cd, const char **inbuf, size_t * inbytesleft, char **outbuf, size_t * outbytesleft)
SDL_iconv_close	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_iconv_close(SDL_iconv_t cd);$/;"	p	signature:(SDL_iconv_t cd)
SDL_iconv_open	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC SDL_iconv_t SDLCALL SDL_iconv_open(const char *tocode,$/;"	p	signature:(const char *tocode, const char *fromcode)
SDL_iconv_string	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_iconv_string(const char *tocode,$/;"	p	signature:(const char *tocode, const char *fromcode, const char *inbuf, size_t inbytesleft)
SDL_iconv_t	/usr/include/SDL2/SDL_stdinc.h	/^typedef struct _SDL_iconv_t *SDL_iconv_t;$/;"	t	typeref:struct:_SDL_iconv_t
SDL_iconv_utf8_locale	/usr/include/SDL2/SDL_stdinc.h	383;"	d
SDL_iconv_utf8_ucs2	/usr/include/SDL2/SDL_stdinc.h	384;"	d
SDL_iconv_utf8_ucs4	/usr/include/SDL2/SDL_stdinc.h	385;"	d
SDL_isdigit	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isdigit(int x);$/;"	p	signature:(int x)
SDL_isspace	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_isspace(int x);$/;"	p	signature:(int x)
SDL_itoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_itoa(int value, char *str, int radix);$/;"	p	signature:(int value, char *str, int radix)
SDL_lltoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_lltoa(Sint64 value, char *str, int radix);$/;"	p	signature:(Sint64 value, char *str, int radix)
SDL_log	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_log(double x);$/;"	p	signature:(double x)
SDL_ltoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ltoa(long value, char *str, int radix);$/;"	p	signature:(long value, char *str, int radix)
SDL_main	/usr/include/SDL2/SDL_main.h	/^extern C_LINKAGE int SDL_main(int argc, char *argv[]);$/;"	p	signature:(int argc, char *argv[])
SDL_malloc	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_malloc(size_t size);$/;"	p	signature:(size_t size)
SDL_max	/usr/include/SDL2/SDL_stdinc.h	245;"	d
SDL_memcmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_memcmp(const void *s1, const void *s2, size_t len);$/;"	p	signature:(const void *s1, const void *s2, size_t len)
SDL_memcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memcpy(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
SDL_memcpy4	/usr/include/SDL2/SDL_stdinc.h	/^SDL_FORCE_INLINE void *SDL_memcpy4(void *dst, const void *src, size_t dwords)$/;"	f	signature:(void *dst, const void *src, size_t dwords)
SDL_memmove	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memmove(void *dst, const void *src, size_t len);$/;"	p	signature:(void *dst, const void *src, size_t len)
SDL_memset	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_memset(void *dst, int c, size_t len);$/;"	p	signature:(void *dst, int c, size_t len)
SDL_memset4	/usr/include/SDL2/SDL_stdinc.h	/^SDL_FORCE_INLINE void SDL_memset4(void *dst, Uint32 val, size_t dwords)$/;"	f	signature:(void *dst, Uint32 val, size_t dwords)
SDL_min	/usr/include/SDL2/SDL_stdinc.h	244;"	d
SDL_mutex	/usr/include/SDL2/SDL_mutex.h	/^typedef struct SDL_mutex SDL_mutex;$/;"	t	typeref:struct:SDL_mutex
SDL_mutexP	/usr/include/SDL2/SDL_mutex.h	71;"	d
SDL_mutexV	/usr/include/SDL2/SDL_mutex.h	89;"	d
SDL_pow	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_pow(double x, double y);$/;"	p	signature:(double x, double y)
SDL_qsort	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void SDLCALL SDL_qsort(void *base, size_t nmemb, size_t size, int (*compare) (const void *, const void *));$/;"	p	signature:(void *base, size_t nmemb, size_t size, int (*compare) (const void *, const void *))
SDL_realloc	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC void *SDLCALL SDL_realloc(void *mem, size_t size);$/;"	p	signature:(void *mem, size_t size)
SDL_reinterpret_cast	/usr/include/SDL2/SDL_stdinc.h	94;"	d
SDL_reinterpret_cast	/usr/include/SDL2/SDL_stdinc.h	98;"	d
SDL_scalbn	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_scalbn(double x, int n);$/;"	p	signature:(double x, int n)
SDL_sem	/usr/include/SDL2/SDL_mutex.h	/^typedef struct SDL_semaphore SDL_sem;$/;"	t	typeref:struct:SDL_semaphore
SDL_setenv	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_setenv(const char *name, const char *value, int overwrite);$/;"	p	signature:(const char *name, const char *value, int overwrite)
SDL_sin	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_sin(double x);$/;"	p	signature:(double x)
SDL_sinf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC float SDLCALL SDL_sinf(float x);$/;"	p	signature:(float x)
SDL_snprintf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_snprintf(char *text, size_t maxlen, const char *fmt, ...);$/;"	p	signature:(char *text, size_t maxlen, const char *fmt, ...)
SDL_sqrt	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_sqrt(double x);$/;"	p	signature:(double x)
SDL_sscanf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_sscanf(const char *text, const char *fmt, ...);$/;"	p	signature:(const char *text, const char *fmt, ...)
SDL_stack_alloc	/usr/include/SDL2/SDL_stdinc.h	223;"	d
SDL_stack_alloc	/usr/include/SDL2/SDL_stdinc.h	226;"	d
SDL_stack_free	/usr/include/SDL2/SDL_stdinc.h	224;"	d
SDL_stack_free	/usr/include/SDL2/SDL_stdinc.h	227;"	d
SDL_static_cast	/usr/include/SDL2/SDL_stdinc.h	95;"	d
SDL_static_cast	/usr/include/SDL2/SDL_stdinc.h	99;"	d
SDL_strcasecmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcasecmp(const char *str1, const char *str2);$/;"	p	signature:(const char *str1, const char *str2)
SDL_strchr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strchr(const char *str, int c);$/;"	p	signature:(const char *str, int c)
SDL_strcmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strcmp(const char *str1, const char *str2);$/;"	p	signature:(const char *str1, const char *str2)
SDL_strdup	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strdup(const char *str);$/;"	p	signature:(const char *str)
SDL_strlcat	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcat(char *dst, const char *src, size_t maxlen);$/;"	p	signature:(char *dst, const char *src, size_t maxlen)
SDL_strlcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlcpy(char *dst, const char *src, size_t maxlen);$/;"	p	signature:(char *dst, const char *src, size_t maxlen)
SDL_strlen	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_strlen(const char *str);$/;"	p	signature:(const char *str)
SDL_strlwr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strlwr(char *str);$/;"	p	signature:(char *str)
SDL_strncasecmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncasecmp(const char *str1, const char *str2, size_t len);$/;"	p	signature:(const char *str1, const char *str2, size_t len)
SDL_strncmp	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_strncmp(const char *str1, const char *str2, size_t maxlen);$/;"	p	signature:(const char *str1, const char *str2, size_t maxlen)
SDL_strrchr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strrchr(const char *str, int c);$/;"	p	signature:(const char *str, int c)
SDL_strrev	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strrev(char *str);$/;"	p	signature:(char *str)
SDL_strstr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strstr(const char *haystack, const char *needle);$/;"	p	signature:(const char *haystack, const char *needle)
SDL_strtod	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC double SDLCALL SDL_strtod(const char *str, char **endp);$/;"	p	signature:(const char *str, char **endp)
SDL_strtol	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC long SDLCALL SDL_strtol(const char *str, char **endp, int base);$/;"	p	signature:(const char *str, char **endp, int base)
SDL_strtoll	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC Sint64 SDLCALL SDL_strtoll(const char *str, char **endp, int base);$/;"	p	signature:(const char *str, char **endp, int base)
SDL_strtoul	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC unsigned long SDLCALL SDL_strtoul(const char *str, char **endp, int base);$/;"	p	signature:(const char *str, char **endp, int base)
SDL_strtoull	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC Uint64 SDLCALL SDL_strtoull(const char *str, char **endp, int base);$/;"	p	signature:(const char *str, char **endp, int base)
SDL_strupr	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_strupr(char *str);$/;"	p	signature:(char *str)
SDL_threadID	/usr/include/SDL2/SDL_thread.h	/^typedef unsigned long SDL_threadID;$/;"	t
SDL_tolower	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_tolower(int x);$/;"	p	signature:(int x)
SDL_toupper	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_toupper(int x);$/;"	p	signature:(int x)
SDL_uitoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_uitoa(unsigned int value, char *str, int radix);$/;"	p	signature:(unsigned int value, char *str, int radix)
SDL_ulltoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ulltoa(Uint64 value, char *str, int radix);$/;"	p	signature:(Uint64 value, char *str, int radix)
SDL_ultoa	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC char *SDLCALL SDL_ultoa(unsigned long value, char *str, int radix);$/;"	p	signature:(unsigned long value, char *str, int radix)
SDL_utf8strlcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_utf8strlcpy(char *dst, const char *src, size_t dst_bytes);$/;"	p	signature:(char *dst, const char *src, size_t dst_bytes)
SDL_version	/usr/include/SDL2/SDL_version.h	/^typedef struct SDL_version$/;"	s
SDL_version	/usr/include/SDL2/SDL_version.h	/^} SDL_version;$/;"	t	typeref:struct:SDL_version
SDL_version::major	/usr/include/SDL2/SDL_version.h	/^    Uint8 major;        \/**< major version *\/$/;"	m	struct:SDL_version	access:public
SDL_version::minor	/usr/include/SDL2/SDL_version.h	/^    Uint8 minor;        \/**< minor version *\/$/;"	m	struct:SDL_version	access:public
SDL_version::patch	/usr/include/SDL2/SDL_version.h	/^    Uint8 patch;        \/**< update version *\/$/;"	m	struct:SDL_version	access:public
SDL_vsnprintf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsnprintf(char *text, size_t maxlen, const char *fmt, va_list ap);$/;"	p	signature:(char *text, size_t maxlen, const char *fmt, va_list ap)
SDL_vsscanf	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC int SDLCALL SDL_vsscanf(const char *text, const char *fmt, va_list ap);$/;"	p	signature:(const char *text, const char *fmt, va_list ap)
SDL_wcslcat	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslcat(wchar_t *dst, const wchar_t *src, size_t maxlen);$/;"	p	signature:(wchar_t *dst, const wchar_t *src, size_t maxlen)
SDL_wcslcpy	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslcpy(wchar_t *dst, const wchar_t *src, size_t maxlen);$/;"	p	signature:(wchar_t *dst, const wchar_t *src, size_t maxlen)
SDL_wcslen	/usr/include/SDL2/SDL_stdinc.h	/^extern DECLSPEC size_t SDLCALL SDL_wcslen(const wchar_t *wstr);$/;"	p	signature:(const wchar_t *wstr)
SDL_zero	/usr/include/SDL2/SDL_stdinc.h	254;"	d
SDL_zerop	/usr/include/SDL2/SDL_stdinc.h	255;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config.h	47;"	d
SIZEOF_VOIDP	/usr/include/SDL2/SDL_config.h	49;"	d
STDC_HEADERS	/usr/include/SDL2/SDL_config.h	63;"	d
ShapeModeBinarizeAlpha	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeBinarizeAlpha,$/;"	e	enum:__anon35
ShapeModeColorKey	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeColorKey$/;"	e	enum:__anon35
ShapeModeDefault	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeDefault,$/;"	e	enum:__anon35
ShapeModeReverseBinarizeAlpha	/usr/include/SDL2/SDL_shape.h	/^    ShapeModeReverseBinarizeAlpha,$/;"	e	enum:__anon35
Sint16	/usr/include/SDL2/SDL_stdinc.h	/^typedef int16_t Sint16;$/;"	t
Sint32	/usr/include/SDL2/SDL_stdinc.h	/^typedef int32_t Sint32;$/;"	t
Sint64	/usr/include/SDL2/SDL_stdinc.h	/^typedef int64_t Sint64;$/;"	t
Sint8	/usr/include/SDL2/SDL_stdinc.h	/^typedef int8_t Sint8;$/;"	t
TEST_ABORTED	/usr/include/SDL2/SDL_test_harness.h	51;"	d
TEST_COMPLETED	/usr/include/SDL2/SDL_test_harness.h	53;"	d
TEST_DISABLED	/usr/include/SDL2/SDL_test_harness.h	48;"	d
TEST_ENABLED	/usr/include/SDL2/SDL_test_harness.h	47;"	d
TEST_RESULT_FAILED	/usr/include/SDL2/SDL_test_harness.h	58;"	d
TEST_RESULT_NO_ASSERT	/usr/include/SDL2/SDL_test_harness.h	59;"	d
TEST_RESULT_PASSED	/usr/include/SDL2/SDL_test_harness.h	57;"	d
TEST_RESULT_SETUP_FAILURE	/usr/include/SDL2/SDL_test_harness.h	61;"	d
TEST_RESULT_SKIPPED	/usr/include/SDL2/SDL_test_harness.h	60;"	d
TEST_SKIPPED	/usr/include/SDL2/SDL_test_harness.h	54;"	d
TEST_STARTED	/usr/include/SDL2/SDL_test_harness.h	52;"	d
UIWindow	/usr/include/SDL2/SDL_syswm.h	/^typedef struct _UIWindow UIWindow;$/;"	t	typeref:struct:_UIWindow
Uint16	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint16_t Uint16;$/;"	t
Uint32	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint32_t Uint32;$/;"	t
Uint64	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint64_t Uint64;$/;"	t
Uint8	/usr/include/SDL2/SDL_stdinc.h	/^typedef uint8_t Uint8;$/;"	t
VERBOSE_AUDIO	/usr/include/SDL2/SDL_test_common.h	49;"	d
VERBOSE_EVENT	/usr/include/SDL2/SDL_test_common.h	48;"	d
VERBOSE_MODES	/usr/include/SDL2/SDL_test_common.h	46;"	d
VERBOSE_RENDER	/usr/include/SDL2/SDL_test_common.h	47;"	d
VERBOSE_VIDEO	/usr/include/SDL2/SDL_test_common.h	45;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_opengl.h	115;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_opengl.h	36;"	d
WIN32_LEAN_AND_MEAN	/usr/include/SDL2/SDL_syswm.h	55;"	d
WindowShapeMode	/usr/include/SDL2/SDL_shape.h	/^} WindowShapeMode;$/;"	t	typeref:enum:__anon35
_ReadWriteBarrier	/usr/include/SDL2/SDL_atomic.h	/^void _ReadWriteBarrier(void);$/;"	p	signature:(void)
_SDL_H	/usr/include/SDL2/SDL.h	65;"	d
_SDL_assert_h	/usr/include/SDL2/SDL_assert.h	23;"	d
_SDL_atomic_h_	/usr/include/SDL2/SDL_atomic.h	60;"	d
_SDL_audio_h	/usr/include/SDL2/SDL_audio.h	29;"	d
_SDL_bits_h	/usr/include/SDL2/SDL_bits.h	29;"	d
_SDL_blendmode_h	/usr/include/SDL2/SDL_blendmode.h	29;"	d
_SDL_clipboard_h	/usr/include/SDL2/SDL_clipboard.h	29;"	d
_SDL_config_h	/usr/include/SDL2/SDL_config.h	24;"	d
_SDL_cpuinfo_h	/usr/include/SDL2/SDL_cpuinfo.h	29;"	d
_SDL_endian_h	/usr/include/SDL2/SDL_endian.h	29;"	d
_SDL_error_h	/usr/include/SDL2/SDL_error.h	29;"	d
_SDL_events_h	/usr/include/SDL2/SDL_events.h	29;"	d
_SDL_filesystem_h	/usr/include/SDL2/SDL_filesystem.h	29;"	d
_SDL_gamecontroller_h	/usr/include/SDL2/SDL_gamecontroller.h	29;"	d
_SDL_gesture_h	/usr/include/SDL2/SDL_gesture.h	29;"	d
_SDL_haptic_h	/usr/include/SDL2/SDL_haptic.h	113;"	d
_SDL_hints_h	/usr/include/SDL2/SDL_hints.h	40;"	d
_SDL_joystick_h	/usr/include/SDL2/SDL_joystick.h	40;"	d
_SDL_keyboard_h	/usr/include/SDL2/SDL_keyboard.h	29;"	d
_SDL_keycode_h	/usr/include/SDL2/SDL_keycode.h	29;"	d
_SDL_loadso_h	/usr/include/SDL2/SDL_loadso.h	42;"	d
_SDL_log_h	/usr/include/SDL2/SDL_log.h	38;"	d
_SDL_main_h	/usr/include/SDL2/SDL_main.h	23;"	d
_SDL_messagebox_h	/usr/include/SDL2/SDL_messagebox.h	23;"	d
_SDL_mouse_h	/usr/include/SDL2/SDL_mouse.h	29;"	d
_SDL_mutex_h	/usr/include/SDL2/SDL_mutex.h	23;"	d
_SDL_opengl_h	/usr/include/SDL2/SDL_opengl.h	29;"	d
_SDL_pixels_h	/usr/include/SDL2/SDL_pixels.h	29;"	d
_SDL_platform_h	/usr/include/SDL2/SDL_platform.h	29;"	d
_SDL_power_h	/usr/include/SDL2/SDL_power.h	23;"	d
_SDL_quit_h	/usr/include/SDL2/SDL_quit.h	29;"	d
_SDL_rect_h	/usr/include/SDL2/SDL_rect.h	29;"	d
_SDL_render_h	/usr/include/SDL2/SDL_render.h	49;"	d
_SDL_rwops_h	/usr/include/SDL2/SDL_rwops.h	30;"	d
_SDL_scancode_h	/usr/include/SDL2/SDL_scancode.h	29;"	d
_SDL_shape_h	/usr/include/SDL2/SDL_shape.h	23;"	d
_SDL_stdinc_h	/usr/include/SDL2/SDL_stdinc.h	29;"	d
_SDL_surface_h	/usr/include/SDL2/SDL_surface.h	29;"	d
_SDL_system_h	/usr/include/SDL2/SDL_system.h	29;"	d
_SDL_syswm_h	/usr/include/SDL2/SDL_syswm.h	29;"	d
_SDL_test_assert_h	/usr/include/SDL2/SDL_test_assert.h	37;"	d
_SDL_test_common_h	/usr/include/SDL2/SDL_test_common.h	33;"	d
_SDL_test_compare_h	/usr/include/SDL2/SDL_test_compare.h	37;"	d
_SDL_test_crc32_h	/usr/include/SDL2/SDL_test_crc32.h	37;"	d
_SDL_test_font_h	/usr/include/SDL2/SDL_test_font.h	31;"	d
_SDL_test_fuzzer_h	/usr/include/SDL2/SDL_test_fuzzer.h	37;"	d
_SDL_test_h	/usr/include/SDL2/SDL_test.h	31;"	d
_SDL_test_harness_h	/usr/include/SDL2/SDL_test_harness.h	37;"	d
_SDL_test_images_h	/usr/include/SDL2/SDL_test_images.h	37;"	d
_SDL_test_log_h	/usr/include/SDL2/SDL_test_log.h	37;"	d
_SDL_test_md5_h	/usr/include/SDL2/SDL_test_md5.h	57;"	d
_SDL_test_random_h	/usr/include/SDL2/SDL_test_random.h	41;"	d
_SDL_thread_h	/usr/include/SDL2/SDL_thread.h	23;"	d
_SDL_timer_h	/usr/include/SDL2/SDL_timer.h	23;"	d
_SDL_touch_h	/usr/include/SDL2/SDL_touch.h	29;"	d
_SDL_version_h	/usr/include/SDL2/SDL_version.h	29;"	d
_SDL_video_h	/usr/include/SDL2/SDL_video.h	29;"	d
_SDLname_h_	/usr/include/SDL2/SDL_name.h	3;"	d
__3dNOW__	/usr/include/SDL2/SDL_cpuinfo.h	39;"	d
__AIX__	/usr/include/SDL2/SDL_platform.h	32;"	d
__AIX__	/usr/include/SDL2/SDL_platform.h	33;"	d
__ANDROID__	/usr/include/SDL2/SDL_platform.h	64;"	d
__ANDROID__	/usr/include/SDL2/SDL_platform.h	66;"	d
__BSDI__	/usr/include/SDL2/SDL_platform.h	40;"	d
__BSDI__	/usr/include/SDL2/SDL_platform.h	41;"	d
__DREAMCAST__	/usr/include/SDL2/SDL_platform.h	44;"	d
__DREAMCAST__	/usr/include/SDL2/SDL_platform.h	45;"	d
__FREEBSD__	/usr/include/SDL2/SDL_platform.h	48;"	d
__FREEBSD__	/usr/include/SDL2/SDL_platform.h	49;"	d
__HAIKU__	/usr/include/SDL2/SDL_platform.h	36;"	d
__HAIKU__	/usr/include/SDL2/SDL_platform.h	37;"	d
__HPUX__	/usr/include/SDL2/SDL_platform.h	52;"	d
__HPUX__	/usr/include/SDL2/SDL_platform.h	53;"	d
__IPHONEOS__	/usr/include/SDL2/SDL_platform.h	75;"	d
__IPHONEOS__	/usr/include/SDL2/SDL_platform.h	76;"	d
__IRIX__	/usr/include/SDL2/SDL_platform.h	56;"	d
__IRIX__	/usr/include/SDL2/SDL_platform.h	57;"	d
__LINUX__	/usr/include/SDL2/SDL_platform.h	60;"	d
__LINUX__	/usr/include/SDL2/SDL_platform.h	61;"	d
__LINUX__	/usr/include/SDL2/SDL_platform.h	65;"	d
__MACOSX__	/usr/include/SDL2/SDL_platform.h	77;"	d
__MACOSX__	/usr/include/SDL2/SDL_platform.h	80;"	d
__MACOSX__	/usr/include/SDL2/SDL_platform.h	81;"	d
__MMX__	/usr/include/SDL2/SDL_cpuinfo.h	38;"	d
__NETBSD__	/usr/include/SDL2/SDL_platform.h	89;"	d
__NETBSD__	/usr/include/SDL2/SDL_platform.h	90;"	d
__OPENBSD__	/usr/include/SDL2/SDL_platform.h	93;"	d
__OPENBSD__	/usr/include/SDL2/SDL_platform.h	94;"	d
__OS2__	/usr/include/SDL2/SDL_platform.h	97;"	d
__OS2__	/usr/include/SDL2/SDL_platform.h	98;"	d
__OSF__	/usr/include/SDL2/SDL_platform.h	101;"	d
__OSF__	/usr/include/SDL2/SDL_platform.h	102;"	d
__PSP__	/usr/include/SDL2/SDL_platform.h	125;"	d
__PSP__	/usr/include/SDL2/SDL_platform.h	126;"	d
__QNXNTO__	/usr/include/SDL2/SDL_platform.h	105;"	d
__QNXNTO__	/usr/include/SDL2/SDL_platform.h	106;"	d
__RISCOS__	/usr/include/SDL2/SDL_platform.h	109;"	d
__RISCOS__	/usr/include/SDL2/SDL_platform.h	110;"	d
__SOLARIS__	/usr/include/SDL2/SDL_platform.h	113;"	d
__SOLARIS__	/usr/include/SDL2/SDL_platform.h	114;"	d
__SSE2__	/usr/include/SDL2/SDL_cpuinfo.h	42;"	d
__SSE__	/usr/include/SDL2/SDL_cpuinfo.h	41;"	d
__WIN32__	/usr/include/SDL2/SDL_platform.h	121;"	d
__WIN32__	/usr/include/SDL2/SDL_platform.h	122;"	d
__WINDOWS__	/usr/include/SDL2/SDL_platform.h	117;"	d
__WINDOWS__	/usr/include/SDL2/SDL_platform.h	118;"	d
__X_GL_H	/usr/include/SDL2/SDL_opengl.h	52;"	d
__anon1::crc32_table	/usr/include/SDL2/SDL_test_crc32.h	/^    CrcUint32    crc32_table[256]; \/* CRC table *\/$/;"	m	struct:__anon1	access:public
__anon36::binarizationCutoff	/usr/include/SDL2/SDL_shape.h	/^    Uint8 binarizationCutoff;$/;"	m	union:__anon36	access:public
__anon36::colorKey	/usr/include/SDL2/SDL_shape.h	/^    SDL_Color colorKey;$/;"	m	union:__anon36	access:public
__anon37::value	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	m	struct:__anon37	access:public
__anon39::buf	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  buf[4];       \/* scratch buffer *\/$/;"	m	struct:__anon39	access:public
__anon39::digest	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char digest[16];   \/* actual digest after Md5Final call *\/$/;"	m	struct:__anon39	access:public
__anon39::i	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  i[2];     \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon39	access:public
__anon39::in	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char in[64];   \/* input buffer *\/$/;"	m	struct:__anon39	access:public
__anon42::buttonid	/usr/include/SDL2/SDL_messagebox.h	/^    int buttonid;       \/**< User defined button id (value returned via SDL_ShowMessageBox) *\/$/;"	m	struct:__anon42	access:public
__anon42::flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;       \/**< ::SDL_MessageBoxButtonFlags *\/$/;"	m	struct:__anon42	access:public
__anon42::text	/usr/include/SDL2/SDL_messagebox.h	/^    const char * text;  \/**< The UTF-8 button text *\/$/;"	m	struct:__anon42	access:public
__anon43::b	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anon43	access:public
__anon43::g	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anon43	access:public
__anon43::r	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anon43	access:public
__anon45::colors	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];$/;"	m	struct:__anon45	access:public
__anon46::buttons	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxButtonData *buttons;$/;"	m	struct:__anon46	access:public
__anon46::colorScheme	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxColorScheme *colorScheme;   \/**< ::SDL_MessageBoxColorScheme, can be NULL to use system settings *\/$/;"	m	struct:__anon46	access:public
__anon46::flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;                       \/**< ::SDL_MessageBoxFlags *\/$/;"	m	struct:__anon46	access:public
__anon46::message	/usr/include/SDL2/SDL_messagebox.h	/^    const char *message;                \/**< UTF-8 message text *\/$/;"	m	struct:__anon46	access:public
__anon46::numbuttons	/usr/include/SDL2/SDL_messagebox.h	/^    int numbuttons;$/;"	m	struct:__anon46	access:public
__anon46::title	/usr/include/SDL2/SDL_messagebox.h	/^    const char *title;                  \/**< UTF-8 title *\/$/;"	m	struct:__anon46	access:public
__anon46::window	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_Window *window;                 \/**< Parent window, can be NULL *\/$/;"	m	struct:__anon46	access:public
__anon4::argv	/usr/include/SDL2/SDL_test_common.h	/^    char **argv;$/;"	m	struct:__anon4	access:public
__anon4::audiodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *audiodriver;$/;"	m	struct:__anon4	access:public
__anon4::audiospec	/usr/include/SDL2/SDL_test_common.h	/^    SDL_AudioSpec audiospec;$/;"	m	struct:__anon4	access:public
__anon4::depth	/usr/include/SDL2/SDL_test_common.h	/^    int depth;$/;"	m	struct:__anon4	access:public
__anon4::display	/usr/include/SDL2/SDL_test_common.h	/^    int display;$/;"	m	struct:__anon4	access:public
__anon4::flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 flags;$/;"	m	struct:__anon4	access:public
__anon4::gl_accelerated	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accelerated;$/;"	m	struct:__anon4	access:public
__anon4::gl_accum_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_alpha_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_accum_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_blue_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_accum_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_green_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_accum_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_red_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_alpha_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_blue_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_buffer_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_buffer_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_debug	/usr/include/SDL2/SDL_test_common.h	/^    int gl_debug;$/;"	m	struct:__anon4	access:public
__anon4::gl_depth_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_depth_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_double_buffer	/usr/include/SDL2/SDL_test_common.h	/^    int gl_double_buffer;$/;"	m	struct:__anon4	access:public
__anon4::gl_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_green_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_major_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_major_version;$/;"	m	struct:__anon4	access:public
__anon4::gl_minor_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_minor_version;$/;"	m	struct:__anon4	access:public
__anon4::gl_multisamplebuffers	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplebuffers;$/;"	m	struct:__anon4	access:public
__anon4::gl_multisamplesamples	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplesamples;$/;"	m	struct:__anon4	access:public
__anon4::gl_profile_mask	/usr/include/SDL2/SDL_test_common.h	/^    int gl_profile_mask;$/;"	m	struct:__anon4	access:public
__anon4::gl_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_red_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_retained_backing	/usr/include/SDL2/SDL_test_common.h	/^    int gl_retained_backing;$/;"	m	struct:__anon4	access:public
__anon4::gl_stencil_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stencil_size;$/;"	m	struct:__anon4	access:public
__anon4::gl_stereo	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stereo;$/;"	m	struct:__anon4	access:public
__anon4::logical_h	/usr/include/SDL2/SDL_test_common.h	/^    int logical_h;$/;"	m	struct:__anon4	access:public
__anon4::logical_w	/usr/include/SDL2/SDL_test_common.h	/^    int logical_w;$/;"	m	struct:__anon4	access:public
__anon4::num_windows	/usr/include/SDL2/SDL_test_common.h	/^    int num_windows;$/;"	m	struct:__anon4	access:public
__anon4::refresh_rate	/usr/include/SDL2/SDL_test_common.h	/^    int refresh_rate;$/;"	m	struct:__anon4	access:public
__anon4::render_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 render_flags;$/;"	m	struct:__anon4	access:public
__anon4::renderdriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *renderdriver;$/;"	m	struct:__anon4	access:public
__anon4::renderers	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Renderer **renderers;$/;"	m	struct:__anon4	access:public
__anon4::scale	/usr/include/SDL2/SDL_test_common.h	/^    float scale;$/;"	m	struct:__anon4	access:public
__anon4::skip_renderer	/usr/include/SDL2/SDL_test_common.h	/^    SDL_bool skip_renderer;$/;"	m	struct:__anon4	access:public
__anon4::targets	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Texture **targets;$/;"	m	struct:__anon4	access:public
__anon4::verbose	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 verbose;$/;"	m	struct:__anon4	access:public
__anon4::videodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *videodriver;$/;"	m	struct:__anon4	access:public
__anon4::window_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 window_flags;$/;"	m	struct:__anon4	access:public
__anon4::window_h	/usr/include/SDL2/SDL_test_common.h	/^    int window_h;$/;"	m	struct:__anon4	access:public
__anon4::window_icon	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_icon;$/;"	m	struct:__anon4	access:public
__anon4::window_maxH	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxH;$/;"	m	struct:__anon4	access:public
__anon4::window_maxW	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxW;$/;"	m	struct:__anon4	access:public
__anon4::window_minH	/usr/include/SDL2/SDL_test_common.h	/^    int window_minH;$/;"	m	struct:__anon4	access:public
__anon4::window_minW	/usr/include/SDL2/SDL_test_common.h	/^    int window_minW;$/;"	m	struct:__anon4	access:public
__anon4::window_title	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_title;$/;"	m	struct:__anon4	access:public
__anon4::window_w	/usr/include/SDL2/SDL_test_common.h	/^    int window_w;$/;"	m	struct:__anon4	access:public
__anon4::window_x	/usr/include/SDL2/SDL_test_common.h	/^    int window_x;$/;"	m	struct:__anon4	access:public
__anon4::window_y	/usr/include/SDL2/SDL_test_common.h	/^    int window_y;$/;"	m	struct:__anon4	access:public
__anon4::windows	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Window **windows;$/;"	m	struct:__anon4	access:public
__anon58::a	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int a;$/;"	m	struct:__anon58	access:public
__anon58::ah	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int ah;$/;"	m	struct:__anon58	access:public
__anon58::al	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int al;$/;"	m	struct:__anon58	access:public
__anon58::c	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int c;$/;"	m	struct:__anon58	access:public
__anon58::x	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int x;$/;"	m	struct:__anon58	access:public
__anon5::driverdata	/usr/include/SDL2/SDL_video.h	/^    void *driverdata;           \/**< driver-specific data, initialize to 0 *\/$/;"	m	struct:__anon5	access:public
__anon5::format	/usr/include/SDL2/SDL_video.h	/^    Uint32 format;              \/**< pixel format *\/$/;"	m	struct:__anon5	access:public
__anon5::h	/usr/include/SDL2/SDL_video.h	/^    int h;                      \/**< height *\/$/;"	m	struct:__anon5	access:public
__anon5::refresh_rate	/usr/include/SDL2/SDL_video.h	/^    int refresh_rate;           \/**< refresh rate (or zero for unspecified) *\/$/;"	m	struct:__anon5	access:public
__anon5::w	/usr/include/SDL2/SDL_video.h	/^    int w;                      \/**< width *\/$/;"	m	struct:__anon5	access:public
__anon60::data	/usr/include/SDL2/SDL_joystick.h	/^    Uint8 data[16];$/;"	m	struct:__anon60	access:public
__debugbreak	/usr/include/SDL2/SDL_assert.h	/^    extern void __cdecl __debugbreak(void);$/;"	p	signature:(void)
__gl2_h_	/usr/include/SDL2/SDL_opengles2.h	356;"	d
__gl2ext_h_	/usr/include/SDL2/SDL_opengles2.h	978;"	d
__gl2platform_h_	/usr/include/SDL2/SDL_opengles2.h	325;"	d
__glext_h_	/usr/include/SDL2/SDL_opengl.h	48;"	d
__glext_h_	/usr/include/SDL2/SDL_opengl.h	57;"	d
__glext_h_	/usr/include/SDL2/SDL_opengl.h	79;"	d
__inline__	/usr/include/SDL2/begin_code.h	111;"	d
__inline__	/usr/include/SDL2/begin_code.h	116;"	d
__khrplatform_h_	/usr/include/SDL2/SDL_opengles2.h	41;"	d
_begin_code_h	/usr/include/SDL2/begin_code.h	34;"	d
_begin_code_h	/usr/include/SDL2/close_code.h	29;"	d
a	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 a;$/;"	m	struct:SDL_Color	access:public
a	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int a;$/;"	m	struct:__anon58	access:public
ah	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int ah;$/;"	m	struct:__anon58	access:public
al	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int al;$/;"	m	struct:__anon58	access:public
alloca	/usr/include/SDL2/SDL_stdinc.h	/^char *alloca();$/;"	p	signature:()
alloca	/usr/include/SDL2/SDL_stdinc.h	/^void *alloca(unsigned);$/;"	p	signature:(unsigned)
alloca	/usr/include/SDL2/SDL_stdinc.h	204;"	d
alloca	/usr/include/SDL2/SDL_stdinc.h	207;"	d
always_ignore	/usr/include/SDL2/SDL_assert.h	/^    int always_ignore;$/;"	m	struct:SDL_assert_data	access:public
androidio	/usr/include/SDL2/SDL_rwops.h	/^        } androidio;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon31	access:public
argv	/usr/include/SDL2/SDL_test_common.h	/^    char **argv;$/;"	m	struct:__anon4	access:public
assetFileDescriptorRef	/usr/include/SDL2/SDL_rwops.h	/^            void *assetFileDescriptorRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticConstant	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticCustom	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
attack_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_length;   \/**< Duration of the attack. *\/$/;"	m	struct:SDL_HapticRamp	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticConstant	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticCustom	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
attack_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 attack_level;    \/**< Level at the start of the attack. *\/$/;"	m	struct:SDL_HapticRamp	access:public
audiodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *audiodriver;$/;"	m	struct:__anon4	access:public
audiospec	/usr/include/SDL2/SDL_test_common.h	/^    SDL_AudioSpec audiospec;$/;"	m	struct:__anon4	access:public
autoclose	/usr/include/SDL2/SDL_rwops.h	/^            SDL_bool autoclose;$/;"	m	struct:SDL_RWops::__anon30::__anon32	access:public
axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The controller axis (SDL_GameControllerAxis) *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
axis	/usr/include/SDL2/SDL_events.h	/^    Uint8 axis;         \/**< The joystick axis index *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
axis	/usr/include/SDL2/SDL_gamecontroller.h	/^        int axis;$/;"	m	union:SDL_GameControllerButtonBind::__anon54	access:public
b	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anon43	access:public
b	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 b;$/;"	m	struct:SDL_Color	access:public
ball	/usr/include/SDL2/SDL_events.h	/^    Uint8 ball;         \/**< The joystick trackball index *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
base	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *base;$/;"	m	struct:SDL_RWops::__anon30::__anon33	access:public
binarizationCutoff	/usr/include/SDL2/SDL_shape.h	/^    Uint8 binarizationCutoff;$/;"	m	union:__anon36	access:public
bindType	/usr/include/SDL2/SDL_gamecontroller.h	/^    SDL_GameControllerBindType bindType;$/;"	m	struct:SDL_GameControllerButtonBind	access:public
buf	/usr/include/SDL2/SDL_audio.h	/^    Uint8 *buf;                 \/**< Buffer to hold entire audio data *\/$/;"	m	struct:SDL_AudioCVT	access:public
buf	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  buf[4];       \/* scratch buffer *\/$/;"	m	struct:__anon39	access:public
button	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseButtonEvent button;    \/**< Mouse button event data *\/$/;"	m	union:SDL_Event	access:public
button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The controller button (SDL_GameControllerButton) *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The joystick button index *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
button	/usr/include/SDL2/SDL_events.h	/^    Uint8 button;       \/**< The mouse button index *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
button	/usr/include/SDL2/SDL_gamecontroller.h	/^        int button;$/;"	m	union:SDL_GameControllerButtonBind::__anon54	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCondition	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;          \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
button	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 button;      \/**< Button that triggers the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
buttonid	/usr/include/SDL2/SDL_messagebox.h	/^    int buttonid;       \/**< User defined button id (value returned via SDL_ShowMessageBox) *\/$/;"	m	struct:__anon42	access:public
buttons	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxButtonData *buttons;$/;"	m	struct:__anon46	access:public
bytes_per_pixel	/usr/include/SDL2/SDL_test_images.h	/^  unsigned int bytes_per_pixel; \/* 3:RGB, 4:RGBA *\/$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
c	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int c;$/;"	m	struct:__anon58	access:public
callback	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioCallback callback;$/;"	m	struct:SDL_AudioSpec	access:public
caxis	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerAxisEvent caxis;      \/**< Game Controller axis event data *\/$/;"	m	union:SDL_Event	access:public
cbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerButtonEvent cbutton;  \/**< Game Controller button event data *\/$/;"	m	union:SDL_Event	access:public
cdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_ControllerDeviceEvent cdevice;  \/**< Game Controller device event data *\/$/;"	m	union:SDL_Event	access:public
center	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 center[3];       \/**< Position of the dead zone. *\/$/;"	m	struct:SDL_HapticCondition	access:public
channels	/usr/include/SDL2/SDL_audio.h	/^    Uint8 channels;             \/**< Number of channels: 1 mono, 2 stereo *\/$/;"	m	struct:SDL_AudioSpec	access:public
channels	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 channels;         \/**< Axes to use, minimum of one. *\/$/;"	m	struct:SDL_HapticCustom	access:public
clicks	/usr/include/SDL2/SDL_events.h	/^    Uint8 clicks;       \/**< 1 for single-click, 2 for double-click, etc. *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
clip_rect	/usr/include/SDL2/SDL_surface.h	/^    SDL_Rect clip_rect;         \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
close	/usr/include/SDL2/SDL_rwops.h	/^    int (SDLCALL * close) (struct SDL_RWops * context);$/;"	m	struct:SDL_RWops	access:public
cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon25	access:public
cocoa	/usr/include/SDL2/SDL_syswm.h	/^        } cocoa;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon19	access:public
code	/usr/include/SDL2/SDL_events.h	/^    Sint32 code;        \/**< User defined event code *\/$/;"	m	struct:SDL_UserEvent	access:public
colorKey	/usr/include/SDL2/SDL_shape.h	/^    SDL_Color colorKey;$/;"	m	union:__anon36	access:public
colorScheme	/usr/include/SDL2/SDL_messagebox.h	/^    const SDL_MessageBoxColorScheme *colorScheme;   \/**< ::SDL_MessageBoxColorScheme, can be NULL to use system settings *\/$/;"	m	struct:__anon46	access:public
colors	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_MessageBoxColor colors[SDL_MESSAGEBOX_COLOR_MAX];$/;"	m	struct:__anon45	access:public
colors	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Color *colors;$/;"	m	struct:SDL_Palette	access:public
common	/usr/include/SDL2/SDL_events.h	/^    SDL_CommonEvent common;         \/**< Common event data *\/$/;"	m	union:SDL_Event	access:public
condition	/usr/include/SDL2/SDL_assert.h	/^    const char *condition;$/;"	m	struct:SDL_assert_data	access:public
condition	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCondition condition;  \/**< Condition effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
connection	/usr/include/SDL2/SDL_syswm.h	/^            MirConnection *connection;  \/**< Mir display server connection *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon28	access:public
constant	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticConstant constant;    \/**< Constant effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
crc32_table	/usr/include/SDL2/SDL_test_crc32.h	/^    CrcUint32    crc32_table[256]; \/* CRC table *\/$/;"	m	struct:__anon1	access:public
custom	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticCustom custom;        \/**< Custom effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
dDist	/usr/include/SDL2/SDL_events.h	/^    float dDist;$/;"	m	struct:SDL_MultiGestureEvent	access:public
dTheta	/usr/include/SDL2/SDL_events.h	/^    float dTheta;$/;"	m	struct:SDL_MultiGestureEvent	access:public
data	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 *data;           \/**< Should contain channels*samples items. *\/$/;"	m	struct:SDL_HapticCustom	access:public
data	/usr/include/SDL2/SDL_joystick.h	/^    Uint8 data[16];$/;"	m	struct:__anon60	access:public
data1	/usr/include/SDL2/SDL_events.h	/^    Sint32 data1;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	access:public
data1	/usr/include/SDL2/SDL_events.h	/^    void *data1;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	access:public
data1	/usr/include/SDL2/SDL_rwops.h	/^            void *data1;$/;"	m	struct:SDL_RWops::__anon30::__anon34	access:public
data2	/usr/include/SDL2/SDL_events.h	/^    Sint32 data2;       \/**< event dependent data *\/$/;"	m	struct:SDL_WindowEvent	access:public
data2	/usr/include/SDL2/SDL_events.h	/^    void *data2;        \/**< User defined data pointer *\/$/;"	m	struct:SDL_UserEvent	access:public
data2	/usr/include/SDL2/SDL_rwops.h	/^            void *data2;$/;"	m	struct:SDL_RWops::__anon30::__anon34	access:public
deadband	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 deadband[3];     \/**< Size of the dead zone. *\/$/;"	m	struct:SDL_HapticCondition	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCondition	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;           \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
delay	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 delay;       \/**< Delay before starting the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
depth	/usr/include/SDL2/SDL_test_common.h	/^    int depth;$/;"	m	struct:__anon4	access:public
description	/usr/include/SDL2/SDL_test_harness.h	/^    char *description;$/;"	m	struct:SDLTest_TestCaseReference	access:public
dfb	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFB *dfb;             \/**< The directfb main interface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon24	access:public
dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon24	access:public
dfb	/usr/include/SDL2/SDL_syswm.h	/^        } dfb;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon18	access:public
dgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_DollarGestureEvent dgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	access:public
digest	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char digest[16];   \/* actual digest after Md5Final call *\/$/;"	m	struct:__anon39	access:public
dir	/usr/include/SDL2/SDL_haptic.h	/^    Sint32 dir[3];      \/**< The encoded direction. *\/$/;"	m	struct:SDL_HapticDirection	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect - Not used ATM. *\/$/;"	m	struct:SDL_HapticCondition	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
direction	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticDirection direction;  \/**< Direction of the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
display	/usr/include/SDL2/SDL_syswm.h	/^            Display *display;           \/**< The X11 display *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon23	access:public
display	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_display *display;            \/**< Wayland display *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon27	typeref:struct:SDL_SysWMinfo::__anon21::__anon27::wl_display	access:public
display	/usr/include/SDL2/SDL_test_common.h	/^    int display;$/;"	m	struct:__anon4	access:public
driverdata	/usr/include/SDL2/SDL_video.h	/^    void *driverdata;           \/**< driver-specific data, initialize to 0 *\/$/;"	m	struct:__anon5	access:public
drop	/usr/include/SDL2/SDL_events.h	/^    SDL_DropEvent drop;             \/**< Drag and drop event data *\/$/;"	m	union:SDL_Event	access:public
dst_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat dst_format; \/**< Target audio format *\/$/;"	m	struct:SDL_AudioCVT	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^        int dummy;$/;"	m	union:SDL_SysWMinfo::__anon21	access:public
dummy	/usr/include/SDL2/SDL_syswm.h	/^        int dummy;$/;"	m	union:SDL_SysWMmsg::__anon15	access:public
dx	/usr/include/SDL2/SDL_events.h	/^    float dx;           \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
dy	/usr/include/SDL2/SDL_events.h	/^    float dy;           \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
edit	/usr/include/SDL2/SDL_events.h	/^    SDL_TextEditingEvent edit;      \/**< Text editing event data *\/$/;"	m	union:SDL_Event	access:public
enabled	/usr/include/SDL2/SDL_test_harness.h	/^    int enabled;$/;"	m	struct:SDLTest_TestCaseReference	access:public
end	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 end;             \/**< Ending strength level. *\/$/;"	m	struct:SDL_HapticRamp	access:public
error	/usr/include/SDL2/SDL_events.h	/^    float error;$/;"	m	struct:SDL_DollarGestureEvent	access:public
event	/usr/include/SDL2/SDL_events.h	/^    Uint8 event;        \/**< ::SDL_WindowEventID *\/$/;"	m	struct:SDL_WindowEvent	access:public
event	/usr/include/SDL2/SDL_syswm.h	/^            DFBEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon18	access:public
event	/usr/include/SDL2/SDL_syswm.h	/^            XEvent event;$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon17	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticConstant	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticCustom	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length;     \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticRamp	access:public
fade_length	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_length; \/**< Duration of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticConstant	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticCustom	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;      \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticRamp	access:public
fade_level	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 fade_level;  \/**< Level at the end of the fade. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
fd	/usr/include/SDL2/SDL_rwops.h	/^            int fd;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
file	/usr/include/SDL2/SDL_events.h	/^    char *file;         \/**< The file name, which should be freed with SDL_free() *\/$/;"	m	struct:SDL_DropEvent	access:public
fileNameRef	/usr/include/SDL2/SDL_rwops.h	/^            void *fileNameRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
filename	/usr/include/SDL2/SDL_assert.h	/^    const char *filename;$/;"	m	struct:SDL_assert_data	access:public
filter_index	/usr/include/SDL2/SDL_audio.h	/^    int filter_index;           \/**< Current audio conversion function *\/$/;"	m	struct:SDL_AudioCVT	access:public
filters	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFilter filters[10];        \/**< Filter list *\/$/;"	m	struct:SDL_AudioCVT	access:public
fingerId	/usr/include/SDL2/SDL_events.h	/^    SDL_FingerID fingerId;$/;"	m	struct:SDL_TouchFingerEvent	access:public
flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;                       \/**< ::SDL_MessageBoxFlags *\/$/;"	m	struct:__anon46	access:public
flags	/usr/include/SDL2/SDL_messagebox.h	/^    Uint32 flags;       \/**< ::SDL_MessageBoxButtonFlags *\/$/;"	m	struct:__anon42	access:public
flags	/usr/include/SDL2/SDL_render.h	/^    Uint32 flags;               \/**< Supported ::SDL_RendererFlags *\/$/;"	m	struct:SDL_RendererInfo	access:public
flags	/usr/include/SDL2/SDL_surface.h	/^    Uint32 flags;               \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 flags;$/;"	m	struct:__anon4	access:public
format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat format;     \/**< Audio data format *\/$/;"	m	struct:SDL_AudioSpec	access:public
format	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 format;$/;"	m	struct:SDL_PixelFormat	access:public
format	/usr/include/SDL2/SDL_surface.h	/^    SDL_PixelFormat *format;    \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
format	/usr/include/SDL2/SDL_video.h	/^    Uint32 format;              \/**< pixel format *\/$/;"	m	struct:__anon5	access:public
fp	/usr/include/SDL2/SDL_rwops.h	/^            FILE *fp;$/;"	m	struct:SDL_RWops::__anon30::__anon32	access:public
freq	/usr/include/SDL2/SDL_audio.h	/^    int freq;                   \/**< DSP frequency -- samples per second *\/$/;"	m	struct:SDL_AudioSpec	access:public
function	/usr/include/SDL2/SDL_assert.h	/^    const char *function;$/;"	m	struct:SDL_assert_data	access:public
g	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anon43	access:public
g	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 g;$/;"	m	struct:SDL_Color	access:public
gestureId	/usr/include/SDL2/SDL_events.h	/^    SDL_GestureID gestureId;$/;"	m	struct:SDL_DollarGestureEvent	access:public
glActiveProgramEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glActiveProgramEXT (GLuint program);$/;"	p	signature:(GLuint program)
glActiveShaderProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glActiveShaderProgram (GLuint pipeline, GLuint program);$/;"	p	signature:(GLuint pipeline, GLuint program)
glActiveShaderProgramEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glActiveShaderProgramEXT (GLuint pipeline, GLuint program);$/;"	p	signature:(GLuint pipeline, GLuint program)
glActiveStencilFaceEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glActiveStencilFaceEXT (GLenum face);$/;"	p	signature:(GLenum face)
glActiveTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveTexture	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveTextureARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glActiveTextureARB (GLenum texture);$/;"	p	signature:(GLenum texture)
glActiveVaryingNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glActiveVaryingNV (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glAlphaFragmentOp1ATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glAlphaFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
glAlphaFragmentOp2ATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glAlphaFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
glAlphaFragmentOp3ATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glAlphaFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
glAlphaFuncQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glAlphaFuncQCOM (GLenum func, GLclampf ref);$/;"	p	signature:(GLenum func, GLclampf ref)
glApplyTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glApplyTextureEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glAreProgramsResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glAreProgramsResidentNV (GLsizei n, const GLuint *programs, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *programs, GLboolean *residences)
glAreTexturesResidentEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glAreTexturesResidentEXT (GLsizei n, const GLuint *textures, GLboolean *residences);$/;"	p	signature:(GLsizei n, const GLuint *textures, GLboolean *residences)
glArrayElementEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glArrayElementEXT (GLint i);$/;"	p	signature:(GLint i)
glArrayObjectATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glArrayObjectATI (GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
glAsyncMarkerSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glAsyncMarkerSGIX (GLuint marker);$/;"	p	signature:(GLuint marker)
glAttachObjectARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glAttachObjectARB (GLhandleARB containerObj, GLhandleARB obj);$/;"	p	signature:(GLhandleARB containerObj, GLhandleARB obj)
glAttachShader	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glAttachShader	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glAttachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glBeginConditionalRender	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginConditionalRender (GLuint id, GLenum mode);$/;"	p	signature:(GLuint id, GLenum mode)
glBeginConditionalRenderNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginConditionalRenderNV (GLuint id, GLenum mode);$/;"	p	signature:(GLuint id, GLenum mode)
glBeginFragmentShaderATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginFragmentShaderATI (void);$/;"	p	signature:(void)
glBeginOcclusionQueryNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginOcclusionQueryNV (GLuint id);$/;"	p	signature:(GLuint id)
glBeginPerfMonitorAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glBeginPerfMonitorAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glBeginPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glBeginQuery	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginQuery (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginQueryARB (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glBeginQueryEXT (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBeginQueryIndexed	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginQueryIndexed (GLenum target, GLuint index, GLuint id);$/;"	p	signature:(GLenum target, GLuint index, GLuint id)
glBeginTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginTransformFeedback (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginTransformFeedbackEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginTransformFeedbackEXT (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginTransformFeedbackNV (GLenum primitiveMode);$/;"	p	signature:(GLenum primitiveMode)
glBeginVertexShaderEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginVertexShaderEXT (void);$/;"	p	signature:(void)
glBeginVideoCaptureNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBeginVideoCaptureNV (GLuint video_capture_slot);$/;"	p	signature:(GLuint video_capture_slot)
glBindAttribLocation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, const GLchar *name)
glBindAttribLocation	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBindAttribLocation (GLuint program, GLuint index, const GLchar* name);$/;"	p	signature:(GLuint program, GLuint index, const GLchar* name)
glBindAttribLocationARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindAttribLocationARB (GLhandleARB programObj, GLuint index, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, const GLcharARB *name)
glBindBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBindBuffer (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBufferARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferARB (GLenum target, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint buffer)
glBindBufferBase	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferBase (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferBaseEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferBaseEXT (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferBaseNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferBaseNV (GLenum target, GLuint index, GLuint buffer);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer)
glBindBufferOffsetEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferOffsetEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
glBindBufferOffsetNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferOffsetNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
glBindBufferRange	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferRange (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBufferRangeEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferRangeEXT (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindBufferRangeNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindBufferRangeNV (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
glBindFragDataLocation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindFragDataLocation (GLuint program, GLuint color, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint color, const GLchar *name)
glBindFragDataLocationEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindFragDataLocationEXT (GLuint program, GLuint color, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint color, const GLchar *name)
glBindFragDataLocationIndexed	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindFragDataLocationIndexed (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	p	signature:(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name)
glBindFragmentShaderATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindFragmentShaderATI (GLuint id);$/;"	p	signature:(GLuint id)
glBindFramebuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindFramebuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBindFramebuffer (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindFramebufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindFramebufferEXT (GLenum target, GLuint framebuffer);$/;"	p	signature:(GLenum target, GLuint framebuffer)
glBindImageTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindImageTextureEXT (GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format);$/;"	p	signature:(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format)
glBindLightParameterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindLightParameterEXT (GLenum light, GLenum value);$/;"	p	signature:(GLenum light, GLenum value)
glBindMaterialParameterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindMaterialParameterEXT (GLenum face, GLenum value);$/;"	p	signature:(GLenum face, GLenum value)
glBindMultiTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindMultiTextureEXT (GLenum texunit, GLenum target, GLuint texture);$/;"	p	signature:(GLenum texunit, GLenum target, GLuint texture)
glBindParameterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindParameterEXT (GLenum value);$/;"	p	signature:(GLenum value)
glBindProgramARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindProgramARB (GLenum target, GLuint program);$/;"	p	signature:(GLenum target, GLuint program)
glBindProgramNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindProgramNV (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindProgramPipeline	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glBindProgramPipelineEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glBindProgramPipelineEXT (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glBindRenderbuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindRenderbuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBindRenderbuffer (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindRenderbufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindRenderbufferEXT (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glBindSampler	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindSampler (GLuint unit, GLuint sampler);$/;"	p	signature:(GLuint unit, GLuint sampler)
glBindTexGenParameterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindTexGenParameterEXT (GLenum unit, GLenum coord, GLenum value);$/;"	p	signature:(GLenum unit, GLenum coord, GLenum value)
glBindTexture	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBindTexture (GLenum target, GLuint texture);$/;"	p	signature:(GLenum target, GLuint texture)
glBindTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindTextureEXT (GLenum target, GLuint texture);$/;"	p	signature:(GLenum target, GLuint texture)
glBindTextureUnitParameterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glBindTextureUnitParameterEXT (GLenum unit, GLenum value);$/;"	p	signature:(GLenum unit, GLenum value)
glBindTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindTransformFeedback (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindTransformFeedbackNV (GLenum target, GLuint id);$/;"	p	signature:(GLenum target, GLuint id)
glBindVertexArray	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindVertexArray (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexArrayAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindVertexArrayAPPLE (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexArrayOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glBindVertexArrayOES (GLuint array);$/;"	p	signature:(GLuint array)
glBindVertexShaderEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindVertexShaderEXT (GLuint id);$/;"	p	signature:(GLuint id)
glBindVideoCaptureStreamBufferNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamBufferNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptrARB offset)
glBindVideoCaptureStreamTextureNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBindVideoCaptureStreamTextureNV (GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture)
glBinormal3bEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3bEXT (GLbyte bx, GLbyte by, GLbyte bz);$/;"	p	signature:(GLbyte bx, GLbyte by, GLbyte bz)
glBinormal3bvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glBinormal3dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3dEXT (GLdouble bx, GLdouble by, GLdouble bz);$/;"	p	signature:(GLdouble bx, GLdouble by, GLdouble bz)
glBinormal3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glBinormal3fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3fEXT (GLfloat bx, GLfloat by, GLfloat bz);$/;"	p	signature:(GLfloat bx, GLfloat by, GLfloat bz)
glBinormal3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glBinormal3iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3iEXT (GLint bx, GLint by, GLint bz);$/;"	p	signature:(GLint bx, GLint by, GLint bz)
glBinormal3ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glBinormal3sEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3sEXT (GLshort bx, GLshort by, GLshort bz);$/;"	p	signature:(GLshort bx, GLshort by, GLshort bz)
glBinormal3svEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormal3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glBinormalPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBinormalPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glBlendColor	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	p	signature:(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
glBlendColor	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBlendColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	p	signature:(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
glBlendColorEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendColorEXT (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	p	signature:(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
glBlendEquation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquation (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquation	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBlendEquation ( GLenum mode );$/;"	p	signature:( GLenum mode )
glBlendEquationEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glBlendEquationIndexedAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationIndexedAMD (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendEquationSeparate	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparate	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBlendEquationSeparate (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparateEXT (GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateIndexedAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparateIndexedAMD (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparatei	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparatei (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationSeparateiARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationSeparateiARB (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	p	signature:(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
glBlendEquationi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationi (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendEquationiARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendEquationiARB (GLuint buf, GLenum mode);$/;"	p	signature:(GLuint buf, GLenum mode)
glBlendFunc	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBlendFunc (GLenum sfactor, GLenum dfactor);$/;"	p	signature:(GLenum sfactor, GLenum dfactor)
glBlendFuncIndexedAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncIndexedAMD (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendFuncSeparate	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparate (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparate	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBlendFuncSeparate (GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparateEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparateEXT (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateINGR	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparateINGR (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	p	signature:(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
glBlendFuncSeparateIndexedAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparateIndexedAMD (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparatei	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparatei (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFuncSeparateiARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFuncSeparateiARB (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	p	signature:(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
glBlendFunci	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFunci (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlendFunciARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlendFunciARB (GLuint buf, GLenum src, GLenum dst);$/;"	p	signature:(GLuint buf, GLenum src, GLenum dst)
glBlitFramebuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlitFramebuffer (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBlitFramebufferANGLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glBlitFramebufferANGLE (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBlitFramebufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBlitFramebufferEXT (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	p	signature:(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
glBufferAddressRangeNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBufferAddressRangeNV (GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length);$/;"	p	signature:(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length)
glBufferData	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBufferData (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
glBufferData	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBufferData (GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage)
glBufferDataARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBufferDataARB (GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage)
glBufferParameteriAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBufferParameteriAPPLE (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glBufferSubData	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
glBufferSubData	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data)
glBufferSubDataARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data);$/;"	p	signature:(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data)
glCheckFramebufferStatus	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p	signature:(GLenum target)
glCheckFramebufferStatus	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLenum       GL_APIENTRY glCheckFramebufferStatus (GLenum target);$/;"	p	signature:(GLenum target)
glCheckFramebufferStatusEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glCheckFramebufferStatusEXT (GLenum target);$/;"	p	signature:(GLenum target)
glCheckNamedFramebufferStatusEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glCheckNamedFramebufferStatusEXT (GLuint framebuffer, GLenum target);$/;"	p	signature:(GLuint framebuffer, GLenum target)
glClampColor	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClampColor (GLenum target, GLenum clamp);$/;"	p	signature:(GLenum target, GLenum clamp)
glClampColorARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClampColorARB (GLenum target, GLenum clamp);$/;"	p	signature:(GLenum target, GLenum clamp)
glClear	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glClear (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glClearBufferfi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearBufferfi (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
glClearBufferfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearBufferfv (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLfloat *value)
glClearBufferiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearBufferiv (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLint *value)
glClearBufferuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearBufferuiv (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	p	signature:(GLenum buffer, GLint drawbuffer, const GLuint *value)
glClearColor	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glClearColor (GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);$/;"	p	signature:(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
glClearColorIiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearColorIiEXT (GLint red, GLint green, GLint blue, GLint alpha);$/;"	p	signature:(GLint red, GLint green, GLint blue, GLint alpha)
glClearColorIuiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearColorIuiEXT (GLuint red, GLuint green, GLuint blue, GLuint alpha);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue, GLuint alpha)
glClearDepthdNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearDepthdNV (GLdouble depth);$/;"	p	signature:(GLdouble depth)
glClearDepthf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClearDepthf (GLclampf d);$/;"	p	signature:(GLclampf d)
glClearDepthf	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glClearDepthf (GLclampf depth);$/;"	p	signature:(GLclampf depth)
glClearStencil	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glClearStencil (GLint s);$/;"	p	signature:(GLint s)
glClientActiveTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClientActiveTexture (GLenum texture);$/;"	p	signature:(GLenum texture)
glClientActiveTextureARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClientActiveTextureARB (GLenum texture);$/;"	p	signature:(GLenum texture)
glClientActiveVertexStreamATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClientActiveVertexStreamATI (GLenum stream);$/;"	p	signature:(GLenum stream)
glClientAttribDefaultEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glClientAttribDefaultEXT (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glClientWaitSync	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glClientWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glClientWaitSyncAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLenum GL_APIENTRY glClientWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glColor3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glColor3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor3fVertex3fvSUN (const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *c, const GLfloat *v)
glColor3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
glColor3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fSUN (GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4fNormal3fVertex3fvSUN (const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *c, const GLfloat *n, const GLfloat *v)
glColor4hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha)
glColor4hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glColor4ubVertex2fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex2fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y);$/;"	p	signature:(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y)
glColor4ubVertex2fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex2fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLubyte *c, const GLfloat *v)
glColor4ubVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex3fSUN (GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glColor4ubVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColor4ubVertex3fvSUN (const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLubyte *c, const GLfloat *v)
glColorFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glColorFragmentOp1ATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorFragmentOp1ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
glColorFragmentOp2ATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorFragmentOp2ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
glColorFragmentOp3ATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorFragmentOp3ATI (GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod);$/;"	p	signature:(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
glColorMask	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glColorMask (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glColorMaskIndexedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorMaskIndexedEXT (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p	signature:(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
glColorMaski	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorMaski (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	p	signature:(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
glColorP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorP3ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glColorP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorP3uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glColorP4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorP4ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glColorP4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorP4uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glColorPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glColorPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glColorPointervINTEL	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLint size, GLenum type, const GLvoid* *pointer)
glColorSubTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorSubTable (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	p	signature:(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
glColorSubTableEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorSubTableEXT (GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data);$/;"	p	signature:(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
glColorTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTable (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
glColorTableEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableEXT (GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	p	signature:(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
glColorTableParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glColorTableParameterfvSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameterfvSGI (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glColorTableParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glColorTableParameterivSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableParameterivSGI (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glColorTableSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glColorTableSGI (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
glCombinerInputNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerInputNV (GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
glCombinerOutputNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerOutputNV (GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)
glCombinerParameterfNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameterfNV (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glCombinerParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameterfvNV (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glCombinerParameteriNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glCombinerParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerParameterivNV (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glCombinerStageParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCombinerStageParameterfvNV (GLenum stage, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum pname, const GLfloat *params)
glCompileShader	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompileShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glCompileShader	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glCompileShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glCompileShaderARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompileShaderARB (GLhandleARB shaderObj);$/;"	p	signature:(GLhandleARB shaderObj)
glCompileShaderIncludeARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompileShaderIncludeARB (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar* *path, const GLint *length)
glCompressedMultiTexImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedMultiTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedTexImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage1D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage1DARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage1DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glCompressedTexImage2D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data)
glCompressedTexImage2DARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage2DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage3D (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage3DARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexImage3DARB (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
glCompressedTexImage3DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glCompressedTexImage3DOES (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data)
glCompressedTexSubImage1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage1D (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage1DARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage1DARB (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glCompressedTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data)
glCompressedTexSubImage2DARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage2DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage3DARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTexSubImage3DARB (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
glCompressedTexSubImage3DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glCompressedTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data)
glCompressedTextureImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits)
glCompressedTextureSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCompressedTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits)
glConvolutionFilter1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter1D (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
glConvolutionFilter1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
glConvolutionFilter2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
glConvolutionFilter2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
glConvolutionParameterf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterf (GLenum target, GLenum pname, GLfloat params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat params)
glConvolutionParameterfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterfEXT (GLenum target, GLenum pname, GLfloat params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat params)
glConvolutionParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterfv (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glConvolutionParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glConvolutionParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameteri (GLenum target, GLenum pname, GLint params);$/;"	p	signature:(GLenum target, GLenum pname, GLint params)
glConvolutionParameteriEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameteriEXT (GLenum target, GLenum pname, GLint params);$/;"	p	signature:(GLenum target, GLenum pname, GLint params)
glConvolutionParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameteriv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glConvolutionParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glConvolutionParameterivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glCopyBufferSubData	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyBufferSubData (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glCopyColorSubTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorSubTable (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
glCopyColorSubTableEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorSubTableEXT (GLenum target, GLsizei start, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
glCopyColorTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorTable (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyColorTableSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyColorTableSGI (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter1DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
glCopyConvolutionFilter2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2D (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyConvolutionFilter2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyConvolutionFilter2DEXT (GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyImageSubDataNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyImageSubDataNV (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)
glCopyMultiTexImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyMultiTexImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyMultiTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyMultiTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyMultiTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexImage1DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTexImage2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glCopyTexImage2D (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTexImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexImage2DEXT (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTexSubImage2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glCopyTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTexSubImage3DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glCopyTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
glCopyTextureImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
glCopyTextureLevelsAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glCopyTextureLevelsAPPLE (GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount);$/;"	p	signature:(GLuint destinationTexture, GLuint sourceTexture, GLint sourceBaseLevel, GLsizei sourceLevelCount)
glCopyTextureSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
glCopyTextureSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCopyTextureSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCopyTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
glCoverageMaskNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glCoverageMaskNV (GLboolean mask);$/;"	p	signature:(GLboolean mask)
glCoverageOperationNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glCoverageOperationNV (GLenum operation);$/;"	p	signature:(GLenum operation)
glCreateProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glCreateProgram (void);$/;"	p	signature:(void)
glCreateProgram	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLuint       GL_APIENTRY glCreateProgram (void);$/;"	p	signature:(void)
glCreateProgramObjectARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLhandleARB APIENTRY glCreateProgramObjectARB (void);$/;"	p	signature:(void)
glCreateShader	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glCreateShader (GLenum type);$/;"	p	signature:(GLenum type)
glCreateShader	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLuint       GL_APIENTRY glCreateShader (GLenum type);$/;"	p	signature:(GLenum type)
glCreateShaderObjectARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLhandleARB APIENTRY glCreateShaderObjectARB (GLenum shaderType);$/;"	p	signature:(GLenum shaderType)
glCreateShaderProgramEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramEXT (GLenum type, const GLchar *string);$/;"	p	signature:(GLenum type, const GLchar *string)
glCreateShaderProgramv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glCreateShaderProgramv (GLenum type, GLsizei count, const GLchar* *strings);$/;"	p	signature:(GLenum type, GLsizei count, const GLchar* *strings)
glCreateShaderProgramvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLuint GL_APIENTRY glCreateShaderProgramvEXT (GLenum type, GLsizei count, const GLchar **strings);$/;"	p	signature:(GLenum type, GLsizei count, const GLchar **strings)
glCreateSyncFromCLeventARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLsync APIENTRY glCreateSyncFromCLeventARB (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	p	signature:(struct _cl_context * context, struct _cl_event * event, GLbitfield flags)
glCullFace	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glCullFace (GLenum mode);$/;"	p	signature:(GLenum mode)
glCullParameterdvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCullParameterdvEXT (GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum pname, GLdouble *params)
glCullParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCullParameterfvEXT (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glCurrentPaletteMatrixARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glCurrentPaletteMatrixARB (GLint index);$/;"	p	signature:(GLint index)
glDebugMessageCallback	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDebugMessageCallback (GLDEBUGPROC callback, const void *userParam);$/;"	p	signature:(GLDEBUGPROC callback, const void *userParam)
glDebugMessageCallbackAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDebugMessageCallbackAMD (GLDEBUGPROCAMD callback, GLvoid *userParam);$/;"	p	signature:(GLDEBUGPROCAMD callback, GLvoid *userParam)
glDebugMessageCallbackARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDebugMessageCallbackARB (GLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	p	signature:(GLDEBUGPROCARB callback, const GLvoid *userParam)
glDebugMessageControl	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDebugMessageControl (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageControlARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDebugMessageControlARB (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageEnableAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDebugMessageEnableAMD (GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	p	signature:(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
glDebugMessageInsert	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDebugMessageInsert (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
glDebugMessageInsertAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDebugMessageInsertAMD (GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf)
glDebugMessageInsertARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDebugMessageInsertARB (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	p	signature:(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
glDeformSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeformSGIX (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glDeformationMap3dSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeformationMap3dSGIX (GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points);$/;"	p	signature:(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points)
glDeformationMap3fSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeformationMap3fSGIX (GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points)
glDeleteAsyncMarkersSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteAsyncMarkersSGIX (GLuint marker, GLsizei range);$/;"	p	signature:(GLuint marker, GLsizei range)
glDeleteBuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteBuffers (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteBuffers	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDeleteBuffers (GLsizei n, const GLuint* buffers);$/;"	p	signature:(GLsizei n, const GLuint* buffers)
glDeleteBuffersARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteBuffersARB (GLsizei n, const GLuint *buffers);$/;"	p	signature:(GLsizei n, const GLuint *buffers)
glDeleteFencesAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFencesAPPLE (GLsizei n, const GLuint *fences);$/;"	p	signature:(GLsizei n, const GLuint *fences)
glDeleteFencesNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFencesNV (GLsizei n, const GLuint *fences);$/;"	p	signature:(GLsizei n, const GLuint *fences)
glDeleteFencesNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDeleteFencesNV (GLsizei, const GLuint *);$/;"	p	signature:(GLsizei, const GLuint *)
glDeleteFragmentShaderATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFragmentShaderATI (GLuint id);$/;"	p	signature:(GLuint id)
glDeleteFramebuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint *framebuffers);$/;"	p	signature:(GLsizei n, const GLuint *framebuffers)
glDeleteFramebuffers	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDeleteFramebuffers (GLsizei n, const GLuint* framebuffers);$/;"	p	signature:(GLsizei n, const GLuint* framebuffers)
glDeleteFramebuffersEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteFramebuffersEXT (GLsizei n, const GLuint *framebuffers);$/;"	p	signature:(GLsizei n, const GLuint *framebuffers)
glDeleteNamedStringARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	signature:(GLint namelen, const GLchar *name)
glDeleteNamesAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteNamesAMD (GLenum identifier, GLuint num, const GLuint *names);$/;"	p	signature:(GLenum identifier, GLuint num, const GLuint *names)
glDeleteObjectARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteObjectARB (GLhandleARB obj);$/;"	p	signature:(GLhandleARB obj)
glDeleteOcclusionQueriesNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteOcclusionQueriesNV (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeletePerfMonitorsAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glDeletePerfMonitorsAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDeletePerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glDeleteProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgram (GLuint program);$/;"	p	signature:(GLuint program)
glDeleteProgram	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDeleteProgram (GLuint program);$/;"	p	signature:(GLuint program)
glDeleteProgramPipelines	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgramPipelines (GLsizei n, const GLuint *pipelines);$/;"	p	signature:(GLsizei n, const GLuint *pipelines)
glDeleteProgramPipelinesEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDeleteProgramPipelinesEXT (GLsizei n, const GLuint *pipelines);$/;"	p	signature:(GLsizei n, const GLuint *pipelines)
glDeleteProgramsARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgramsARB (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glDeleteProgramsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glDeleteQueries	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteQueries (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteQueriesARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteQueriesARB (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteQueriesEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDeleteQueriesEXT (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteRenderbuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint *renderbuffers)
glDeleteRenderbuffers	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDeleteRenderbuffers (GLsizei n, const GLuint* renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint* renderbuffers)
glDeleteRenderbuffersEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteRenderbuffersEXT (GLsizei n, const GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, const GLuint *renderbuffers)
glDeleteSamplers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteSamplers (GLsizei count, const GLuint *samplers);$/;"	p	signature:(GLsizei count, const GLuint *samplers)
glDeleteShader	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glDeleteShader	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDeleteShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glDeleteSync	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteSync (GLsync sync);$/;"	p	signature:(GLsync sync)
glDeleteSyncAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDeleteSyncAPPLE (GLsync sync);$/;"	p	signature:(GLsync sync)
glDeleteTextures	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDeleteTextures (GLsizei n, const GLuint* textures);$/;"	p	signature:(GLsizei n, const GLuint* textures)
glDeleteTexturesEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteTexturesEXT (GLsizei n, const GLuint *textures);$/;"	p	signature:(GLsizei n, const GLuint *textures)
glDeleteTransformFeedbacks	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacks (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteTransformFeedbacksNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteTransformFeedbacksNV (GLsizei n, const GLuint *ids);$/;"	p	signature:(GLsizei n, const GLuint *ids)
glDeleteVertexArrays	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteVertexArrays (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexArraysAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteVertexArraysAPPLE (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexArraysOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDeleteVertexArraysOES (GLsizei n, const GLuint *arrays);$/;"	p	signature:(GLsizei n, const GLuint *arrays)
glDeleteVertexShaderEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDeleteVertexShaderEXT (GLuint id);$/;"	p	signature:(GLuint id)
glDepthBoundsEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDepthBoundsEXT (GLclampd zmin, GLclampd zmax);$/;"	p	signature:(GLclampd zmin, GLclampd zmax)
glDepthBoundsdNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDepthBoundsdNV (GLdouble zmin, GLdouble zmax);$/;"	p	signature:(GLdouble zmin, GLdouble zmax)
glDepthFunc	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDepthFunc (GLenum func);$/;"	p	signature:(GLenum func)
glDepthMask	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDepthMask (GLboolean flag);$/;"	p	signature:(GLboolean flag)
glDepthRangeArrayv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDepthRangeArrayv (GLuint first, GLsizei count, const GLclampd *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLclampd *v)
glDepthRangeIndexed	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDepthRangeIndexed (GLuint index, GLclampd n, GLclampd f);$/;"	p	signature:(GLuint index, GLclampd n, GLclampd f)
glDepthRangedNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDepthRangedNV (GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLdouble zNear, GLdouble zFar)
glDepthRangef	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDepthRangef (GLclampf n, GLclampf f);$/;"	p	signature:(GLclampf n, GLclampf f)
glDepthRangef	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDepthRangef (GLclampf zNear, GLclampf zFar);$/;"	p	signature:(GLclampf zNear, GLclampf zFar)
glDetachObjectARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDetachObjectARB (GLhandleARB containerObj, GLhandleARB attachedObj);$/;"	p	signature:(GLhandleARB containerObj, GLhandleARB attachedObj)
glDetachShader	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glDetachShader	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDetachShader (GLuint program, GLuint shader);$/;"	p	signature:(GLuint program, GLuint shader)
glDetailTexFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDetailTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	signature:(GLenum target, GLsizei n, const GLfloat *points)
glDisable	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDisable (GLenum cap);$/;"	p	signature:(GLenum cap)
glDisableClientStateIndexedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glDisableDriverControlQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDisableDriverControlQCOM (GLuint driverControl);$/;"	p	signature:(GLuint driverControl)
glDisableIndexedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisableIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glDisableVariantClientStateEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVariantClientStateEXT (GLuint id);$/;"	p	signature:(GLuint id)
glDisableVertexAttribAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glDisableVertexAttribArray	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glDisableVertexAttribArray	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDisableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glDisableVertexAttribArrayARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisableVertexAttribArrayARB (GLuint index);$/;"	p	signature:(GLuint index)
glDisablei	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDisablei (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glDiscardFramebufferEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDiscardFramebufferEXT (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	p	signature:(GLenum target, GLsizei numAttachments, const GLenum *attachments)
glDrawArrays	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDrawArrays (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawArraysEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawArraysEXT (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawArraysIndirect	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawArraysIndirect (GLenum mode, const GLvoid *indirect);$/;"	p	signature:(GLenum mode, const GLvoid *indirect)
glDrawArraysInstanced	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawArraysInstanced (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei primcount)
glDrawArraysInstancedANGLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDrawArraysInstancedANGLE (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei primcount)
glDrawArraysInstancedARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawArraysInstancedARB (GLenum mode, GLint first, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei primcount)
glDrawArraysInstancedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawArraysInstancedEXT (GLenum mode, GLint start, GLsizei count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
glDrawBuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawBuffers (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawBuffersARB (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawBuffersATI (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawBuffersIndexedEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersIndexedEXT (GLint n, const GLenum *location, const GLint *indices);$/;"	p	signature:(GLint n, const GLenum *location, const GLint *indices)
glDrawBuffersNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDrawBuffersNV (GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLsizei n, const GLenum *bufs)
glDrawElementArrayAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementArrayAPPLE (GLenum mode, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count)
glDrawElementArrayATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementArrayATI (GLenum mode, GLsizei count);$/;"	p	signature:(GLenum mode, GLsizei count)
glDrawElements	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glDrawElements (GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid* indices)
glDrawElementsBaseVertex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementsBaseVertex (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex)
glDrawElementsIndirect	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementsIndirect (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	p	signature:(GLenum mode, GLenum type, const GLvoid *indirect)
glDrawElementsInstanced	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementsInstanced (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
glDrawElementsInstancedANGLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glDrawElementsInstancedANGLE (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei primcount)
glDrawElementsInstancedARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementsInstancedARB (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
glDrawElementsInstancedBaseVertex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementsInstancedBaseVertex (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex)
glDrawElementsInstancedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawElementsInstancedEXT (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
glDrawMeshArraysSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawMeshArraysSUN (GLenum mode, GLint first, GLsizei count, GLsizei width);$/;"	p	signature:(GLenum mode, GLint first, GLsizei count, GLsizei width)
glDrawRangeElementArrayAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)
glDrawRangeElementArrayATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementArrayATI (GLenum mode, GLuint start, GLuint end, GLsizei count);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count)
glDrawRangeElements	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElements (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
glDrawRangeElementsBaseVertex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementsBaseVertex (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex)
glDrawRangeElementsEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawRangeElementsEXT (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
glDrawTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawTransformFeedback (GLenum mode, GLuint id);$/;"	p	signature:(GLenum mode, GLuint id)
glDrawTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawTransformFeedbackNV (GLenum mode, GLuint id);$/;"	p	signature:(GLenum mode, GLuint id)
glDrawTransformFeedbackStream	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glDrawTransformFeedbackStream (GLenum mode, GLuint id, GLuint stream);$/;"	p	signature:(GLenum mode, GLuint id, GLuint stream)
glEGLImageTargetRenderbufferStorageOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glEGLImageTargetRenderbufferStorageOES (GLenum target, GLeglImageOES image);$/;"	p	signature:(GLenum target, GLeglImageOES image)
glEGLImageTargetTexture2DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glEGLImageTargetTexture2DOES (GLenum target, GLeglImageOES image);$/;"	p	signature:(GLenum target, GLeglImageOES image)
glEdgeFlagFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEdgeFlagFormatNV (GLsizei stride);$/;"	p	signature:(GLsizei stride)
glEdgeFlagPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEdgeFlagPointerEXT (GLsizei stride, GLsizei count, const GLboolean *pointer);$/;"	p	signature:(GLsizei stride, GLsizei count, const GLboolean *pointer)
glEdgeFlagPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEdgeFlagPointerListIBM (GLint stride, const GLboolean* *pointer, GLint ptrstride);$/;"	p	signature:(GLint stride, const GLboolean* *pointer, GLint ptrstride)
glElementPointerAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glElementPointerAPPLE (GLenum type, const GLvoid *pointer);$/;"	p	signature:(GLenum type, const GLvoid *pointer)
glElementPointerATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glElementPointerATI (GLenum type, const GLvoid *pointer);$/;"	p	signature:(GLenum type, const GLvoid *pointer)
glEnable	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glEnable (GLenum cap);$/;"	p	signature:(GLenum cap)
glEnableClientStateIndexedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnableClientStateIndexedEXT (GLenum array, GLuint index);$/;"	p	signature:(GLenum array, GLuint index)
glEnableDriverControlQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glEnableDriverControlQCOM (GLuint driverControl);$/;"	p	signature:(GLuint driverControl)
glEnableIndexedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnableIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEnableVariantClientStateEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVariantClientStateEXT (GLuint id);$/;"	p	signature:(GLuint id)
glEnableVertexAttribAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVertexAttribAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glEnableVertexAttribArray	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glEnableVertexAttribArray	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glEnableVertexAttribArray (GLuint index);$/;"	p	signature:(GLuint index)
glEnableVertexAttribArrayARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnableVertexAttribArrayARB (GLuint index);$/;"	p	signature:(GLuint index)
glEnablei	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEnablei (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEndConditionalRender	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndConditionalRender (void);$/;"	p	signature:(void)
glEndConditionalRenderNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndConditionalRenderNV (void);$/;"	p	signature:(void)
glEndFragmentShaderATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndFragmentShaderATI (void);$/;"	p	signature:(void)
glEndOcclusionQueryNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndOcclusionQueryNV (void);$/;"	p	signature:(void)
glEndPerfMonitorAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glEndPerfMonitorAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glEndPerfMonitorAMD (GLuint monitor);$/;"	p	signature:(GLuint monitor)
glEndQuery	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndQuery (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndQueryARB (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glEndQueryEXT (GLenum target);$/;"	p	signature:(GLenum target)
glEndQueryIndexed	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndQueryIndexed (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glEndTilingQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glEndTilingQCOM (GLbitfield preserveMask);$/;"	p	signature:(GLbitfield preserveMask)
glEndTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndTransformFeedback (void);$/;"	p	signature:(void)
glEndTransformFeedbackEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndTransformFeedbackEXT (void);$/;"	p	signature:(void)
glEndTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndTransformFeedbackNV (void);$/;"	p	signature:(void)
glEndVertexShaderEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndVertexShaderEXT (void);$/;"	p	signature:(void)
glEndVideoCaptureNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEndVideoCaptureNV (GLuint video_capture_slot);$/;"	p	signature:(GLuint video_capture_slot)
glEvalMapsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glEvalMapsNV (GLenum target, GLenum mode);$/;"	p	signature:(GLenum target, GLenum mode)
glExecuteProgramNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glExecuteProgramNV (GLenum target, GLuint id, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint id, const GLfloat *params)
glExtGetBufferPointervQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetBufferPointervQCOM (GLenum target, GLvoid **params);$/;"	p	signature:(GLenum target, GLvoid **params)
glExtGetBuffersQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetBuffersQCOM (GLuint *buffers, GLint maxBuffers, GLint *numBuffers);$/;"	p	signature:(GLuint *buffers, GLint maxBuffers, GLint *numBuffers)
glExtGetFramebuffersQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetFramebuffersQCOM (GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers);$/;"	p	signature:(GLuint *framebuffers, GLint maxFramebuffers, GLint *numFramebuffers)
glExtGetProgramBinarySourceQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetProgramBinarySourceQCOM (GLuint program, GLenum shadertype, GLchar *source, GLint *length);$/;"	p	signature:(GLuint program, GLenum shadertype, GLchar *source, GLint *length)
glExtGetProgramsQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetProgramsQCOM (GLuint *programs, GLint maxPrograms, GLint *numPrograms);$/;"	p	signature:(GLuint *programs, GLint maxPrograms, GLint *numPrograms)
glExtGetRenderbuffersQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetRenderbuffersQCOM (GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers);$/;"	p	signature:(GLuint *renderbuffers, GLint maxRenderbuffers, GLint *numRenderbuffers)
glExtGetShadersQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetShadersQCOM (GLuint *shaders, GLint maxShaders, GLint *numShaders);$/;"	p	signature:(GLuint *shaders, GLint maxShaders, GLint *numShaders)
glExtGetTexLevelParameterivQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetTexLevelParameterivQCOM (GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum face, GLint level, GLenum pname, GLint *params)
glExtGetTexSubImageQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetTexSubImageQCOM (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid *texels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid *texels)
glExtGetTexturesQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtGetTexturesQCOM (GLuint *textures, GLint maxTextures, GLint *numTextures);$/;"	p	signature:(GLuint *textures, GLint maxTextures, GLint *numTextures)
glExtIsProgramBinaryQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glExtIsProgramBinaryQCOM (GLuint program);$/;"	p	signature:(GLuint program)
glExtTexObjectStateOverrideiQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glExtTexObjectStateOverrideiQCOM (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glExtractComponentEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glExtractComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	signature:(GLuint res, GLuint src, GLuint num)
glFenceSync	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLsync APIENTRY glFenceSync (GLenum condition, GLbitfield flags);$/;"	p	signature:(GLenum condition, GLbitfield flags)
glFenceSyncAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLsync GL_APIENTRY glFenceSyncAPPLE (GLenum condition, GLbitfield flags);$/;"	p	signature:(GLenum condition, GLbitfield flags)
glFinalCombinerInputNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFinalCombinerInputNV (GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage);$/;"	p	signature:(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
glFinish	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glFinish (void);$/;"	p	signature:(void)
glFinishAsyncSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glFinishAsyncSGIX (GLuint *markerp);$/;"	p	signature:(GLuint *markerp)
glFinishFenceAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFinishFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glFinishFenceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFinishFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glFinishFenceNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glFinishFenceNV (GLuint);$/;"	p	signature:(GLuint)
glFinishObjectAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFinishObjectAPPLE (GLenum object, GLint name);$/;"	p	signature:(GLenum object, GLint name)
glFinishTextureSUNX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFinishTextureSUNX (void);$/;"	p	signature:(void)
glFlush	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glFlush (void);$/;"	p	signature:(void)
glFlushMappedBufferRange	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushMappedBufferRange (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length)
glFlushMappedBufferRangeAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushMappedBufferRangeAPPLE (GLenum target, GLintptr offset, GLsizeiptr size);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size)
glFlushMappedBufferRangeEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glFlushMappedBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length)
glFlushMappedNamedBufferRangeEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushMappedNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length)
glFlushPixelDataRangeNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushPixelDataRangeNV (GLenum target);$/;"	p	signature:(GLenum target)
glFlushRasterSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushRasterSGIX (void);$/;"	p	signature:(void)
glFlushVertexArrayRangeAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeAPPLE (GLsizei length, GLvoid *pointer);$/;"	p	signature:(GLsizei length, GLvoid *pointer)
glFlushVertexArrayRangeNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFlushVertexArrayRangeNV (void);$/;"	p	signature:(void)
glFogCoordFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glFogCoordPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordPointer (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glFogCoordPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glFogCoordPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glFogCoordd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordd (GLdouble coord);$/;"	p	signature:(GLdouble coord)
glFogCoorddEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoorddEXT (GLdouble coord);$/;"	p	signature:(GLdouble coord)
glFogCoorddv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoorddv (const GLdouble *coord);$/;"	p	signature:(const GLdouble *coord)
glFogCoorddvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoorddvEXT (const GLdouble *coord);$/;"	p	signature:(const GLdouble *coord)
glFogCoordf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordf (GLfloat coord);$/;"	p	signature:(GLfloat coord)
glFogCoordfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordfEXT (GLfloat coord);$/;"	p	signature:(GLfloat coord)
glFogCoordfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordfv (const GLfloat *coord);$/;"	p	signature:(const GLfloat *coord)
glFogCoordfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordfvEXT (const GLfloat *coord);$/;"	p	signature:(const GLfloat *coord)
glFogCoordhNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordhNV (GLhalfNV fog);$/;"	p	signature:(GLhalfNV fog)
glFogCoordhvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogCoordhvNV (const GLhalfNV *fog);$/;"	p	signature:(const GLhalfNV *fog)
glFogFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFogFuncSGIS (GLsizei n, const GLfloat *points);$/;"	p	signature:(GLsizei n, const GLfloat *points)
glFragmentColorMaterialSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentColorMaterialSGIX (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glFragmentLightModelfSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModelfSGIX (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glFragmentLightModelfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModelfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glFragmentLightModeliSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModeliSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glFragmentLightModelivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightModelivSGIX (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glFragmentLightfSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightfSGIX (GLenum light, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat param)
glFragmentLightfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightfvSGIX (GLenum light, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLfloat *params)
glFragmentLightiSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightiSGIX (GLenum light, GLenum pname, GLint param);$/;"	p	signature:(GLenum light, GLenum pname, GLint param)
glFragmentLightivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentLightivSGIX (GLenum light, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, const GLint *params)
glFragmentMaterialfSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialfSGIX (GLenum face, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat param)
glFragmentMaterialfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialfvSGIX (GLenum face, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLfloat *params)
glFragmentMaterialiSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialiSGIX (GLenum face, GLenum pname, GLint param);$/;"	p	signature:(GLenum face, GLenum pname, GLint param)
glFragmentMaterialivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFragmentMaterialivSGIX (GLenum face, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, const GLint *params)
glFrameTerminatorGREMEDY	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFrameTerminatorGREMEDY (void);$/;"	p	signature:(void)
glFrameZoomSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFrameZoomSGIX (GLint factor);$/;"	p	signature:(GLint factor)
glFramebufferDrawBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferDrawBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	signature:(GLuint framebuffer, GLenum mode)
glFramebufferDrawBuffersEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferDrawBuffersEXT (GLuint framebuffer, GLsizei n, const GLenum *bufs);$/;"	p	signature:(GLuint framebuffer, GLsizei n, const GLenum *bufs)
glFramebufferReadBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferReadBufferEXT (GLuint framebuffer, GLenum mode);$/;"	p	signature:(GLuint framebuffer, GLenum mode)
glFramebufferRenderbuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferRenderbuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glFramebufferRenderbuffer (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferRenderbufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferRenderbufferEXT (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glFramebufferTexture	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTexture1D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture1D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture1DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glFramebufferTexture2D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture2DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glFramebufferTexture2DMultisampleEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleEXT (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei);$/;"	p	signature:(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei)
glFramebufferTexture2DMultisampleIMG	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture2DMultisampleIMG (GLenum, GLenum, GLenum, GLuint, GLint, GLsizei);$/;"	p	signature:(GLenum, GLenum, GLenum, GLuint, GLint, GLsizei)
glFramebufferTexture3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture3D (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTexture3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTexture3DEXT (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTexture3DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glFramebufferTexture3DOES (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glFramebufferTextureARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureARB (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureEXT (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level)
glFramebufferTextureFaceARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureFaceARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
glFramebufferTextureFaceEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureFaceEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
glFramebufferTextureLayer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureLayer (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureLayerARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureLayerARB (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFramebufferTextureLayerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFramebufferTextureLayerEXT (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
glFreeObjectBufferATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glFreeObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glFrontFace	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glFrontFace (GLenum mode);$/;"	p	signature:(GLenum mode)
glGenAsyncMarkersSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenAsyncMarkersSGIX (GLsizei range);$/;"	p	signature:(GLsizei range)
glGenBuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenBuffers (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenBuffers	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGenBuffers (GLsizei n, GLuint* buffers);$/;"	p	signature:(GLsizei n, GLuint* buffers)
glGenBuffersARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenBuffersARB (GLsizei n, GLuint *buffers);$/;"	p	signature:(GLsizei n, GLuint *buffers)
glGenFencesAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenFencesAPPLE (GLsizei n, GLuint *fences);$/;"	p	signature:(GLsizei n, GLuint *fences)
glGenFencesNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenFencesNV (GLsizei n, GLuint *fences);$/;"	p	signature:(GLsizei n, GLuint *fences)
glGenFencesNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGenFencesNV (GLsizei, GLuint *);$/;"	p	signature:(GLsizei, GLuint *)
glGenFragmentShadersATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenFragmentShadersATI (GLuint range);$/;"	p	signature:(GLuint range)
glGenFramebuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenFramebuffers (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glGenFramebuffers	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGenFramebuffers (GLsizei n, GLuint* framebuffers);$/;"	p	signature:(GLsizei n, GLuint* framebuffers)
glGenFramebuffersEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenFramebuffersEXT (GLsizei n, GLuint *framebuffers);$/;"	p	signature:(GLsizei n, GLuint *framebuffers)
glGenNamesAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenNamesAMD (GLenum identifier, GLuint num, GLuint *names);$/;"	p	signature:(GLenum identifier, GLuint num, GLuint *names)
glGenOcclusionQueriesNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenOcclusionQueriesNV (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenPerfMonitorsAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glGenPerfMonitorsAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGenPerfMonitorsAMD (GLsizei n, GLuint *monitors);$/;"	p	signature:(GLsizei n, GLuint *monitors)
glGenProgramPipelines	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenProgramPipelines (GLsizei n, GLuint *pipelines);$/;"	p	signature:(GLsizei n, GLuint *pipelines)
glGenProgramPipelinesEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGenProgramPipelinesEXT (GLsizei n, GLuint *pipelines);$/;"	p	signature:(GLsizei n, GLuint *pipelines)
glGenProgramsARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenProgramsARB (GLsizei n, GLuint *programs);$/;"	p	signature:(GLsizei n, GLuint *programs)
glGenProgramsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenProgramsNV (GLsizei n, GLuint *programs);$/;"	p	signature:(GLsizei n, GLuint *programs)
glGenQueries	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenQueries (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenQueriesARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenQueriesARB (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenQueriesEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGenQueriesEXT (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenRenderbuffers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenRenderbuffers (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glGenRenderbuffers	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGenRenderbuffers (GLsizei n, GLuint* renderbuffers);$/;"	p	signature:(GLsizei n, GLuint* renderbuffers)
glGenRenderbuffersEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenRenderbuffersEXT (GLsizei n, GLuint *renderbuffers);$/;"	p	signature:(GLsizei n, GLuint *renderbuffers)
glGenSamplers	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenSamplers (GLsizei count, GLuint *samplers);$/;"	p	signature:(GLsizei count, GLuint *samplers)
glGenSymbolsEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenSymbolsEXT (GLenum datatype, GLenum storagetype, GLenum range, GLuint components);$/;"	p	signature:(GLenum datatype, GLenum storagetype, GLenum range, GLuint components)
glGenTextures	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGenTextures (GLsizei n, GLuint* textures);$/;"	p	signature:(GLsizei n, GLuint* textures)
glGenTexturesEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenTexturesEXT (GLsizei n, GLuint *textures);$/;"	p	signature:(GLsizei n, GLuint *textures)
glGenTransformFeedbacks	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenTransformFeedbacks (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenTransformFeedbacksNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenTransformFeedbacksNV (GLsizei n, GLuint *ids);$/;"	p	signature:(GLsizei n, GLuint *ids)
glGenVertexArrays	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenVertexArrays (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexArraysAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenVertexArraysAPPLE (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexArraysOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGenVertexArraysOES (GLsizei n, GLuint *arrays);$/;"	p	signature:(GLsizei n, GLuint *arrays)
glGenVertexShadersEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGenVertexShadersEXT (GLuint range);$/;"	p	signature:(GLuint range)
glGenerateMipmap	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenerateMipmap (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMipmap	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGenerateMipmap (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMipmapEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenerateMipmapEXT (GLenum target);$/;"	p	signature:(GLenum target)
glGenerateMultiTexMipmapEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenerateMultiTexMipmapEXT (GLenum texunit, GLenum target);$/;"	p	signature:(GLenum texunit, GLenum target)
glGenerateTextureMipmapEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGenerateTextureMipmapEXT (GLuint texture, GLenum target);$/;"	p	signature:(GLuint texture, GLenum target)
glGetActiveAttrib	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
glGetActiveAttrib	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetActiveAttrib (GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)
glGetActiveAttribARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveAttribARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
glGetActiveSubroutineName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveSubroutineName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name)
glGetActiveSubroutineUniformName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformName (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name)
glGetActiveSubroutineUniformiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveSubroutineUniformiv (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	p	signature:(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values)
glGetActiveUniform	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
glGetActiveUniform	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetActiveUniform (GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name)
glGetActiveUniformARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniformARB (GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
glGetActiveUniformBlockName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniformBlockName (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)
glGetActiveUniformBlockiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniformBlockiv (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)
glGetActiveUniformName	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniformName (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	p	signature:(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName)
glGetActiveUniformsiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveUniformsiv (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params)
glGetActiveVaryingNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetActiveVaryingNV (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetArrayObjectfvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetArrayObjectfvATI (GLenum array, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum array, GLenum pname, GLfloat *params)
glGetArrayObjectivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetArrayObjectivATI (GLenum array, GLenum pname, GLint *params);$/;"	p	signature:(GLenum array, GLenum pname, GLint *params)
glGetAttachedObjectsARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetAttachedObjectsARB (GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj);$/;"	p	signature:(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj)
glGetAttachedShaders	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	p	signature:(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj)
glGetAttachedShaders	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetAttachedShaders (GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders);$/;"	p	signature:(GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders)
glGetAttribLocation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetAttribLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetAttribLocation	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL int          GL_APIENTRY glGetAttribLocation (GLuint program, const GLchar* name);$/;"	p	signature:(GLuint program, const GLchar* name)
glGetAttribLocationARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetAttribLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, const GLcharARB *name)
glGetBooleanIndexedvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBooleanIndexedvEXT (GLenum target, GLuint index, GLboolean *data);$/;"	p	signature:(GLenum target, GLuint index, GLboolean *data)
glGetBooleani_v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBooleani_v (GLenum target, GLuint index, GLboolean *data);$/;"	p	signature:(GLenum target, GLuint index, GLboolean *data)
glGetBooleanv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetBooleanv (GLenum pname, GLboolean* params);$/;"	p	signature:(GLenum pname, GLboolean* params)
glGetBufferParameteri64v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferParameteri64v (GLenum target, GLenum pname, GLint64 *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint64 *params)
glGetBufferParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferParameteriv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetBufferParameteriv (GLenum target, GLenum pname, GLint* params);$/;"	p	signature:(GLenum target, GLenum pname, GLint* params)
glGetBufferParameterivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferParameterivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetBufferParameterui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferParameterui64vNV (GLenum target, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint64EXT *params)
glGetBufferPointerv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferPointerv (GLenum target, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid* *params)
glGetBufferPointervARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferPointervARB (GLenum target, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid* *params)
glGetBufferPointervOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetBufferPointervOES (GLenum target, GLenum pname, GLvoid** params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid** params)
glGetBufferSubData	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferSubData (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)
glGetBufferSubDataARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetBufferSubDataARB (GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data);$/;"	p	signature:(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data)
glGetColorTable	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTable (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *table)
glGetColorTableEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableEXT (GLenum target, GLenum format, GLenum type, GLvoid *data);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *data)
glGetColorTableParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameterfvSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterfvSGI (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetColorTableParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableParameterivSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableParameterivSGI (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetColorTableSGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetColorTableSGI (GLenum target, GLenum format, GLenum type, GLvoid *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *table)
glGetCombinerInputParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerInputParameterfvNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params)
glGetCombinerInputParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerInputParameterivNV (GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params)
glGetCombinerOutputParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterfvNV (GLenum stage, GLenum portion, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum pname, GLfloat *params)
glGetCombinerOutputParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerOutputParameterivNV (GLenum stage, GLenum portion, GLenum pname, GLint *params);$/;"	p	signature:(GLenum stage, GLenum portion, GLenum pname, GLint *params)
glGetCombinerStageParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCombinerStageParameterfvNV (GLenum stage, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum stage, GLenum pname, GLfloat *params)
glGetCompressedMultiTexImageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCompressedMultiTexImageEXT (GLenum texunit, GLenum target, GLint lod, GLvoid *img);$/;"	p	signature:(GLenum texunit, GLenum target, GLint lod, GLvoid *img)
glGetCompressedTexImage	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCompressedTexImage (GLenum target, GLint level, GLvoid *img);$/;"	p	signature:(GLenum target, GLint level, GLvoid *img)
glGetCompressedTexImageARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCompressedTexImageARB (GLenum target, GLint level, GLvoid *img);$/;"	p	signature:(GLenum target, GLint level, GLvoid *img)
glGetCompressedTextureImageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetCompressedTextureImageEXT (GLuint texture, GLenum target, GLint lod, GLvoid *img);$/;"	p	signature:(GLuint texture, GLenum target, GLint lod, GLvoid *img)
glGetConvolutionFilter	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionFilter (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *image)
glGetConvolutionFilterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionFilterEXT (GLenum target, GLenum format, GLenum type, GLvoid *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *image)
glGetConvolutionParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetConvolutionParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetConvolutionParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetConvolutionParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetConvolutionParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetDebugMessageLog	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLuint GL_APIENTRY glGetDebugMessageLog (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
glGetDebugMessageLogAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogAMD (GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message)
glGetDebugMessageLogARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGetDebugMessageLogARB (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	p	signature:(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
glGetDetailTexFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetDetailTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat *points)
glGetDoubleIndexedvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetDoubleIndexedvEXT (GLenum target, GLuint index, GLdouble *data);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *data)
glGetDoublei_v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetDoublei_v (GLenum target, GLuint index, GLdouble *data);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *data)
glGetDriverControlStringQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetDriverControlStringQCOM (GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString);$/;"	p	signature:(GLuint driverControl, GLsizei bufSize, GLsizei *length, GLchar *driverControlString)
glGetDriverControlsQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetDriverControlsQCOM (GLint *num, GLsizei size, GLuint *driverControls);$/;"	p	signature:(GLint *num, GLsizei size, GLuint *driverControls)
glGetError	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLenum       GL_APIENTRY glGetError (void);$/;"	p	signature:(void)
glGetFenceivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFenceivNV (GLuint fence, GLenum pname, GLint *params);$/;"	p	signature:(GLuint fence, GLenum pname, GLint *params)
glGetFenceivNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetFenceivNV (GLuint, GLenum, GLint *);$/;"	p	signature:(GLuint, GLenum, GLint *)
glGetFinalCombinerInputParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterfvNV (GLenum variable, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum variable, GLenum pname, GLfloat *params)
glGetFinalCombinerInputParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFinalCombinerInputParameterivNV (GLenum variable, GLenum pname, GLint *params);$/;"	p	signature:(GLenum variable, GLenum pname, GLint *params)
glGetFloatIndexedvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFloatIndexedvEXT (GLenum target, GLuint index, GLfloat *data);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *data)
glGetFloati_v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFloati_v (GLenum target, GLuint index, GLfloat *data);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *data)
glGetFloatv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetFloatv (GLenum pname, GLfloat* params);$/;"	p	signature:(GLenum pname, GLfloat* params)
glGetFogFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFogFuncSGIS (GLfloat *points);$/;"	p	signature:(GLfloat *points)
glGetFragDataIndex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetFragDataIndex (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragDataLocation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetFragDataLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragDataLocationEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetFragDataLocationEXT (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetFragmentLightfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentLightfvSGIX (GLenum light, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum light, GLenum pname, GLfloat *params)
glGetFragmentLightivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentLightivSGIX (GLenum light, GLenum pname, GLint *params);$/;"	p	signature:(GLenum light, GLenum pname, GLint *params)
glGetFragmentMaterialfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentMaterialfvSGIX (GLenum face, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum face, GLenum pname, GLfloat *params)
glGetFragmentMaterialivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFragmentMaterialivSGIX (GLenum face, GLenum pname, GLint *params);$/;"	p	signature:(GLenum face, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint *params)
glGetFramebufferAttachmentParameteriv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetFramebufferAttachmentParameteriv (GLenum target, GLenum attachment, GLenum pname, GLint* params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint* params)
glGetFramebufferAttachmentParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFramebufferAttachmentParameterivEXT (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum attachment, GLenum pname, GLint *params)
glGetFramebufferParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetFramebufferParameterivEXT (GLuint framebuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum pname, GLint *params)
glGetGraphicsResetStatusARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glGetGraphicsResetStatusARB (void);$/;"	p	signature:(void)
glGetGraphicsResetStatusEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLenum GL_APIENTRY glGetGraphicsResetStatusEXT (void);$/;"	p	signature:(void)
glGetHandleARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLhandleARB APIENTRY glGetHandleARB (GLenum pname);$/;"	p	signature:(GLenum pname)
glGetHistogram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogram (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetHistogramEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetHistogramParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetHistogramParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetHistogramParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetHistogramParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetHistogramParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetImageTransformParameterfvHP	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetImageTransformParameterfvHP (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetImageTransformParameterivHP	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetImageTransformParameterivHP (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetInfoLogARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetInfoLogARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog);$/;"	p	signature:(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog)
glGetInstrumentsSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetInstrumentsSGIX (void);$/;"	p	signature:(void)
glGetInteger64i_v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetInteger64i_v (GLenum target, GLuint index, GLint64 *data);$/;"	p	signature:(GLenum target, GLuint index, GLint64 *data)
glGetInteger64v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetInteger64v (GLenum pname, GLint64 *params);$/;"	p	signature:(GLenum pname, GLint64 *params)
glGetInteger64vAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetInteger64vAPPLE (GLenum pname, GLint64 *params);$/;"	p	signature:(GLenum pname, GLint64 *params)
glGetIntegerIndexedvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetIntegerIndexedvEXT (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegeri_v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetIntegeri_v (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegeri_vEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetIntegeri_vEXT (GLenum target, GLuint index, GLint *data);$/;"	p	signature:(GLenum target, GLuint index, GLint *data)
glGetIntegerui64i_vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetIntegerui64i_vNV (GLenum value, GLuint index, GLuint64EXT *result);$/;"	p	signature:(GLenum value, GLuint index, GLuint64EXT *result)
glGetIntegerui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetIntegerui64vNV (GLenum value, GLuint64EXT *result);$/;"	p	signature:(GLenum value, GLuint64EXT *result)
glGetIntegerv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetIntegerv (GLenum pname, GLint* params);$/;"	p	signature:(GLenum pname, GLint* params)
glGetInvariantBooleanvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetInvariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetInvariantFloatvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetInvariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetInvariantIntegervEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetInvariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetListParameterfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetListParameterfvSGIX (GLuint list, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint list, GLenum pname, GLfloat *params)
glGetListParameterivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetListParameterivSGIX (GLuint list, GLenum pname, GLint *params);$/;"	p	signature:(GLuint list, GLenum pname, GLint *params)
glGetLocalConstantBooleanvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetLocalConstantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetLocalConstantFloatvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetLocalConstantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetLocalConstantIntegervEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetLocalConstantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetMapAttribParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapAttribParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLfloat *params)
glGetMapAttribParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapAttribParameterivNV (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLint *params)
glGetMapControlPointsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points);$/;"	p	signature:(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points)
glGetMapParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapParameterfvNV (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMapParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMapParameterivNV (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMinmax	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmax (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetMinmaxEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxEXT (GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
glGetMinmaxParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameterfv (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMinmaxParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameterfvEXT (GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat *params)
glGetMinmaxParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMinmaxParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMinmaxParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetMultiTexEnvfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
glGetMultiTexEnvivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultiTexGendvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params)
glGetMultiTexGenfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params)
glGetMultiTexGenivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLint *params)
glGetMultiTexImageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexImageEXT (GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
glGetMultiTexLevelParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterfvEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetMultiTexLevelParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexLevelParameterivEXT (GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params)
glGetMultiTexParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultiTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLuint *params)
glGetMultiTexParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
glGetMultiTexParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint *params)
glGetMultisamplefv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultisamplefv (GLenum pname, GLuint index, GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *val)
glGetMultisamplefvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetMultisamplefvNV (GLenum pname, GLuint index, GLfloat *val);$/;"	p	signature:(GLenum pname, GLuint index, GLfloat *val)
glGetNamedBufferParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedBufferParameterivEXT (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetNamedBufferParameterui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedBufferParameterui64vNV (GLuint buffer, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLuint64EXT *params)
glGetNamedBufferPointervEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedBufferPointervEXT (GLuint buffer, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLvoid* *params)
glGetNamedBufferSubDataEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data)
glGetNamedFramebufferAttachmentParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedFramebufferAttachmentParameterivEXT (GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params)
glGetNamedProgramLocalParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIivEXT (GLuint program, GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLint *params)
glGetNamedProgramLocalParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterIuivEXT (GLuint program, GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLuint *params)
glGetNamedProgramLocalParameterdvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterdvEXT (GLuint program, GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLdouble *params)
glGetNamedProgramLocalParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedProgramLocalParameterfvEXT (GLuint program, GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLfloat *params)
glGetNamedProgramStringEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedProgramStringEXT (GLuint program, GLenum target, GLenum pname, GLvoid *string);$/;"	p	signature:(GLuint program, GLenum target, GLenum pname, GLvoid *string)
glGetNamedProgramivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedProgramivEXT (GLuint program, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLenum pname, GLint *params)
glGetNamedRenderbufferParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedRenderbufferParameterivEXT (GLuint renderbuffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint renderbuffer, GLenum pname, GLint *params)
glGetNamedStringARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedStringARB (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	p	signature:(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string)
glGetNamedStringivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetNamedStringivARB (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	p	signature:(GLint namelen, const GLchar *name, GLenum pname, GLint *params)
glGetObjectBufferfvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectBufferfvATI (GLuint buffer, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLfloat *params)
glGetObjectBufferivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectBufferivATI (GLuint buffer, GLenum pname, GLint *params);$/;"	p	signature:(GLuint buffer, GLenum pname, GLint *params)
glGetObjectLabel	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetObjectLabel (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetObjectLabelEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetObjectLabelEXT (GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(GLenum type, GLuint object, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetObjectParameterfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectParameterfvARB (GLhandleARB obj, GLenum pname, GLfloat *params);$/;"	p	signature:(GLhandleARB obj, GLenum pname, GLfloat *params)
glGetObjectParameterivAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectParameterivAPPLE (GLenum objectType, GLuint name, GLenum pname, GLint *params);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum pname, GLint *params)
glGetObjectParameterivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetObjectParameterivARB (GLhandleARB obj, GLenum pname, GLint *params);$/;"	p	signature:(GLhandleARB obj, GLenum pname, GLint *params)
glGetObjectPtrLabel	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetObjectPtrLabel (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	p	signature:(const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label)
glGetOcclusionQueryivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetOcclusionQueryivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetOcclusionQueryuivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetOcclusionQueryuivNV (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetPerfMonitorCounterDataAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	p	signature:(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)
glGetPerfMonitorCounterDataAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterDataAMD (GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten);$/;"	p	signature:(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)
glGetPerfMonitorCounterInfoAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, GLvoid *data);$/;"	p	signature:(GLuint group, GLuint counter, GLenum pname, GLvoid *data)
glGetPerfMonitorCounterInfoAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterInfoAMD (GLuint group, GLuint counter, GLenum pname, GLvoid *data);$/;"	p	signature:(GLuint group, GLuint counter, GLenum pname, GLvoid *data)
glGetPerfMonitorCounterStringAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	p	signature:(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)
glGetPerfMonitorCounterStringAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCounterStringAMD (GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString);$/;"	p	signature:(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)
glGetPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	p	signature:(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters)
glGetPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorCountersAMD (GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters);$/;"	p	signature:(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei counterSize, GLuint *counters)
glGetPerfMonitorGroupStringAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	p	signature:(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)
glGetPerfMonitorGroupStringAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorGroupStringAMD (GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString);$/;"	p	signature:(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)
glGetPerfMonitorGroupsAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	p	signature:(GLint *numGroups, GLsizei groupsSize, GLuint *groups)
glGetPerfMonitorGroupsAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPerfMonitorGroupsAMD (GLint *numGroups, GLsizei groupsSize, GLuint *groups);$/;"	p	signature:(GLint *numGroups, GLsizei groupsSize, GLuint *groups)
glGetPixelTexGenParameterfvSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterfvSGIS (GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum pname, GLfloat *params)
glGetPixelTexGenParameterivSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPixelTexGenParameterivSGIS (GLenum pname, GLint *params);$/;"	p	signature:(GLenum pname, GLint *params)
glGetPointerIndexedvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPointerIndexedvEXT (GLenum target, GLuint index, GLvoid* *data);$/;"	p	signature:(GLenum target, GLuint index, GLvoid* *data)
glGetPointerv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetPointerv (GLenum pname, void **params);$/;"	p	signature:(GLenum pname, void **params)
glGetPointervEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetPointervEXT (GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum pname, GLvoid* *params)
glGetProgramBinary	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramBinary (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary)
glGetProgramBinaryOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetProgramBinaryOES (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary)
glGetProgramEnvParameterIivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLint *params)
glGetProgramEnvParameterIuivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramEnvParameterIuivNV (GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLuint *params)
glGetProgramEnvParameterdvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramEnvParameterdvARB (GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *params)
glGetProgramEnvParameterfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramEnvParameterfvARB (GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *params)
glGetProgramInfoLog	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramInfoLog	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetProgramInfoLog (GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog);$/;"	p	signature:(GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog)
glGetProgramLocalParameterIivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIivNV (GLenum target, GLuint index, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLint *params)
glGetProgramLocalParameterIuivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramLocalParameterIuivNV (GLenum target, GLuint index, GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLuint *params)
glGetProgramLocalParameterdvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramLocalParameterdvARB (GLenum target, GLuint index, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLdouble *params)
glGetProgramLocalParameterfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramLocalParameterfvARB (GLenum target, GLuint index, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLfloat *params)
glGetProgramNamedParameterdvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramNamedParameterdvNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble *params);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params)
glGetProgramNamedParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramNamedParameterfvNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat *params);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params)
glGetProgramParameterdvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramParameterdvNV (GLenum target, GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLdouble *params)
glGetProgramParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramParameterfvNV (GLenum target, GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLfloat *params)
glGetProgramPipelineInfoLog	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramPipelineInfoLog (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramPipelineInfoLogEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetProgramPipelineInfoLogEXT (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetProgramPipelineiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramPipelineiv (GLuint pipeline, GLenum pname, GLint *params);$/;"	p	signature:(GLuint pipeline, GLenum pname, GLint *params)
glGetProgramPipelineivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetProgramPipelineivEXT (GLuint pipeline, GLenum pname, GLint *params);$/;"	p	signature:(GLuint pipeline, GLenum pname, GLint *params)
glGetProgramStageiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramStageiv (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	p	signature:(GLuint program, GLenum shadertype, GLenum pname, GLint *values)
glGetProgramStringARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramStringARB (GLenum target, GLenum pname, GLvoid *string);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid *string)
glGetProgramStringNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramStringNV (GLuint id, GLenum pname, GLubyte *program);$/;"	p	signature:(GLuint id, GLenum pname, GLubyte *program)
glGetProgramSubroutineParameteruivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramSubroutineParameteruivNV (GLenum target, GLuint index, GLuint *param);$/;"	p	signature:(GLenum target, GLuint index, GLuint *param)
glGetProgramiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint *params);$/;"	p	signature:(GLuint program, GLenum pname, GLint *params)
glGetProgramiv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetProgramiv (GLuint program, GLenum pname, GLint* params);$/;"	p	signature:(GLuint program, GLenum pname, GLint* params)
glGetProgramivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetProgramivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetProgramivNV (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryIndexediv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryIndexediv (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLenum pname, GLint *params)
glGetQueryObjecti64v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjecti64v (GLuint id, GLenum pname, GLint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint64 *params)
glGetQueryObjecti64vEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjecti64vEXT (GLuint id, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint64EXT *params)
glGetQueryObjectiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectiv (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryObjectivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectivARB (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetQueryObjectui64v	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectui64v (GLuint id, GLenum pname, GLuint64 *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint64 *params)
glGetQueryObjectui64vEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectui64vEXT (GLuint id, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint64EXT *params)
glGetQueryObjectuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectuiv (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryObjectuivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryObjectuivARB (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryObjectuivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetQueryObjectuivEXT (GLuint id, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLuint *params)
glGetQueryiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryiv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetQueryivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetQueryivARB (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetQueryivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetQueryivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetRenderbufferParameteriv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetRenderbufferParameteriv (GLenum target, GLenum pname, GLint* params);$/;"	p	signature:(GLenum target, GLenum pname, GLint* params)
glGetRenderbufferParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetRenderbufferParameterivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetSamplerParameterIiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSamplerParameterIiv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint *params)
glGetSamplerParameterIuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSamplerParameterIuiv (GLuint sampler, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLuint *params)
glGetSamplerParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSamplerParameterfv (GLuint sampler, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLfloat *params)
glGetSamplerParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSamplerParameteriv (GLuint sampler, GLenum pname, GLint *params);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint *params)
glGetSeparableFilter	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSeparableFilter (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
glGetSeparableFilterEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSeparableFilterEXT (GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
glGetShaderInfoLog	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	p	signature:(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
glGetShaderInfoLog	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderInfoLog (GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog);$/;"	p	signature:(GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog)
glGetShaderPrecisionFormat	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	p	signature:(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision)
glGetShaderPrecisionFormat	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderPrecisionFormat (GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);$/;"	p	signature:(GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision)
glGetShaderSource	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderSource (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	p	signature:(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
glGetShaderSource	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderSource (GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source);$/;"	p	signature:(GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source)
glGetShaderSourceARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderSourceARB (GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source);$/;"	p	signature:(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source)
glGetShaderiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint *params);$/;"	p	signature:(GLuint shader, GLenum pname, GLint *params)
glGetShaderiv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetShaderiv (GLuint shader, GLenum pname, GLint* params);$/;"	p	signature:(GLuint shader, GLenum pname, GLint* params)
glGetSharpenTexFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSharpenTexFuncSGIS (GLenum target, GLfloat *points);$/;"	p	signature:(GLenum target, GLfloat *points)
glGetString	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL const GLubyte* GL_APIENTRY glGetString (GLenum name);$/;"	p	signature:(GLenum name)
glGetStringi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI const GLubyte * APIENTRY glGetStringi (GLenum name, GLuint index);$/;"	p	signature:(GLenum name, GLuint index)
glGetSubroutineIndex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGetSubroutineIndex (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, const GLchar *name)
glGetSubroutineUniformLocation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetSubroutineUniformLocation (GLuint program, GLenum shadertype, const GLchar *name);$/;"	p	signature:(GLuint program, GLenum shadertype, const GLchar *name)
glGetSynciv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetSynciv (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glGetSyncivAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetSyncivAPPLE (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glGetTexBumpParameterfvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexBumpParameterfvATI (GLenum pname, GLfloat *param);$/;"	p	signature:(GLenum pname, GLfloat *param)
glGetTexBumpParameterivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexBumpParameterivATI (GLenum pname, GLint *param);$/;"	p	signature:(GLenum pname, GLint *param)
glGetTexFilterFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexFilterFuncSGIS (GLenum target, GLenum filter, GLfloat *weights);$/;"	p	signature:(GLenum target, GLenum filter, GLfloat *weights)
glGetTexParameterIiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexParameterIiv (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexParameterIivEXT (GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLint *params)
glGetTexParameterIuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexParameterIuiv (GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint *params)
glGetTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexParameterIuivEXT (GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, GLuint *params)
glGetTexParameterPointervAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTexParameterPointervAPPLE (GLenum target, GLenum pname, GLvoid* *params);$/;"	p	signature:(GLenum target, GLenum pname, GLvoid* *params)
glGetTexParameterfv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetTexParameterfv (GLenum target, GLenum pname, GLfloat* params);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat* params)
glGetTexParameteriv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetTexParameteriv (GLenum target, GLenum pname, GLint* params);$/;"	p	signature:(GLenum target, GLenum pname, GLint* params)
glGetTextureImageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureImageEXT (GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
glGetTextureLevelParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureLevelParameterfvEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params)
glGetTextureLevelParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureLevelParameterivEXT (GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params)
glGetTextureParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint *params)
glGetTextureParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLuint *params)
glGetTextureParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLfloat *params)
glGetTextureParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint *params)
glGetTrackMatrixivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTrackMatrixivNV (GLenum target, GLuint address, GLenum pname, GLint *params);$/;"	p	signature:(GLenum target, GLuint address, GLenum pname, GLint *params)
glGetTransformFeedbackVarying	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTransformFeedbackVarying (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetTransformFeedbackVaryingEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingEXT (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	p	signature:(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
glGetTransformFeedbackVaryingNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetTransformFeedbackVaryingNV (GLuint program, GLuint index, GLint *location);$/;"	p	signature:(GLuint program, GLuint index, GLint *location)
glGetTranslatedShaderSourceANGLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetTranslatedShaderSourceANGLE (GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source);$/;"	p	signature:(GLuint shader, GLsizei bufsize, GLsizei *length, GLchar *source)
glGetUniformBlockIndex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glGetUniformBlockIndex (GLuint program, const GLchar *uniformBlockName);$/;"	p	signature:(GLuint program, const GLchar *uniformBlockName)
glGetUniformBufferSizeEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetUniformBufferSizeEXT (GLuint program, GLint location);$/;"	p	signature:(GLuint program, GLint location)
glGetUniformIndices	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformIndices (GLuint program, GLsizei uniformCount, const GLchar* *uniformNames, GLuint *uniformIndices);$/;"	p	signature:(GLuint program, GLsizei uniformCount, const GLchar* *uniformNames, GLuint *uniformIndices)
glGetUniformLocation	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetUniformLocation (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetUniformLocation	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL int          GL_APIENTRY glGetUniformLocation (GLuint program, const GLchar* name);$/;"	p	signature:(GLuint program, const GLchar* name)
glGetUniformLocationARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetUniformLocationARB (GLhandleARB programObj, const GLcharARB *name);$/;"	p	signature:(GLhandleARB programObj, const GLcharARB *name)
glGetUniformOffsetEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLintptr APIENTRY glGetUniformOffsetEXT (GLuint program, GLint location);$/;"	p	signature:(GLuint program, GLint location)
glGetUniformSubroutineuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformSubroutineuiv (GLenum shadertype, GLint location, GLuint *params);$/;"	p	signature:(GLenum shadertype, GLint location, GLuint *params)
glGetUniformdv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformdv (GLuint program, GLint location, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLdouble *params)
glGetUniformfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLfloat *params)
glGetUniformfv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetUniformfv (GLuint program, GLint location, GLfloat* params);$/;"	p	signature:(GLuint program, GLint location, GLfloat* params)
glGetUniformfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformfvARB (GLhandleARB programObj, GLint location, GLfloat *params);$/;"	p	signature:(GLhandleARB programObj, GLint location, GLfloat *params)
glGetUniformi64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformi64vNV (GLuint program, GLint location, GLint64EXT *params);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT *params)
glGetUniformiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformiv (GLuint program, GLint location, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLint *params)
glGetUniformiv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetUniformiv (GLuint program, GLint location, GLint* params);$/;"	p	signature:(GLuint program, GLint location, GLint* params)
glGetUniformivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformivARB (GLhandleARB programObj, GLint location, GLint *params);$/;"	p	signature:(GLhandleARB programObj, GLint location, GLint *params)
glGetUniformui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformui64vNV (GLuint program, GLint location, GLuint64EXT *params);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT *params)
glGetUniformuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformuiv (GLuint program, GLint location, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLuint *params)
glGetUniformuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetUniformuivEXT (GLuint program, GLint location, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLuint *params)
glGetVariantArrayObjectfvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantArrayObjectfvATI (GLuint id, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint id, GLenum pname, GLfloat *params)
glGetVariantArrayObjectivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantArrayObjectivATI (GLuint id, GLenum pname, GLint *params);$/;"	p	signature:(GLuint id, GLenum pname, GLint *params)
glGetVariantBooleanvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantBooleanvEXT (GLuint id, GLenum value, GLboolean *data);$/;"	p	signature:(GLuint id, GLenum value, GLboolean *data)
glGetVariantFloatvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantFloatvEXT (GLuint id, GLenum value, GLfloat *data);$/;"	p	signature:(GLuint id, GLenum value, GLfloat *data)
glGetVariantIntegervEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantIntegervEXT (GLuint id, GLenum value, GLint *data);$/;"	p	signature:(GLuint id, GLenum value, GLint *data)
glGetVariantPointervEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVariantPointervEXT (GLuint id, GLenum value, GLvoid* *data);$/;"	p	signature:(GLuint id, GLenum value, GLvoid* *data)
glGetVaryingLocationNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glGetVaryingLocationNV (GLuint program, const GLchar *name);$/;"	p	signature:(GLuint program, const GLchar *name)
glGetVertexAttribArrayObjectfvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectfvATI (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribArrayObjectivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribArrayObjectivATI (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribIiv (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribIivEXT (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribIuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribIuiv (GLuint index, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint *params)
glGetVertexAttribIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribIuivEXT (GLuint index, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint *params)
glGetVertexAttribLdv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribLdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribLdvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribLdvEXT (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribLi64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribLi64vNV (GLuint index, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint64EXT *params)
glGetVertexAttribLui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribLui64vNV (GLuint index, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint index, GLenum pname, GLuint64EXT *params)
glGetVertexAttribPointerv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid* *pointer)
glGetVertexAttribPointerv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribPointerv (GLuint index, GLenum pname, GLvoid** pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid** pointer)
glGetVertexAttribPointervARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribPointervARB (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid* *pointer)
glGetVertexAttribPointervNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribPointervNV (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	p	signature:(GLuint index, GLenum pname, GLvoid* *pointer)
glGetVertexAttribdv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribdv (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribdvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribdvARB (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribdvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribdvNV (GLuint index, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint index, GLenum pname, GLdouble *params)
glGetVertexAttribfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribfv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribfv (GLuint index, GLenum pname, GLfloat* params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat* params)
glGetVertexAttribfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribfvARB (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribfvNV (GLuint index, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint index, GLenum pname, GLfloat *params)
glGetVertexAttribiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribiv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glGetVertexAttribiv (GLuint index, GLenum pname, GLint* params);$/;"	p	signature:(GLuint index, GLenum pname, GLint* params)
glGetVertexAttribivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribivARB (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVertexAttribivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVertexAttribivNV (GLuint index, GLenum pname, GLint *params);$/;"	p	signature:(GLuint index, GLenum pname, GLint *params)
glGetVideoCaptureStreamdvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params)
glGetVideoCaptureStreamfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params)
glGetVideoCaptureStreamivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoCaptureStreamivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params)
glGetVideoCaptureivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoCaptureivNV (GLuint video_capture_slot, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLenum pname, GLint *params)
glGetVideoi64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoi64vNV (GLuint video_slot, GLenum pname, GLint64EXT *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLint64EXT *params)
glGetVideoivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoivNV (GLuint video_slot, GLenum pname, GLint *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLint *params)
glGetVideoui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideoui64vNV (GLuint video_slot, GLenum pname, GLuint64EXT *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLuint64EXT *params)
glGetVideouivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetVideouivNV (GLuint video_slot, GLenum pname, GLuint *params);$/;"	p	signature:(GLuint video_slot, GLenum pname, GLuint *params)
glGetnColorTableARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnColorTableARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table)
glGetnCompressedTexImageARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnCompressedTexImageARB (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	p	signature:(GLenum target, GLint lod, GLsizei bufSize, GLvoid *img)
glGetnConvolutionFilterARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnConvolutionFilterARB (GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image)
glGetnHistogramARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnHistogramARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values)
glGetnMapdvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnMapdvARB (GLenum target, GLenum query, GLsizei bufSize, GLdouble *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v)
glGetnMapfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnMapfvARB (GLenum target, GLenum query, GLsizei bufSize, GLfloat *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v)
glGetnMapivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnMapivARB (GLenum target, GLenum query, GLsizei bufSize, GLint *v);$/;"	p	signature:(GLenum target, GLenum query, GLsizei bufSize, GLint *v)
glGetnMinmaxARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnMinmaxARB (GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values);$/;"	p	signature:(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values)
glGetnPixelMapfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnPixelMapfvARB (GLenum map, GLsizei bufSize, GLfloat *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLfloat *values)
glGetnPixelMapuivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnPixelMapuivARB (GLenum map, GLsizei bufSize, GLuint *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLuint *values)
glGetnPixelMapusvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnPixelMapusvARB (GLenum map, GLsizei bufSize, GLushort *values);$/;"	p	signature:(GLenum map, GLsizei bufSize, GLushort *values)
glGetnPolygonStippleARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnPolygonStippleARB (GLsizei bufSize, GLubyte *pattern);$/;"	p	signature:(GLsizei bufSize, GLubyte *pattern)
glGetnSeparableFilterARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnSeparableFilterARB (GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span);$/;"	p	signature:(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span)
glGetnTexImageARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnTexImageARB (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	p	signature:(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img)
glGetnUniformdvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnUniformdvARB (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLdouble *params)
glGetnUniformfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnUniformfvARB (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)
glGetnUniformfvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetnUniformfvEXT (GLuint program, GLint location, GLsizei bufSize, float *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, float *params)
glGetnUniformivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnUniformivARB (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLint *params)
glGetnUniformivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glGetnUniformivEXT (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLint *params)
glGetnUniformuivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGetnUniformuivARB (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	p	signature:(GLuint program, GLint location, GLsizei bufSize, GLuint *params)
glGlobalAlphaFactorbSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorbSUN (GLbyte factor);$/;"	p	signature:(GLbyte factor)
glGlobalAlphaFactordSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactordSUN (GLdouble factor);$/;"	p	signature:(GLdouble factor)
glGlobalAlphaFactorfSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorfSUN (GLfloat factor);$/;"	p	signature:(GLfloat factor)
glGlobalAlphaFactoriSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactoriSUN (GLint factor);$/;"	p	signature:(GLint factor)
glGlobalAlphaFactorsSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorsSUN (GLshort factor);$/;"	p	signature:(GLshort factor)
glGlobalAlphaFactorubSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorubSUN (GLubyte factor);$/;"	p	signature:(GLubyte factor)
glGlobalAlphaFactoruiSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactoruiSUN (GLuint factor);$/;"	p	signature:(GLuint factor)
glGlobalAlphaFactorusSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glGlobalAlphaFactorusSUN (GLushort factor);$/;"	p	signature:(GLushort factor)
glHint	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glHint (GLenum target, GLenum mode);$/;"	p	signature:(GLenum target, GLenum mode)
glHintPGI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glHintPGI (GLenum target, GLint mode);$/;"	p	signature:(GLenum target, GLint mode)
glHistogram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glHistogram (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
glHistogramEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glHistogramEXT (GLenum target, GLsizei width, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
glIglooInterfaceSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glIglooInterfaceSGIX (GLenum pname, const GLvoid *params);$/;"	p	signature:(GLenum pname, const GLvoid *params)
glImageTransformParameterfHP	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameterfHP (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glImageTransformParameterfvHP	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameterfvHP (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glImageTransformParameteriHP	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameteriHP (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glImageTransformParameterivHP	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glImageTransformParameterivHP (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glIndexFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glIndexFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glIndexFuncEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glIndexFuncEXT (GLenum func, GLclampf ref);$/;"	p	signature:(GLenum func, GLclampf ref)
glIndexMaterialEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glIndexMaterialEXT (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glIndexPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glIndexPointerEXT (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glIndexPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glIndexPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glInsertComponentEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glInsertComponentEXT (GLuint res, GLuint src, GLuint num);$/;"	p	signature:(GLuint res, GLuint src, GLuint num)
glInsertEventMarkerEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glInsertEventMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	signature:(GLsizei length, const GLchar *marker)
glInstrumentsBufferSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glInstrumentsBufferSGIX (GLsizei size, GLint *buffer);$/;"	p	signature:(GLsizei size, GLint *buffer)
glIsAsyncMarkerSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsAsyncMarkerSGIX (GLuint marker);$/;"	p	signature:(GLuint marker)
glIsBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsBuffer (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsBuffer (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBufferARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsBufferARB (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsBufferResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsBufferResidentNV (GLenum target);$/;"	p	signature:(GLenum target)
glIsEnabled	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsEnabled (GLenum cap);$/;"	p	signature:(GLenum cap)
glIsEnabledIndexedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsEnabledIndexedEXT (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glIsEnabledi	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsEnabledi (GLenum target, GLuint index);$/;"	p	signature:(GLenum target, GLuint index)
glIsFenceAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glIsFenceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glIsFenceNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glIsFenceNV (GLuint);$/;"	p	signature:(GLuint)
glIsFramebuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsFramebuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsFramebuffer (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsFramebufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsFramebufferEXT (GLuint framebuffer);$/;"	p	signature:(GLuint framebuffer)
glIsNameAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsNameAMD (GLenum identifier, GLuint name);$/;"	p	signature:(GLenum identifier, GLuint name)
glIsNamedBufferResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsNamedBufferResidentNV (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsNamedStringARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsNamedStringARB (GLint namelen, const GLchar *name);$/;"	p	signature:(GLint namelen, const GLchar *name)
glIsObjectBufferATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glIsOcclusionQueryNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsOcclusionQueryNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgram (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgram	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsProgram (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgramARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgramARB (GLuint program);$/;"	p	signature:(GLuint program)
glIsProgramNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgramNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsProgramPipeline	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glIsProgramPipelineEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glIsProgramPipelineEXT (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glIsQuery	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsQuery (GLuint id);$/;"	p	signature:(GLuint id)
glIsQueryARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsQueryARB (GLuint id);$/;"	p	signature:(GLuint id)
glIsQueryEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glIsQueryEXT (GLuint id);$/;"	p	signature:(GLuint id)
glIsRenderbuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsRenderbuffer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsRenderbuffer (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsRenderbufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsRenderbufferEXT (GLuint renderbuffer);$/;"	p	signature:(GLuint renderbuffer)
glIsSampler	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsSampler (GLuint sampler);$/;"	p	signature:(GLuint sampler)
glIsShader	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glIsShader	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsShader (GLuint shader);$/;"	p	signature:(GLuint shader)
glIsSync	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsSync (GLsync sync);$/;"	p	signature:(GLsync sync)
glIsSyncAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glIsSyncAPPLE (GLsync sync);$/;"	p	signature:(GLsync sync)
glIsTexture	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean    GL_APIENTRY glIsTexture (GLuint texture);$/;"	p	signature:(GLuint texture)
glIsTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsTextureEXT (GLuint texture);$/;"	p	signature:(GLuint texture)
glIsTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedback (GLuint id);$/;"	p	signature:(GLuint id)
glIsTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsTransformFeedbackNV (GLuint id);$/;"	p	signature:(GLuint id)
glIsVariantEnabledEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsVariantEnabledEXT (GLuint id, GLenum cap);$/;"	p	signature:(GLuint id, GLenum cap)
glIsVertexArray	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsVertexArray (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexArrayAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsVertexArrayAPPLE (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexArrayOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glIsVertexArrayOES (GLuint array);$/;"	p	signature:(GLuint array)
glIsVertexAttribEnabledAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glIsVertexAttribEnabledAPPLE (GLuint index, GLenum pname);$/;"	p	signature:(GLuint index, GLenum pname)
glLabelObjectEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glLabelObjectEXT (GLenum type, GLuint object, GLsizei length, const GLchar *label);$/;"	p	signature:(GLenum type, GLuint object, GLsizei length, const GLchar *label)
glLightEnviSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLightEnviSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glLineWidth	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glLineWidth (GLfloat width);$/;"	p	signature:(GLfloat width)
glLinkProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLinkProgram (GLuint program);$/;"	p	signature:(GLuint program)
glLinkProgram	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glLinkProgram (GLuint program);$/;"	p	signature:(GLuint program)
glLinkProgramARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLinkProgramARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glListParameterfSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glListParameterfSGIX (GLuint list, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint list, GLenum pname, GLfloat param)
glListParameterfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glListParameterfvSGIX (GLuint list, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint list, GLenum pname, const GLfloat *params)
glListParameteriSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glListParameteriSGIX (GLuint list, GLenum pname, GLint param);$/;"	p	signature:(GLuint list, GLenum pname, GLint param)
glListParameterivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glListParameterivSGIX (GLuint list, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint list, GLenum pname, const GLint *params)
glLoadIdentityDeformationMapSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLoadIdentityDeformationMapSGIX (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glLoadProgramNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLoadProgramNV (GLenum target, GLuint id, GLsizei len, const GLubyte *program);$/;"	p	signature:(GLenum target, GLuint id, GLsizei len, const GLubyte *program)
glLoadTransposeMatrixd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadTransposeMatrixdARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixdARB (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glLoadTransposeMatrixf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLoadTransposeMatrixfARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLoadTransposeMatrixfARB (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glLockArraysEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glLockArraysEXT (GLint first, GLsizei count);$/;"	p	signature:(GLint first, GLsizei count)
glMakeBufferNonResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMakeBufferNonResidentNV (GLenum target);$/;"	p	signature:(GLenum target)
glMakeBufferResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMakeBufferResidentNV (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMakeNamedBufferNonResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMakeNamedBufferNonResidentNV (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glMakeNamedBufferResidentNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMakeNamedBufferResidentNV (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMapBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapBuffer (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBufferARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapBufferARB (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBufferOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void* GL_APIENTRY glMapBufferOES (GLenum target, GLenum access);$/;"	p	signature:(GLenum target, GLenum access)
glMapBufferRange	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapBufferRangeEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void* GL_APIENTRY glMapBufferRangeEXT (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapControlPointsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapControlPointsNV (GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points);$/;"	p	signature:(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points)
glMapNamedBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapNamedBufferEXT (GLuint buffer, GLenum access);$/;"	p	signature:(GLuint buffer, GLenum access)
glMapNamedBufferRangeEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapNamedBufferRangeEXT (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access)
glMapObjectBufferATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvoid* APIENTRY glMapObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glMapParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapParameterfvNV (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glMapParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapParameterivNV (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glMapVertexAttrib1dAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapVertexAttrib1dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points);$/;"	p	signature:(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
glMapVertexAttrib1fAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapVertexAttrib1fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points);$/;"	p	signature:(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
glMapVertexAttrib2dAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapVertexAttrib2dAPPLE (GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points);$/;"	p	signature:(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
glMapVertexAttrib2fAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMapVertexAttrib2fAPPLE (GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points);$/;"	p	signature:(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
glMatrixFrustumEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixFrustumEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glMatrixIndexPointerARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexPointerARB (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glMatrixIndexubvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexubvARB (GLint size, const GLubyte *indices);$/;"	p	signature:(GLint size, const GLubyte *indices)
glMatrixIndexuivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexuivARB (GLint size, const GLuint *indices);$/;"	p	signature:(GLint size, const GLuint *indices)
glMatrixIndexusvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixIndexusvARB (GLint size, const GLushort *indices);$/;"	p	signature:(GLint size, const GLushort *indices)
glMatrixLoadIdentityEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixLoadIdentityEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixLoadTransposedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixLoadTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixLoadTransposefEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixLoadTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixLoaddEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixLoaddEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixLoadfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixLoadfEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixMultTransposedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixMultTransposedEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixMultTransposefEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixMultTransposefEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixMultdEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixMultdEXT (GLenum mode, const GLdouble *m);$/;"	p	signature:(GLenum mode, const GLdouble *m)
glMatrixMultfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixMultfEXT (GLenum mode, const GLfloat *m);$/;"	p	signature:(GLenum mode, const GLfloat *m)
glMatrixOrthoEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixOrthoEXT (GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar);$/;"	p	signature:(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
glMatrixPopEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixPopEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixPushEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixPushEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glMatrixRotatedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixRotatedEXT (GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
glMatrixRotatefEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixRotatefEXT (GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
glMatrixScaledEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixScaledEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
glMatrixScalefEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixScalefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
glMatrixTranslatedEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixTranslatedEXT (GLenum mode, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
glMatrixTranslatefEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMatrixTranslatefEXT (GLenum mode, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
glMemoryBarrierEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMemoryBarrierEXT (GLbitfield barriers);$/;"	p	signature:(GLbitfield barriers)
glMinSampleShading	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMinSampleShading (GLclampf value);$/;"	p	signature:(GLclampf value)
glMinSampleShadingARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMinSampleShadingARB (GLclampf value);$/;"	p	signature:(GLclampf value)
glMinmax	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMinmax (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLenum internalformat, GLboolean sink)
glMinmaxEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMinmaxEXT (GLenum target, GLenum internalformat, GLboolean sink);$/;"	p	signature:(GLenum target, GLenum internalformat, GLboolean sink)
glMultTransposeMatrixd	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixd (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultTransposeMatrixdARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixdARB (const GLdouble *m);$/;"	p	signature:(const GLdouble *m)
glMultTransposeMatrixf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixf (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultTransposeMatrixfARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultTransposeMatrixfARB (const GLfloat *m);$/;"	p	signature:(const GLfloat *m)
glMultiDrawArrays	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawArrays (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawArraysEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawArraysEXT (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawArraysEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glMultiDrawArraysEXT (GLenum, GLint *, GLsizei *, GLsizei);$/;"	p	signature:(GLenum, GLint *, GLsizei *, GLsizei)
glMultiDrawElementArrayAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElementArrayAPPLE (GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiDrawElements	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElements (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount)
glMultiDrawElementsBaseVertex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElementsBaseVertex (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount, const GLint *basevertex);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount, const GLint *basevertex)
glMultiDrawElementsEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawElementsEXT (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount);$/;"	p	signature:(GLenum mode, const GLsizei *count, GLenum type, const GLvoid* *indices, GLsizei primcount)
glMultiDrawElementsEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glMultiDrawElementsEXT (GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei);$/;"	p	signature:(GLenum, const GLsizei *, GLenum, const GLvoid* *, GLsizei)
glMultiDrawRangeElementArrayAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiDrawRangeElementArrayAPPLE (GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount);$/;"	p	signature:(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount)
glMultiModeDrawArraysIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiModeDrawArraysIBM (const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride);$/;"	p	signature:(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride)
glMultiModeDrawElementsIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiModeDrawElementsIBM (const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride);$/;"	p	signature:(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei primcount, GLint modestride)
glMultiTexBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexBufferEXT (GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer)
glMultiTexCoord1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1d (GLenum target, GLdouble s);$/;"	p	signature:(GLenum target, GLdouble s)
glMultiTexCoord1dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1dARB (GLenum target, GLdouble s);$/;"	p	signature:(GLenum target, GLdouble s)
glMultiTexCoord1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord1dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1f (GLenum target, GLfloat s);$/;"	p	signature:(GLenum target, GLfloat s)
glMultiTexCoord1fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1fARB (GLenum target, GLfloat s);$/;"	p	signature:(GLenum target, GLfloat s)
glMultiTexCoord1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord1fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord1hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1hNV (GLenum target, GLhalfNV s);$/;"	p	signature:(GLenum target, GLhalfNV s)
glMultiTexCoord1hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord1i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1i (GLenum target, GLint s);$/;"	p	signature:(GLenum target, GLint s)
glMultiTexCoord1iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1iARB (GLenum target, GLint s);$/;"	p	signature:(GLenum target, GLint s)
glMultiTexCoord1iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord1ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord1s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1s (GLenum target, GLshort s);$/;"	p	signature:(GLenum target, GLshort s)
glMultiTexCoord1sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1sARB (GLenum target, GLshort s);$/;"	p	signature:(GLenum target, GLshort s)
glMultiTexCoord1sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord1svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord1svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2d (GLenum target, GLdouble s, GLdouble t);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t)
glMultiTexCoord2dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2dARB (GLenum target, GLdouble s, GLdouble t);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t)
glMultiTexCoord2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord2dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2f (GLenum target, GLfloat s, GLfloat t);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t)
glMultiTexCoord2fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2fARB (GLenum target, GLfloat s, GLfloat t);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t)
glMultiTexCoord2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord2fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord2hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2hNV (GLenum target, GLhalfNV s, GLhalfNV t);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t)
glMultiTexCoord2hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2i (GLenum target, GLint s, GLint t);$/;"	p	signature:(GLenum target, GLint s, GLint t)
glMultiTexCoord2iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2iARB (GLenum target, GLint s, GLint t);$/;"	p	signature:(GLenum target, GLint s, GLint t)
glMultiTexCoord2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord2ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2s (GLenum target, GLshort s, GLshort t);$/;"	p	signature:(GLenum target, GLshort s, GLshort t)
glMultiTexCoord2sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2sARB (GLenum target, GLshort s, GLshort t);$/;"	p	signature:(GLenum target, GLshort s, GLshort t)
glMultiTexCoord2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord2svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord2svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3d (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r)
glMultiTexCoord3dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r)
glMultiTexCoord3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord3dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3f (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r)
glMultiTexCoord3fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r)
glMultiTexCoord3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord3fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r)
glMultiTexCoord3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3i (GLenum target, GLint s, GLint t, GLint r);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r)
glMultiTexCoord3iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3iARB (GLenum target, GLint s, GLint t, GLint r);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r)
glMultiTexCoord3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord3ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3s (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r)
glMultiTexCoord3sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3sARB (GLenum target, GLshort s, GLshort t, GLshort r);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r)
glMultiTexCoord3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord3svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord3svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4d (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glMultiTexCoord4dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4dARB (GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q);$/;"	p	signature:(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
glMultiTexCoord4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4dv (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord4dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4dvARB (GLenum target, const GLdouble *v);$/;"	p	signature:(GLenum target, const GLdouble *v)
glMultiTexCoord4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4f (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4fARB (GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);$/;"	p	signature:(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
glMultiTexCoord4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4fv (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4fvARB (GLenum target, const GLfloat *v);$/;"	p	signature:(GLenum target, const GLfloat *v)
glMultiTexCoord4hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4hNV (GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	signature:(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
glMultiTexCoord4hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4hvNV (GLenum target, const GLhalfNV *v);$/;"	p	signature:(GLenum target, const GLhalfNV *v)
glMultiTexCoord4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4i (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r, GLint q)
glMultiTexCoord4iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4iARB (GLenum target, GLint s, GLint t, GLint r, GLint q);$/;"	p	signature:(GLenum target, GLint s, GLint t, GLint r, GLint q)
glMultiTexCoord4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4iv (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord4ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4ivARB (GLenum target, const GLint *v);$/;"	p	signature:(GLenum target, const GLint *v)
glMultiTexCoord4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4s (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
glMultiTexCoord4sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4sARB (GLenum target, GLshort s, GLshort t, GLshort r, GLshort q);$/;"	p	signature:(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
glMultiTexCoord4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4sv (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoord4svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoord4svARB (GLenum target, const GLshort *v);$/;"	p	signature:(GLenum target, const GLshort *v)
glMultiTexCoordP1ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP1ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP1uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP1uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP2ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP2uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP3ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP3uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordP4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP4ui (GLenum texture, GLenum type, GLuint coords);$/;"	p	signature:(GLenum texture, GLenum type, GLuint coords)
glMultiTexCoordP4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordP4uiv (GLenum texture, GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum texture, GLenum type, const GLuint *coords)
glMultiTexCoordPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexCoordPointerEXT (GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glMultiTexEnvfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexEnvfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
glMultiTexEnvfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexEnvfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
glMultiTexEnviEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexEnviEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint param)
glMultiTexEnvivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexEnvivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexGendEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexGendEXT (GLenum texunit, GLenum coord, GLenum pname, GLdouble param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLdouble param)
glMultiTexGendvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexGendvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params)
glMultiTexGenfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexGenfEXT (GLenum texunit, GLenum coord, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLfloat param)
glMultiTexGenfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexGenfvEXT (GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params)
glMultiTexGeniEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexGeniEXT (GLenum texunit, GLenum coord, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, GLint param)
glMultiTexGenivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexGenivEXT (GLenum texunit, GLenum coord, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum coord, GLenum pname, const GLint *params)
glMultiTexImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexImage1DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexImage2DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexImage3DEXT (GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexParameterIivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexParameterIuivEXT (GLenum texunit, GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLuint *params)
glMultiTexParameterfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexParameterfEXT (GLenum texunit, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
glMultiTexParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexParameterfvEXT (GLenum texunit, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
glMultiTexParameteriEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexParameteriEXT (GLenum texunit, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, GLint param)
glMultiTexParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexParameterivEXT (GLenum texunit, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
glMultiTexRenderbufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexRenderbufferEXT (GLenum texunit, GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum texunit, GLenum target, GLuint renderbuffer)
glMultiTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexSubImage1DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexSubImage2DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glMultiTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glMultiTexSubImage3DEXT (GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glNamedBufferDataEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedBufferDataEXT (GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	p	signature:(GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage)
glNamedBufferSubDataEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedBufferSubDataEXT (GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	p	signature:(GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data)
glNamedCopyBufferSubDataEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedCopyBufferSubDataEXT (GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	p	signature:(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
glNamedFramebufferRenderbufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferRenderbufferEXT (GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
glNamedFramebufferTexture1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferTexture1DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glNamedFramebufferTexture2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferTexture2DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
glNamedFramebufferTexture3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferTexture3DEXT (GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
glNamedFramebufferTextureEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferTextureEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level)
glNamedFramebufferTextureFaceEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferTextureFaceEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face)
glNamedFramebufferTextureLayerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedFramebufferTextureLayerEXT (GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	p	signature:(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer)
glNamedProgramLocalParameter4dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dEXT (GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glNamedProgramLocalParameter4dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4dvEXT (GLuint program, GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLdouble *params)
glNamedProgramLocalParameter4fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fEXT (GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glNamedProgramLocalParameter4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameter4fvEXT (GLuint program, GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLfloat *params)
glNamedProgramLocalParameterI4iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4iEXT (GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glNamedProgramLocalParameterI4ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4ivEXT (GLuint program, GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLint *params)
glNamedProgramLocalParameterI4uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uiEXT (GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glNamedProgramLocalParameterI4uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameterI4uivEXT (GLuint program, GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, const GLuint *params)
glNamedProgramLocalParameters4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParameters4fvEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glNamedProgramLocalParametersI4ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4ivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params)
glNamedProgramLocalParametersI4uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramLocalParametersI4uivEXT (GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params)
glNamedProgramStringEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedProgramStringEXT (GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	p	signature:(GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string)
glNamedRenderbufferStorageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageEXT (GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleCoverageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleCoverageEXT (GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedRenderbufferStorageMultisampleEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedRenderbufferStorageMultisampleEXT (GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glNamedStringARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNamedStringARB (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	p	signature:(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string)
glNewObjectBufferATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLuint APIENTRY glNewObjectBufferATI (GLsizei size, const GLvoid *pointer, GLenum usage);$/;"	p	signature:(GLsizei size, const GLvoid *pointer, GLenum usage)
glNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3fVertex3fSUN (GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3fVertex3fvSUN (const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *n, const GLfloat *v)
glNormal3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3hNV (GLhalfNV nx, GLhalfNV ny, GLhalfNV nz);$/;"	p	signature:(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz)
glNormal3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormal3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glNormalFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalFormatNV (GLenum type, GLsizei stride);$/;"	p	signature:(GLenum type, GLsizei stride)
glNormalP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalP3ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glNormalP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalP3uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glNormalPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalPointerEXT (GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glNormalPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalPointerListIBM (GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glNormalPointervINTEL	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalPointervINTEL (GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLenum type, const GLvoid* *pointer)
glNormalStream3bATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3bATI (GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz);$/;"	p	signature:(GLenum stream, GLbyte nx, GLbyte ny, GLbyte nz)
glNormalStream3bvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3bvATI (GLenum stream, const GLbyte *coords);$/;"	p	signature:(GLenum stream, const GLbyte *coords)
glNormalStream3dATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3dATI (GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz);$/;"	p	signature:(GLenum stream, GLdouble nx, GLdouble ny, GLdouble nz)
glNormalStream3dvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glNormalStream3fATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3fATI (GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz);$/;"	p	signature:(GLenum stream, GLfloat nx, GLfloat ny, GLfloat nz)
glNormalStream3fvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glNormalStream3iATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3iATI (GLenum stream, GLint nx, GLint ny, GLint nz);$/;"	p	signature:(GLenum stream, GLint nx, GLint ny, GLint nz)
glNormalStream3ivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glNormalStream3sATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3sATI (GLenum stream, GLshort nx, GLshort ny, GLshort nz);$/;"	p	signature:(GLenum stream, GLshort nx, GLshort ny, GLshort nz)
glNormalStream3svATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glNormalStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glObjectLabel	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glObjectLabel (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	p	signature:(GLenum identifier, GLuint name, GLsizei length, const GLchar *label)
glObjectPtrLabel	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glObjectPtrLabel (const void *ptr, GLsizei length, const GLchar *label);$/;"	p	signature:(const void *ptr, GLsizei length, const GLchar *label)
glObjectPurgeableAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glObjectPurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum option)
glObjectUnpurgeableAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glObjectUnpurgeableAPPLE (GLenum objectType, GLuint name, GLenum option);$/;"	p	signature:(GLenum objectType, GLuint name, GLenum option)
glPNTrianglesfATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPNTrianglesfATI (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPNTrianglesiATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPNTrianglesiATI (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPassTexCoordATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPassTexCoordATI (GLuint dst, GLuint coord, GLenum swizzle);$/;"	p	signature:(GLuint dst, GLuint coord, GLenum swizzle)
glPatchParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPatchParameterfv (GLenum pname, const GLfloat *values);$/;"	p	signature:(GLenum pname, const GLfloat *values)
glPatchParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPatchParameteri (GLenum pname, GLint value);$/;"	p	signature:(GLenum pname, GLint value)
glPauseTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPauseTransformFeedback (void);$/;"	p	signature:(void)
glPauseTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPauseTransformFeedbackNV (void);$/;"	p	signature:(void)
glPixelDataRangeNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelDataRangeNV (GLenum target, GLsizei length, GLvoid *pointer);$/;"	p	signature:(GLenum target, GLsizei length, GLvoid *pointer)
glPixelStorei	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glPixelStorei (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPixelTexGenParameterfSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPixelTexGenParameterfvSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPixelTexGenParameteriSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameteriSGIS (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPixelTexGenParameterivSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenParameterivSGIS (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPixelTexGenSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTexGenSGIX (GLenum mode);$/;"	p	signature:(GLenum mode)
glPixelTransformParameterfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameterfEXT (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glPixelTransformParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameterfvEXT (GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat *params)
glPixelTransformParameteriEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameteriEXT (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glPixelTransformParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPixelTransformParameterivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glPointParameterf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterf (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfARB (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfEXT (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfSGIS (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glPointParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfv (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfvARB (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfvEXT (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameterfvSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterfvSGIS (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glPointParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameteri (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameteriNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameteriNV (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glPointParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameteriv (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPointParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPointParameterivNV (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glPollAsyncSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glPollAsyncSGIX (GLuint *markerp);$/;"	p	signature:(GLuint *markerp)
glPollInstrumentsSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLint APIENTRY glPollInstrumentsSGIX (GLint *marker_p);$/;"	p	signature:(GLint *marker_p)
glPolygonOffset	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glPolygonOffset (GLfloat factor, GLfloat units);$/;"	p	signature:(GLfloat factor, GLfloat units)
glPolygonOffsetEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPolygonOffsetEXT (GLfloat factor, GLfloat bias);$/;"	p	signature:(GLfloat factor, GLfloat bias)
glPopDebugGroup	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glPopDebugGroup (void);$/;"	p	signature:(void)
glPopGroupMarkerEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glPopGroupMarkerEXT (void);$/;"	p	signature:(void)
glPresentFrameDualFillNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPresentFrameDualFillNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3);$/;"	p	signature:(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)
glPresentFrameKeyedNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPresentFrameKeyedNV (GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1);$/;"	p	signature:(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)
glPrimitiveRestartIndex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPrimitiveRestartIndex (GLuint index);$/;"	p	signature:(GLuint index)
glPrimitiveRestartIndexNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPrimitiveRestartIndexNV (GLuint index);$/;"	p	signature:(GLuint index)
glPrimitiveRestartNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPrimitiveRestartNV (void);$/;"	p	signature:(void)
glPrioritizeTexturesEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPrioritizeTexturesEXT (GLsizei n, const GLuint *textures, const GLclampf *priorities);$/;"	p	signature:(GLsizei n, const GLuint *textures, const GLclampf *priorities)
glProgramBinary	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramBinary (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	p	signature:(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length)
glProgramBinaryOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramBinaryOES (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLint length);$/;"	p	signature:(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLint length)
glProgramBufferParametersIivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramBufferParametersIivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params)
glProgramBufferParametersIuivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramBufferParametersIuivNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params)
glProgramBufferParametersfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramBufferParametersfvNV (GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params)
glProgramEnvParameter4dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramEnvParameter4dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *params)
glProgramEnvParameter4fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramEnvParameter4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *params)
glProgramEnvParameterI4iNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glProgramEnvParameterI4ivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameterI4ivNV (GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLint *params)
glProgramEnvParameterI4uiNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glProgramEnvParameterI4uivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLuint *params)
glProgramEnvParameters4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glProgramEnvParametersI4ivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLint *params)
glProgramEnvParametersI4uivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramEnvParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLuint *params)
glProgramLocalParameter4dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4dARB (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramLocalParameter4dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4dvARB (GLenum target, GLuint index, const GLdouble *params);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *params)
glProgramLocalParameter4fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4fARB (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramLocalParameter4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameter4fvARB (GLenum target, GLuint index, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *params)
glProgramLocalParameterI4iNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameterI4iNV (GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
glProgramLocalParameterI4ivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameterI4ivNV (GLenum target, GLuint index, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLint *params)
glProgramLocalParameterI4uiNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uiNV (GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glProgramLocalParameterI4uivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameterI4uivNV (GLenum target, GLuint index, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, const GLuint *params)
glProgramLocalParameters4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParameters4fvEXT (GLenum target, GLuint index, GLsizei count, const GLfloat *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
glProgramLocalParametersI4ivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParametersI4ivNV (GLenum target, GLuint index, GLsizei count, const GLint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLint *params)
glProgramLocalParametersI4uivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramLocalParametersI4uivNV (GLenum target, GLuint index, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLuint index, GLsizei count, const GLuint *params)
glProgramNamedParameter4dNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4dNV (GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramNamedParameter4dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4dvNV (GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v)
glProgramNamedParameter4fNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4fNV (GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramNamedParameter4fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramNamedParameter4fvNV (GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v);$/;"	p	signature:(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v)
glProgramParameter4dNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4dNV (GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramParameter4dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4dvNV (GLenum target, GLuint index, const GLdouble *v);$/;"	p	signature:(GLenum target, GLuint index, const GLdouble *v)
glProgramParameter4fNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4fNV (GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramParameter4fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameter4fvNV (GLenum target, GLuint index, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint index, const GLfloat *v)
glProgramParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameteri (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameteriARB (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameteriEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramParameteriEXT (GLuint program, GLenum pname, GLint value);$/;"	p	signature:(GLuint program, GLenum pname, GLint value)
glProgramParameters4dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameters4dvNV (GLenum target, GLuint index, GLuint count, const GLdouble *v);$/;"	p	signature:(GLenum target, GLuint index, GLuint count, const GLdouble *v)
glProgramParameters4fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramParameters4fvNV (GLenum target, GLuint index, GLuint count, const GLfloat *v);$/;"	p	signature:(GLenum target, GLuint index, GLuint count, const GLfloat *v)
glProgramStringARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramStringARB (GLenum target, GLenum format, GLsizei len, const GLvoid *string);$/;"	p	signature:(GLenum target, GLenum format, GLsizei len, const GLvoid *string)
glProgramSubroutineParametersuivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramSubroutineParametersuivNV (GLenum target, GLsizei count, const GLuint *params);$/;"	p	signature:(GLenum target, GLsizei count, const GLuint *params)
glProgramUniform1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1d (GLuint program, GLint location, GLdouble v0);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0)
glProgramUniform1dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1dEXT (GLuint program, GLint location, GLdouble x);$/;"	p	signature:(GLuint program, GLint location, GLdouble x)
glProgramUniform1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform1dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1f (GLuint program, GLint location, GLfloat v0);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0)
glProgramUniform1fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat v0);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0)
glProgramUniform1fEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1fEXT (GLuint program, GLint location, GLfloat x);$/;"	p	signature:(GLuint program, GLint location, GLfloat x)
glProgramUniform1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform1i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1i (GLuint program, GLint location, GLint v0);$/;"	p	signature:(GLuint program, GLint location, GLint v0)
glProgramUniform1i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1i64NV (GLuint program, GLint location, GLint64EXT x);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x)
glProgramUniform1i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform1iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint v0);$/;"	p	signature:(GLuint program, GLint location, GLint v0)
glProgramUniform1iEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1iEXT (GLuint program, GLint location, GLint x);$/;"	p	signature:(GLuint program, GLint location, GLint x)
glProgramUniform1iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform1ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform1ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1ui (GLuint program, GLint location, GLuint v0);$/;"	p	signature:(GLuint program, GLint location, GLuint v0)
glProgramUniform1ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1ui64NV (GLuint program, GLint location, GLuint64EXT x);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x)
glProgramUniform1ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform1uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1uiEXT (GLuint program, GLint location, GLuint v0);$/;"	p	signature:(GLuint program, GLint location, GLuint v0)
glProgramUniform1uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform1uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform1uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2d (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1)
glProgramUniform2dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2dEXT (GLuint program, GLint location, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y)
glProgramUniform2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform2dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2f (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1)
glProgramUniform2fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1)
glProgramUniform2fEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2fEXT (GLuint program, GLint location, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint program, GLint location, GLfloat x, GLfloat y)
glProgramUniform2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2i (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1)
glProgramUniform2i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y)
glProgramUniform2i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform2iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1)
glProgramUniform2iEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2iEXT (GLuint program, GLint location, GLint x, GLint y);$/;"	p	signature:(GLuint program, GLint location, GLint x, GLint y)
glProgramUniform2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform2ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2ui (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1)
glProgramUniform2ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y)
glProgramUniform2ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform2uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1)
glProgramUniform2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform2uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform2uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2)
glProgramUniform3dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z)
glProgramUniform3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glProgramUniform3fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glProgramUniform3fEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3fEXT (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z)
glProgramUniform3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
glProgramUniform3i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glProgramUniform3i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform3iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
glProgramUniform3iEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3iEXT (GLuint program, GLint location, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint program, GLint location, GLint x, GLint y, GLint z)
glProgramUniform3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform3ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
glProgramUniform3ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glProgramUniform3ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform3uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
glProgramUniform3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform3uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform3uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4d (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	p	signature:(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3)
glProgramUniform4dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4dEXT (GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glProgramUniform4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4dv (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform4dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4dvEXT (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLdouble *value)
glProgramUniform4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4f (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glProgramUniform4fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glProgramUniform4fEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4fEXT (GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glProgramUniform4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4fv (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4fvEXT (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLfloat *value)
glProgramUniform4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4i (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glProgramUniform4i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4i64NV (GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glProgramUniform4i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4i64vNV (GLuint program, GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
glProgramUniform4iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glProgramUniform4iEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4iEXT (GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w)
glProgramUniform4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4iv (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ivEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniform4ivEXT (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLint *value)
glProgramUniform4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4ui (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glProgramUniform4ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4ui64NV (GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glProgramUniform4ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4ui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramUniform4uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4uiEXT (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glProgramUniform4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4uiv (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniform4uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniform4uivEXT (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint *value)
glProgramUniformMatrix2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x4dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix2x4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix2x4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix2x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x2dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x2fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x4dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix3x4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix3x4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix3x4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4fvEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glProgramUniformMatrix4fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x2dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x2fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x2fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3dvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glProgramUniformMatrix4x3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fv (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformMatrix4x3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformMatrix4x3fvEXT (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glProgramUniformui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformui64NV (GLuint program, GLint location, GLuint64EXT value);$/;"	p	signature:(GLuint program, GLint location, GLuint64EXT value)
glProgramUniformui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramUniformui64vNV (GLuint program, GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
glProgramVertexLimitNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProgramVertexLimitNV (GLenum target, GLint limit);$/;"	p	signature:(GLenum target, GLint limit)
glProvokingVertex	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProvokingVertex (GLenum mode);$/;"	p	signature:(GLenum mode)
glProvokingVertexEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glProvokingVertexEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glPushClientAttribDefaultEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glPushClientAttribDefaultEXT (GLbitfield mask);$/;"	p	signature:(GLbitfield mask)
glPushDebugGroup	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glPushDebugGroup (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	p	signature:(GLenum source, GLuint id, GLsizei length, const GLchar *message)
glPushGroupMarkerEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glPushGroupMarkerEXT (GLsizei length, const GLchar *marker);$/;"	p	signature:(GLsizei length, const GLchar *marker)
glQueryCounter	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glQueryCounter (GLuint id, GLenum target);$/;"	p	signature:(GLuint id, GLenum target)
glReadBufferIndexedEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glReadBufferIndexedEXT (GLenum src, GLint index);$/;"	p	signature:(GLenum src, GLint index)
glReadBufferNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glReadBufferNV (GLenum mode);$/;"	p	signature:(GLenum mode)
glReadInstrumentsSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReadInstrumentsSGIX (GLint marker);$/;"	p	signature:(GLint marker)
glReadPixels	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glReadPixels (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels)
glReadnPixelsARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReadnPixelsARB (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data)
glReadnPixelsEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glReadnPixelsEXT (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void *data)
glReferencePlaneSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReferencePlaneSGIX (const GLdouble *equation);$/;"	p	signature:(const GLdouble *equation)
glReleaseShaderCompiler	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReleaseShaderCompiler (void);$/;"	p	signature:(void)
glReleaseShaderCompiler	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glReleaseShaderCompiler (void);$/;"	p	signature:(void)
glRenderbufferStorage	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorage	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glRenderbufferStorage (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glRenderbufferStorageEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisample	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisample (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleANGLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleANGLE (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleAPPLE (GLenum, GLsizei, GLenum, GLsizei, GLsizei);$/;"	p	signature:(GLenum, GLsizei, GLenum, GLsizei, GLsizei)
glRenderbufferStorageMultisampleCoverageNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleCoverageNV (GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glRenderbufferStorageMultisampleEXT (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
glRenderbufferStorageMultisampleEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleEXT (GLenum, GLsizei, GLenum, GLsizei, GLsizei);$/;"	p	signature:(GLenum, GLsizei, GLenum, GLsizei, GLsizei)
glRenderbufferStorageMultisampleIMG	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glRenderbufferStorageMultisampleIMG (GLenum, GLsizei, GLenum, GLsizei, GLsizei);$/;"	p	signature:(GLenum, GLsizei, GLenum, GLsizei, GLsizei)
glReplacementCodePointerSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodePointerSUN (GLenum type, GLsizei stride, const GLvoid* *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid* *pointer)
glReplacementCodeubSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeubSUN (GLubyte code);$/;"	p	signature:(GLubyte code)
glReplacementCodeubvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeubvSUN (const GLubyte *code);$/;"	p	signature:(const GLubyte *code)
glReplacementCodeuiColor3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *c, const GLfloat *v)
glReplacementCodeuiColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiColor4ubVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fSUN (GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiColor4ubVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiColor4ubVertex3fvSUN (const GLuint *rc, const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLubyte *c, const GLfloat *v)
glReplacementCodeuiNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fSUN (GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiSUN (GLuint code);$/;"	p	signature:(GLuint code)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v)
glReplacementCodeuiTexCoord2fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fSUN (GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiTexCoord2fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiTexCoord2fVertex3fvSUN (const GLuint *rc, const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *tc, const GLfloat *v)
glReplacementCodeuiVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fSUN (GLuint rc, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint rc, GLfloat x, GLfloat y, GLfloat z)
glReplacementCodeuiVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuiVertex3fvSUN (const GLuint *rc, const GLfloat *v);$/;"	p	signature:(const GLuint *rc, const GLfloat *v)
glReplacementCodeuivSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeuivSUN (const GLuint *code);$/;"	p	signature:(const GLuint *code)
glReplacementCodeusSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeusSUN (GLushort code);$/;"	p	signature:(GLushort code)
glReplacementCodeusvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glReplacementCodeusvSUN (const GLushort *code);$/;"	p	signature:(const GLushort *code)
glRequestResidentProgramsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glRequestResidentProgramsNV (GLsizei n, const GLuint *programs);$/;"	p	signature:(GLsizei n, const GLuint *programs)
glResetHistogram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResetHistogram (GLenum target);$/;"	p	signature:(GLenum target)
glResetHistogramEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResetHistogramEXT (GLenum target);$/;"	p	signature:(GLenum target)
glResetMinmax	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResetMinmax (GLenum target);$/;"	p	signature:(GLenum target)
glResetMinmaxEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResetMinmaxEXT (GLenum target);$/;"	p	signature:(GLenum target)
glResizeBuffersMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResizeBuffersMESA (void);$/;"	p	signature:(void)
glResolveMultisampleFramebufferAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glResolveMultisampleFramebufferAPPLE (void);$/;"	p	signature:(void)
glResumeTransformFeedback	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResumeTransformFeedback (void);$/;"	p	signature:(void)
glResumeTransformFeedbackNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glResumeTransformFeedbackNV (void);$/;"	p	signature:(void)
glSampleCoverage	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleCoverage (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleCoverage	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glSampleCoverage (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleCoverageARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleCoverageARB (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMapATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMapATI (GLuint dst, GLuint interp, GLenum swizzle);$/;"	p	signature:(GLuint dst, GLuint interp, GLenum swizzle)
glSampleMaskEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMaskEXT (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMaskIndexedNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMaskIndexedNV (GLuint index, GLbitfield mask);$/;"	p	signature:(GLuint index, GLbitfield mask)
glSampleMaskSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMaskSGIS (GLclampf value, GLboolean invert);$/;"	p	signature:(GLclampf value, GLboolean invert)
glSampleMaski	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSampleMaski (GLuint index, GLbitfield mask);$/;"	p	signature:(GLuint index, GLbitfield mask)
glSamplePatternEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplePatternEXT (GLenum pattern);$/;"	p	signature:(GLenum pattern)
glSamplePatternSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplePatternSGIS (GLenum pattern);$/;"	p	signature:(GLenum pattern)
glSamplerParameterIiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplerParameterIiv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLint *param)
glSamplerParameterIuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplerParameterIuiv (GLuint sampler, GLenum pname, const GLuint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLuint *param)
glSamplerParameterf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplerParameterf (GLuint sampler, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint sampler, GLenum pname, GLfloat param)
glSamplerParameterfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplerParameterfv (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLfloat *param)
glSamplerParameteri	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplerParameteri (GLuint sampler, GLenum pname, GLint param);$/;"	p	signature:(GLuint sampler, GLenum pname, GLint param)
glSamplerParameteriv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSamplerParameteriv (GLuint sampler, GLenum pname, const GLint *param);$/;"	p	signature:(GLuint sampler, GLenum pname, const GLint *param)
glScissor	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glScissor (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glScissorArrayv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glScissorArrayv (GLuint first, GLsizei count, const GLint *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLint *v)
glScissorIndexed	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glScissorIndexed (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height)
glScissorIndexedv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glScissorIndexedv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glSecondaryColor3b	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3b (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glSecondaryColor3bEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3bEXT (GLbyte red, GLbyte green, GLbyte blue);$/;"	p	signature:(GLbyte red, GLbyte green, GLbyte blue)
glSecondaryColor3bv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3bv (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glSecondaryColor3bvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glSecondaryColor3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3d (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glSecondaryColor3dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3dEXT (GLdouble red, GLdouble green, GLdouble blue);$/;"	p	signature:(GLdouble red, GLdouble green, GLdouble blue)
glSecondaryColor3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glSecondaryColor3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glSecondaryColor3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3f (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glSecondaryColor3fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3fEXT (GLfloat red, GLfloat green, GLfloat blue);$/;"	p	signature:(GLfloat red, GLfloat green, GLfloat blue)
glSecondaryColor3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glSecondaryColor3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glSecondaryColor3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3hNV (GLhalfNV red, GLhalfNV green, GLhalfNV blue);$/;"	p	signature:(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
glSecondaryColor3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glSecondaryColor3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3i (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glSecondaryColor3iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3iEXT (GLint red, GLint green, GLint blue);$/;"	p	signature:(GLint red, GLint green, GLint blue)
glSecondaryColor3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glSecondaryColor3ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glSecondaryColor3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3s (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glSecondaryColor3sEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3sEXT (GLshort red, GLshort green, GLshort blue);$/;"	p	signature:(GLshort red, GLshort green, GLshort blue)
glSecondaryColor3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glSecondaryColor3svEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glSecondaryColor3ub	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ub (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glSecondaryColor3ubEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ubEXT (GLubyte red, GLubyte green, GLubyte blue);$/;"	p	signature:(GLubyte red, GLubyte green, GLubyte blue)
glSecondaryColor3ubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ubv (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glSecondaryColor3ubvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ubvEXT (const GLubyte *v);$/;"	p	signature:(const GLubyte *v)
glSecondaryColor3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3ui (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glSecondaryColor3uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3uiEXT (GLuint red, GLuint green, GLuint blue);$/;"	p	signature:(GLuint red, GLuint green, GLuint blue)
glSecondaryColor3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3uiv (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glSecondaryColor3uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3uivEXT (const GLuint *v);$/;"	p	signature:(const GLuint *v)
glSecondaryColor3us	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3us (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glSecondaryColor3usEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3usEXT (GLushort red, GLushort green, GLushort blue);$/;"	p	signature:(GLushort red, GLushort green, GLushort blue)
glSecondaryColor3usv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3usv (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glSecondaryColor3usvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColor3usvEXT (const GLushort *v);$/;"	p	signature:(const GLushort *v)
glSecondaryColorFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glSecondaryColorP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorP3ui (GLenum type, GLuint color);$/;"	p	signature:(GLenum type, GLuint color)
glSecondaryColorP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorP3uiv (GLenum type, const GLuint *color);$/;"	p	signature:(GLenum type, const GLuint *color)
glSecondaryColorPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorPointer (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glSecondaryColorPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorPointerEXT (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glSecondaryColorPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSecondaryColorPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glSelectPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList);$/;"	p	signature:(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList)
glSelectPerfMonitorCountersAMD	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glSelectPerfMonitorCountersAMD (GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *countersList);$/;"	p	signature:(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *countersList)
glSeparableFilter2D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSeparableFilter2D (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
glSeparableFilter2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSeparableFilter2DEXT (GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column);$/;"	p	signature:(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
glSetFenceAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSetFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glSetFenceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSetFenceNV (GLuint fence, GLenum condition);$/;"	p	signature:(GLuint fence, GLenum condition)
glSetFenceNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glSetFenceNV (GLuint, GLenum);$/;"	p	signature:(GLuint, GLenum)
glSetFragmentShaderConstantATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSetFragmentShaderConstantATI (GLuint dst, const GLfloat *value);$/;"	p	signature:(GLuint dst, const GLfloat *value)
glSetInvariantEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSetInvariantEXT (GLuint id, GLenum type, const GLvoid *addr);$/;"	p	signature:(GLuint id, GLenum type, const GLvoid *addr)
glSetLocalConstantEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSetLocalConstantEXT (GLuint id, GLenum type, const GLvoid *addr);$/;"	p	signature:(GLuint id, GLenum type, const GLvoid *addr)
glShaderBinary	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glShaderBinary (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	p	signature:(GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length)
glShaderBinary	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glShaderBinary (GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length);$/;"	p	signature:(GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length)
glShaderOp1EXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glShaderOp1EXT (GLenum op, GLuint res, GLuint arg1);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1)
glShaderOp2EXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glShaderOp2EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1, GLuint arg2)
glShaderOp3EXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glShaderOp3EXT (GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3);$/;"	p	signature:(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)
glShaderSource	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar* *string, const GLint *length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar* *string, const GLint *length)
glShaderSource	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glShaderSource (GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length);$/;"	p	signature:(GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length)
glShaderSourceARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glShaderSourceARB (GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length);$/;"	p	signature:(GLhandleARB shaderObj, GLsizei count, const GLcharARB* *string, const GLint *length)
glSharpenTexFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSharpenTexFuncSGIS (GLenum target, GLsizei n, const GLfloat *points);$/;"	p	signature:(GLenum target, GLsizei n, const GLfloat *points)
glSpriteParameterfSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameterfSGIX (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glSpriteParameterfvSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameterfvSGIX (GLenum pname, const GLfloat *params);$/;"	p	signature:(GLenum pname, const GLfloat *params)
glSpriteParameteriSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameteriSGIX (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glSpriteParameterivSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSpriteParameterivSGIX (GLenum pname, const GLint *params);$/;"	p	signature:(GLenum pname, const GLint *params)
glStartInstrumentsSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStartInstrumentsSGIX (void);$/;"	p	signature:(void)
glStartTilingQCOM	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glStartTilingQCOM (GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);$/;"	p	signature:(GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask)
glStencilClearTagEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStencilClearTagEXT (GLsizei stencilTagBits, GLuint stencilClearTag);$/;"	p	signature:(GLsizei stencilTagBits, GLuint stencilClearTag)
glStencilFunc	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glStencilFunc (GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum func, GLint ref, GLuint mask)
glStencilFuncSeparate	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum face, GLenum func, GLint ref, GLuint mask)
glStencilFuncSeparate	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glStencilFuncSeparate (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	p	signature:(GLenum face, GLenum func, GLint ref, GLuint mask)
glStencilFuncSeparateATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStencilFuncSeparateATI (GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask);$/;"	p	signature:(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
glStencilMask	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glStencilMask (GLuint mask);$/;"	p	signature:(GLuint mask)
glStencilMaskSeparate	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p	signature:(GLenum face, GLuint mask)
glStencilMaskSeparate	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glStencilMaskSeparate (GLenum face, GLuint mask);$/;"	p	signature:(GLenum face, GLuint mask)
glStencilOp	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glStencilOp (GLenum fail, GLenum zfail, GLenum zpass);$/;"	p	signature:(GLenum fail, GLenum zfail, GLenum zpass)
glStencilOpSeparate	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStencilOpSeparate (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p	signature:(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
glStencilOpSeparate	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glStencilOpSeparate (GLenum face, GLenum fail, GLenum zfail, GLenum zpass);$/;"	p	signature:(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)
glStencilOpSeparateATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStencilOpSeparateATI (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	p	signature:(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
glStopInstrumentsSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStopInstrumentsSGIX (GLint marker);$/;"	p	signature:(GLint marker)
glStringMarkerGREMEDY	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glStringMarkerGREMEDY (GLsizei len, const GLvoid *string);$/;"	p	signature:(GLsizei len, const GLvoid *string)
glSwizzleEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glSwizzleEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	p	signature:(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
glTagSampleBufferSGIX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTagSampleBufferSGIX (void);$/;"	p	signature:(void)
glTangent3bEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3bEXT (GLbyte tx, GLbyte ty, GLbyte tz);$/;"	p	signature:(GLbyte tx, GLbyte ty, GLbyte tz)
glTangent3bvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3bvEXT (const GLbyte *v);$/;"	p	signature:(const GLbyte *v)
glTangent3dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3dEXT (GLdouble tx, GLdouble ty, GLdouble tz);$/;"	p	signature:(GLdouble tx, GLdouble ty, GLdouble tz)
glTangent3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3dvEXT (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glTangent3fEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3fEXT (GLfloat tx, GLfloat ty, GLfloat tz);$/;"	p	signature:(GLfloat tx, GLfloat ty, GLfloat tz)
glTangent3fvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3fvEXT (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glTangent3iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3iEXT (GLint tx, GLint ty, GLint tz);$/;"	p	signature:(GLint tx, GLint ty, GLint tz)
glTangent3ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3ivEXT (const GLint *v);$/;"	p	signature:(const GLint *v)
glTangent3sEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3sEXT (GLshort tx, GLshort ty, GLshort tz);$/;"	p	signature:(GLshort tx, GLshort ty, GLshort tz)
glTangent3svEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangent3svEXT (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glTangentPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTangentPointerEXT (GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLenum type, GLsizei stride, const GLvoid *pointer)
glTbufferMask3DFX	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTbufferMask3DFX (GLuint mask);$/;"	p	signature:(GLuint mask)
glTessellationFactorAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTessellationFactorAMD (GLfloat factor);$/;"	p	signature:(GLfloat factor)
glTessellationModeAMD	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTessellationModeAMD (GLenum mode);$/;"	p	signature:(GLenum mode)
glTestFenceAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glTestFenceAPPLE (GLuint fence);$/;"	p	signature:(GLuint fence)
glTestFenceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glTestFenceNV (GLuint fence);$/;"	p	signature:(GLuint fence)
glTestFenceNV	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glTestFenceNV (GLuint);$/;"	p	signature:(GLuint)
glTestObjectAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glTestObjectAPPLE (GLenum object, GLuint name);$/;"	p	signature:(GLenum object, GLuint name)
glTexBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexBuffer (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexBufferARB (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexBufferEXT (GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLenum target, GLenum internalformat, GLuint buffer)
glTexBumpParameterfvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexBumpParameterfvATI (GLenum pname, const GLfloat *param);$/;"	p	signature:(GLenum pname, const GLfloat *param)
glTexBumpParameterivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexBumpParameterivATI (GLenum pname, const GLint *param);$/;"	p	signature:(GLenum pname, const GLint *param)
glTexCoord1hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord1hNV (GLhalfNV s);$/;"	p	signature:(GLhalfNV s)
glTexCoord1hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord1hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord2fColor3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *v)
glTexCoord2fColor4fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor4fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glTexCoord2fColor4ubVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fSUN (GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fColor4ubVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fColor4ubVertex3fvSUN (const GLfloat *tc, const GLubyte *c, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLubyte *c, const GLfloat *v)
glTexCoord2fNormal3fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fSUN (GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fNormal3fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fNormal3fVertex3fvSUN (const GLfloat *tc, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *n, const GLfloat *v)
glTexCoord2fVertex3fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fSUN (GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
glTexCoord2fVertex3fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2fVertex3fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *v)
glTexCoord2hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2hNV (GLhalfNV s, GLhalfNV t);$/;"	p	signature:(GLhalfNV s, GLhalfNV t)
glTexCoord2hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord2hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord3hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r);$/;"	p	signature:(GLhalfNV s, GLhalfNV t, GLhalfNV r)
glTexCoord3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoord4fColor4fNormal3fVertex4fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glTexCoord4fColor4fNormal3fVertex4fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fColor4fNormal3fVertex4fvSUN (const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
glTexCoord4fVertex4fSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fSUN (GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glTexCoord4fVertex4fvSUN	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4fVertex4fvSUN (const GLfloat *tc, const GLfloat *v);$/;"	p	signature:(const GLfloat *tc, const GLfloat *v)
glTexCoord4hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4hNV (GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q);$/;"	p	signature:(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
glTexCoord4hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoord4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glTexCoordFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glTexCoordP1ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP1ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP1uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP1uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP2ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP2uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP3ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP3uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordP4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP4ui (GLenum type, GLuint coords);$/;"	p	signature:(GLenum type, GLuint coords)
glTexCoordP4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordP4uiv (GLenum type, const GLuint *coords);$/;"	p	signature:(GLenum type, const GLuint *coords)
glTexCoordPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glTexCoordPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glTexCoordPointervINTEL	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexCoordPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLint size, GLenum type, const GLvoid* *pointer)
glTexFilterFuncSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexFilterFuncSGIS (GLenum target, GLenum filter, GLsizei n, const GLfloat *weights);$/;"	p	signature:(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights)
glTexImage2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glTexImage2D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels)
glTexImage2DMultisample	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage2DMultisample (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
glTexImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage3D (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage3DEXT (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexImage3DMultisample	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage3DMultisample (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	p	signature:(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
glTexImage3DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTexImage3DOES (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels)
glTexImage4DSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexImage4DSGIS (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTexParameterIiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexParameterIiv (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexParameterIivEXT (GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint *params)
glTexParameterIuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexParameterIuiv (GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLuint *params)
glTexParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexParameterIuivEXT (GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLenum target, GLenum pname, const GLuint *params)
glTexParameterf	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glTexParameterf (GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLenum target, GLenum pname, GLfloat param)
glTexParameterfv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glTexParameterfv (GLenum target, GLenum pname, const GLfloat* params);$/;"	p	signature:(GLenum target, GLenum pname, const GLfloat* params)
glTexParameteri	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glTexParameteri (GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLenum target, GLenum pname, GLint param)
glTexParameteriv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glTexParameteriv (GLenum target, GLenum pname, const GLint* params);$/;"	p	signature:(GLenum target, GLenum pname, const GLint* params)
glTexRenderbufferNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexRenderbufferNV (GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLenum target, GLuint renderbuffer)
glTexStorage1DEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTexStorage1DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
glTexStorage2DEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTexStorage2DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTexStorage3DEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTexStorage3DEXT (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTexSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage1DEXT (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage2D	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glTexSubImage2D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels)
glTexSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage2DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage3D	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage3D (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage3DEXT (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glTexSubImage3DOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTexSubImage3DOES (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels)
glTexSubImage4DSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTexSubImage4DSGIS (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels)
glTextureBarrierNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureBarrierNV (void);$/;"	p	signature:(void)
glTextureBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureBufferEXT (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer);$/;"	p	signature:(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer)
glTextureColorMaskSGIS	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureColorMaskSGIS (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	p	signature:(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
glTextureImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureImage1DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTextureImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureImage2DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTextureImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureImage3DEXT (GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
glTextureLightEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureLightEXT (GLenum pname);$/;"	p	signature:(GLenum pname)
glTextureMaterialEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureMaterialEXT (GLenum face, GLenum mode);$/;"	p	signature:(GLenum face, GLenum mode)
glTextureNormalEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureNormalEXT (GLenum mode);$/;"	p	signature:(GLenum mode)
glTextureParameterIivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureParameterIivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLint *params)
glTextureParameterIuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureParameterIuivEXT (GLuint texture, GLenum target, GLenum pname, const GLuint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLuint *params)
glTextureParameterfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureParameterfEXT (GLuint texture, GLenum target, GLenum pname, GLfloat param);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLfloat param)
glTextureParameterfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureParameterfvEXT (GLuint texture, GLenum target, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLfloat *params)
glTextureParameteriEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureParameteriEXT (GLuint texture, GLenum target, GLenum pname, GLint param);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, GLint param)
glTextureParameterivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureParameterivEXT (GLuint texture, GLenum target, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint texture, GLenum target, GLenum pname, const GLint *params)
glTextureRangeAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureRangeAPPLE (GLenum target, GLsizei length, const GLvoid *pointer);$/;"	p	signature:(GLenum target, GLsizei length, const GLvoid *pointer)
glTextureRenderbufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureRenderbufferEXT (GLuint texture, GLenum target, GLuint renderbuffer);$/;"	p	signature:(GLuint texture, GLenum target, GLuint renderbuffer)
glTextureStorage1DEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTextureStorage1DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
glTextureStorage2DEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTextureStorage2DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
glTextureStorage3DEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glTextureStorage3DEXT (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	p	signature:(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
glTextureSubImage1DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureSubImage1DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
glTextureSubImage2DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureSubImage2DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
glTextureSubImage3DEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTextureSubImage3DEXT (GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	p	signature:(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
glTrackMatrixNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTrackMatrixNV (GLenum target, GLuint address, GLenum matrix, GLenum transform);$/;"	p	signature:(GLenum target, GLuint address, GLenum matrix, GLenum transform)
glTransformFeedbackAttribsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTransformFeedbackAttribsNV (GLuint count, const GLint *attribs, GLenum bufferMode);$/;"	p	signature:(GLuint count, const GLint *attribs, GLenum bufferMode)
glTransformFeedbackStreamAttribsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTransformFeedbackStreamAttribsNV (GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode);$/;"	p	signature:(GLsizei count, const GLint *attribs, GLsizei nbuffers, const GLint *bufstreams, GLenum bufferMode)
glTransformFeedbackVaryings	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTransformFeedbackVaryings (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode)
glTransformFeedbackVaryingsEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsEXT (GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLchar* *varyings, GLenum bufferMode)
glTransformFeedbackVaryingsNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glTransformFeedbackVaryingsNV (GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode);$/;"	p	signature:(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode)
glUniform1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1d (GLint location, GLdouble x);$/;"	p	signature:(GLint location, GLdouble x)
glUniform1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1f (GLint location, GLfloat v0);$/;"	p	signature:(GLint location, GLfloat v0)
glUniform1f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform1f (GLint location, GLfloat x);$/;"	p	signature:(GLint location, GLfloat x)
glUniform1fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1fARB (GLint location, GLfloat v0);$/;"	p	signature:(GLint location, GLfloat v0)
glUniform1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform1fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform1fv (GLint location, GLsizei count, const GLfloat* v);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat* v)
glUniform1fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform1i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1i (GLint location, GLint v0);$/;"	p	signature:(GLint location, GLint v0)
glUniform1i	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform1i (GLint location, GLint x);$/;"	p	signature:(GLint location, GLint x)
glUniform1i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1i64NV (GLint location, GLint64EXT x);$/;"	p	signature:(GLint location, GLint64EXT x)
glUniform1i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform1iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1iARB (GLint location, GLint v0);$/;"	p	signature:(GLint location, GLint v0)
glUniform1iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform1iv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform1iv (GLint location, GLsizei count, const GLint* v);$/;"	p	signature:(GLint location, GLsizei count, const GLint* v)
glUniform1ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform1ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1ui (GLint location, GLuint v0);$/;"	p	signature:(GLint location, GLuint v0)
glUniform1ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1ui64NV (GLint location, GLuint64EXT x);$/;"	p	signature:(GLint location, GLuint64EXT x)
glUniform1ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform1uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1uiEXT (GLint location, GLuint v0);$/;"	p	signature:(GLint location, GLuint v0)
glUniform1uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform1uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform1uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2d (GLint location, GLdouble x, GLdouble y);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y)
glUniform2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2f (GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1)
glUniform2f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform2f (GLint location, GLfloat x, GLfloat y);$/;"	p	signature:(GLint location, GLfloat x, GLfloat y)
glUniform2fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2fARB (GLint location, GLfloat v0, GLfloat v1);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1)
glUniform2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform2fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform2fv (GLint location, GLsizei count, const GLfloat* v);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat* v)
glUniform2fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2i (GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLint location, GLint v0, GLint v1)
glUniform2i	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform2i (GLint location, GLint x, GLint y);$/;"	p	signature:(GLint location, GLint x, GLint y)
glUniform2i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2i64NV (GLint location, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y)
glUniform2i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform2iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2iARB (GLint location, GLint v0, GLint v1);$/;"	p	signature:(GLint location, GLint v0, GLint v1)
glUniform2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform2iv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform2iv (GLint location, GLsizei count, const GLint* v);$/;"	p	signature:(GLint location, GLsizei count, const GLint* v)
glUniform2ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2ui (GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1)
glUniform2ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y)
glUniform2ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform2uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2uiEXT (GLint location, GLuint v0, GLuint v1);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1)
glUniform2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform2uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform2uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3d (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y, GLdouble z)
glUniform3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glUniform3f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform3f (GLint location, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLint location, GLfloat x, GLfloat y, GLfloat z)
glUniform3fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
glUniform3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform3fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform3fv (GLint location, GLsizei count, const GLfloat* v);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat* v)
glUniform3fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3i (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2)
glUniform3i	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform3i (GLint location, GLint x, GLint y, GLint z);$/;"	p	signature:(GLint location, GLint x, GLint y, GLint z)
glUniform3i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glUniform3i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform3iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3iARB (GLint location, GLint v0, GLint v1, GLint v2);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2)
glUniform3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform3iv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform3iv (GLint location, GLsizei count, const GLint* v);$/;"	p	signature:(GLint location, GLsizei count, const GLint* v)
glUniform3ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3ui (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2)
glUniform3ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glUniform3ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform3uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2)
glUniform3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform3uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform3uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4d (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glUniform4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4dv (GLint location, GLsizei count, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, const GLdouble *value)
glUniform4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4f (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glUniform4f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform4f (GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glUniform4fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4fARB (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	p	signature:(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
glUniform4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform4fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform4fv (GLint location, GLsizei count, const GLfloat* v);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat* v)
glUniform4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4fvARB (GLint location, GLsizei count, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, const GLfloat *value)
glUniform4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4i (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glUniform4i	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform4i (GLint location, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLint location, GLint x, GLint y, GLint z, GLint w)
glUniform4i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4i64NV (GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glUniform4i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4i64vNV (GLint location, GLsizei count, const GLint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint64EXT *value)
glUniform4iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4iARB (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	p	signature:(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
glUniform4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform4iv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniform4iv (GLint location, GLsizei count, const GLint* v);$/;"	p	signature:(GLint location, GLsizei count, const GLint* v)
glUniform4ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4ivARB (GLint location, GLsizei count, const GLint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLint *value)
glUniform4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4ui (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glUniform4ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4ui64NV (GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glUniform4ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4ui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUniform4uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4uiEXT (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	p	signature:(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
glUniform4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4uiv (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniform4uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniform4uivEXT (GLint location, GLsizei count, const GLuint *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint *value)
glUniformBlockBinding	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformBlockBinding (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	p	signature:(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
glUniformBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformBufferEXT (GLuint program, GLint location, GLuint buffer);$/;"	p	signature:(GLuint program, GLint location, GLuint buffer)
glUniformMatrix2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
glUniformMatrix2fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2x3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2x3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix2x4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix2x4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix2x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
glUniformMatrix3fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3x2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3x2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix3x4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3x4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix3x4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix3x4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUniformMatrix4fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value)
glUniformMatrix4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4fvARB (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4x2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4x2dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4x2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4x2fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformMatrix4x3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4x3dv (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
glUniformMatrix4x3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformMatrix4x3fv (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	p	signature:(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
glUniformSubroutinesuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformSubroutinesuiv (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	p	signature:(GLenum shadertype, GLsizei count, const GLuint *indices)
glUniformui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformui64NV (GLint location, GLuint64EXT value);$/;"	p	signature:(GLint location, GLuint64EXT value)
glUniformui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUniformui64vNV (GLint location, GLsizei count, const GLuint64EXT *value);$/;"	p	signature:(GLint location, GLsizei count, const GLuint64EXT *value)
glUnlockArraysEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUnlockArraysEXT (void);$/;"	p	signature:(void)
glUnmapBuffer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glUnmapBuffer (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapBufferARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glUnmapBufferARB (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapBufferOES	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL GLboolean GL_APIENTRY glUnmapBufferOES (GLenum target);$/;"	p	signature:(GLenum target)
glUnmapNamedBufferEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLboolean APIENTRY glUnmapNamedBufferEXT (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUnmapObjectBufferATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUnmapObjectBufferATI (GLuint buffer);$/;"	p	signature:(GLuint buffer)
glUpdateObjectBufferATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUpdateObjectBufferATI (GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve);$/;"	p	signature:(GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve)
glUseProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUseProgram (GLuint program);$/;"	p	signature:(GLuint program)
glUseProgram	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glUseProgram (GLuint program);$/;"	p	signature:(GLuint program)
glUseProgramObjectARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUseProgramObjectARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glUseProgramStages	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUseProgramStages (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	p	signature:(GLuint pipeline, GLbitfield stages, GLuint program)
glUseProgramStagesEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glUseProgramStagesEXT (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	p	signature:(GLuint pipeline, GLbitfield stages, GLuint program)
glUseShaderProgramEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glUseShaderProgramEXT (GLenum type, GLuint program);$/;"	p	signature:(GLenum type, GLuint program)
glVDPAUFiniNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUFiniNV (void);$/;"	p	signature:(void)
glVDPAUGetSurfaceivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUGetSurfaceivNV (GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	p	signature:(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
glVDPAUInitNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUInitNV (const GLvoid *vdpDevice, const GLvoid *getProcAddress);$/;"	p	signature:(const GLvoid *vdpDevice, const GLvoid *getProcAddress)
glVDPAUIsSurfaceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUIsSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	signature:(GLvdpauSurfaceNV surface)
glVDPAUMapSurfacesNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUMapSurfacesNV (GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces);$/;"	p	signature:(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)
glVDPAURegisterOutputSurfaceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterOutputSurfaceNV (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	p	signature:(GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
glVDPAURegisterVideoSurfaceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLvdpauSurfaceNV APIENTRY glVDPAURegisterVideoSurfaceNV (GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames);$/;"	p	signature:(GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
glVDPAUSurfaceAccessNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUSurfaceAccessNV (GLvdpauSurfaceNV surface, GLenum access);$/;"	p	signature:(GLvdpauSurfaceNV surface, GLenum access)
glVDPAUUnmapSurfacesNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUUnmapSurfacesNV (GLsizei numSurface, const GLvdpauSurfaceNV *surfaces);$/;"	p	signature:(GLsizei numSurface, const GLvdpauSurfaceNV *surfaces)
glVDPAUUnregisterSurfaceNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVDPAUUnregisterSurfaceNV (GLvdpauSurfaceNV surface);$/;"	p	signature:(GLvdpauSurfaceNV surface)
glValidateProgram	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glValidateProgram (GLuint program);$/;"	p	signature:(GLuint program)
glValidateProgram	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glValidateProgram (GLuint program);$/;"	p	signature:(GLuint program)
glValidateProgramARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glValidateProgramARB (GLhandleARB programObj);$/;"	p	signature:(GLhandleARB programObj)
glValidateProgramPipeline	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glValidateProgramPipeline (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glValidateProgramPipelineEXT	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glValidateProgramPipelineEXT (GLuint pipeline);$/;"	p	signature:(GLuint pipeline)
glVariantArrayObjectATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantArrayObjectATI (GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
glVariantPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantPointerEXT (GLuint id, GLenum type, GLuint stride, const GLvoid *addr);$/;"	p	signature:(GLuint id, GLenum type, GLuint stride, const GLvoid *addr)
glVariantbvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantbvEXT (GLuint id, const GLbyte *addr);$/;"	p	signature:(GLuint id, const GLbyte *addr)
glVariantdvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantdvEXT (GLuint id, const GLdouble *addr);$/;"	p	signature:(GLuint id, const GLdouble *addr)
glVariantfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantfvEXT (GLuint id, const GLfloat *addr);$/;"	p	signature:(GLuint id, const GLfloat *addr)
glVariantivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantivEXT (GLuint id, const GLint *addr);$/;"	p	signature:(GLuint id, const GLint *addr)
glVariantsvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantsvEXT (GLuint id, const GLshort *addr);$/;"	p	signature:(GLuint id, const GLshort *addr)
glVariantubvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantubvEXT (GLuint id, const GLubyte *addr);$/;"	p	signature:(GLuint id, const GLubyte *addr)
glVariantuivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantuivEXT (GLuint id, const GLuint *addr);$/;"	p	signature:(GLuint id, const GLuint *addr)
glVariantusvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVariantusvEXT (GLuint id, const GLushort *addr);$/;"	p	signature:(GLuint id, const GLushort *addr)
glVertex2hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertex2hNV (GLhalfNV x, GLhalfNV y);$/;"	p	signature:(GLhalfNV x, GLhalfNV y)
glVertex2hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertex2hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertex3hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	signature:(GLhalfNV x, GLhalfNV y, GLhalfNV z)
glVertex3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertex3hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertex4hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertex4hNV (GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	signature:(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
glVertex4hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertex4hvNV (const GLhalfNV *v);$/;"	p	signature:(const GLhalfNV *v)
glVertexArrayParameteriAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayParameteriAPPLE (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glVertexArrayRangeAPPLE	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayRangeAPPLE (GLsizei length, GLvoid *pointer);$/;"	p	signature:(GLsizei length, GLvoid *pointer)
glVertexArrayRangeNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayRangeNV (GLsizei length, const GLvoid *pointer);$/;"	p	signature:(GLsizei length, const GLvoid *pointer)
glVertexArrayVertexAttribLOffsetEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexArrayVertexAttribLOffsetEXT (GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset);$/;"	p	signature:(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset)
glVertexAttrib1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1d (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dARB (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dNV (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttrib1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib1f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1f (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib1f (GLuint indx, GLfloat x);$/;"	p	signature:(GLuint indx, GLfloat x)
glVertexAttrib1fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fARB (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fNV (GLuint index, GLfloat x);$/;"	p	signature:(GLuint index, GLfloat x)
glVertexAttrib1fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib1fv (GLuint indx, const GLfloat* values);$/;"	p	signature:(GLuint indx, const GLfloat* values)
glVertexAttrib1fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib1hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1hNV (GLuint index, GLhalfNV x);$/;"	p	signature:(GLuint index, GLhalfNV x)
glVertexAttrib1hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib1s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1s (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1sARB (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1sNV (GLuint index, GLshort x);$/;"	p	signature:(GLuint index, GLshort x)
glVertexAttrib1sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib1svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib1svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib1svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dARB (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dNV (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttrib2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2f (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib2f (GLuint indx, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint indx, GLfloat x, GLfloat y)
glVertexAttrib2fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fARB (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fNV (GLuint index, GLfloat x, GLfloat y);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y)
glVertexAttrib2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib2fv (GLuint indx, const GLfloat* values);$/;"	p	signature:(GLuint indx, const GLfloat* values)
glVertexAttrib2fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib2hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2hNV (GLuint index, GLhalfNV x, GLhalfNV y);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y)
glVertexAttrib2hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2s (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2sARB (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2sNV (GLuint index, GLshort x, GLshort y);$/;"	p	signature:(GLuint index, GLshort x, GLshort y)
glVertexAttrib2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib2svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib2svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttrib3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3f (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib3f (GLuint indx, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint indx, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z)
glVertexAttrib3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib3fv (GLuint indx, const GLfloat* values);$/;"	p	signature:(GLuint indx, const GLfloat* values)
glVertexAttrib3fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib3hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z)
glVertexAttrib3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3s (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3sARB (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3sNV (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z)
glVertexAttrib3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib3svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib3svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4Nbv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nbv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4NbvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NbvARB (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4Niv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Niv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4NivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NivARB (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4Nsv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nsv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4NsvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NsvARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4Nub	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nub (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4NubARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NubARB (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4Nubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4NubvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NubvARB (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4Nuiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nuiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4NuivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NuivARB (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4Nusv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4Nusv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4NusvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4NusvARB (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4bv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4bv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4bvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4bvARB (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttrib4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dARB (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dNV (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttrib4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dvARB (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4dvNV (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttrib4f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4f (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4f	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib4f (GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fARB (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fNV (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexAttrib4fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4fv	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttrib4fv (GLuint indx, const GLfloat* values);$/;"	p	signature:(GLuint indx, const GLfloat* values)
glVertexAttrib4fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fvARB (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4fvNV (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glVertexAttrib4hNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4hNV (GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w);$/;"	p	signature:(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
glVertexAttrib4hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4hvNV (GLuint index, const GLhalfNV *v);$/;"	p	signature:(GLuint index, const GLhalfNV *v)
glVertexAttrib4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ivARB (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttrib4s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4s (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4sARB (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4sNV (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexAttrib4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4svARB (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4svNV (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttrib4ubNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubNV (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	p	signature:(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
glVertexAttrib4ubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4ubvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubvARB (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4ubvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4ubvNV (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttrib4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4uivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4uivARB (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttrib4usv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4usv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttrib4usvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttrib4usvARB (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribArrayObjectATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribArrayObjectATI (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset)
glVertexAttribDivisor	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribDivisor (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribDivisorANGLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glVertexAttribDivisorANGLE (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribDivisorARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribDivisorARB (GLuint index, GLuint divisor);$/;"	p	signature:(GLuint index, GLuint divisor)
glVertexAttribFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribFormatNV (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride)
glVertexAttribI1i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1i (GLuint index, GLint x);$/;"	p	signature:(GLuint index, GLint x)
glVertexAttribI1iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1iEXT (GLuint index, GLint x);$/;"	p	signature:(GLuint index, GLint x)
glVertexAttribI1iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI1ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI1ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1ui (GLuint index, GLuint x);$/;"	p	signature:(GLuint index, GLuint x)
glVertexAttribI1uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1uiEXT (GLuint index, GLuint x);$/;"	p	signature:(GLuint index, GLuint x)
glVertexAttribI1uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI1uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI1uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2i (GLuint index, GLint x, GLint y);$/;"	p	signature:(GLuint index, GLint x, GLint y)
glVertexAttribI2iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2iEXT (GLuint index, GLint x, GLint y);$/;"	p	signature:(GLuint index, GLint x, GLint y)
glVertexAttribI2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI2ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2ui (GLuint index, GLuint x, GLuint y);$/;"	p	signature:(GLuint index, GLuint x, GLuint y)
glVertexAttribI2uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2uiEXT (GLuint index, GLuint x, GLuint y);$/;"	p	signature:(GLuint index, GLuint x, GLuint y)
glVertexAttribI2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI2uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI2uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3i (GLuint index, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z)
glVertexAttribI3iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3iEXT (GLuint index, GLint x, GLint y, GLint z);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z)
glVertexAttribI3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI3ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3ui (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z)
glVertexAttribI3uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3uiEXT (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z)
glVertexAttribI3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI3uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI3uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4bv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4bv (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttribI4bvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4bvEXT (GLuint index, const GLbyte *v);$/;"	p	signature:(GLuint index, const GLbyte *v)
glVertexAttribI4i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4i (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z, GLint w)
glVertexAttribI4iEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4iEXT (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLuint index, GLint x, GLint y, GLint z, GLint w)
glVertexAttribI4iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4iv (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI4ivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4ivEXT (GLuint index, const GLint *v);$/;"	p	signature:(GLuint index, const GLint *v)
glVertexAttribI4sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4sv (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttribI4svEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4svEXT (GLuint index, const GLshort *v);$/;"	p	signature:(GLuint index, const GLshort *v)
glVertexAttribI4ubv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4ubv (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttribI4ubvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4ubvEXT (GLuint index, const GLubyte *v);$/;"	p	signature:(GLuint index, const GLubyte *v)
glVertexAttribI4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4ui (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glVertexAttribI4uiEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4uiEXT (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	p	signature:(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
glVertexAttribI4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4uiv (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4uivEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4uivEXT (GLuint index, const GLuint *v);$/;"	p	signature:(GLuint index, const GLuint *v)
glVertexAttribI4usv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4usv (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribI4usvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribI4usvEXT (GLuint index, const GLushort *v);$/;"	p	signature:(GLuint index, const GLushort *v)
glVertexAttribIFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribIFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride)
glVertexAttribIPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribIPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribIPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribIPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribL1d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1d (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttribL1dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1dEXT (GLuint index, GLdouble x);$/;"	p	signature:(GLuint index, GLdouble x)
glVertexAttribL1dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL1dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL1i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1i64NV (GLuint index, GLint64EXT x);$/;"	p	signature:(GLuint index, GLint64EXT x)
glVertexAttribL1i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL1ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1ui64NV (GLuint index, GLuint64EXT x);$/;"	p	signature:(GLuint index, GLuint64EXT x)
glVertexAttribL1ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL1ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2d (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttribL2dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2dEXT (GLuint index, GLdouble x, GLdouble y);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y)
glVertexAttribL2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL2dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL2i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2i64NV (GLuint index, GLint64EXT x, GLint64EXT y);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y)
glVertexAttribL2i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL2ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y)
glVertexAttribL2ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL2ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3d (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttribL3dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z)
glVertexAttribL3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL3dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL3i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z)
glVertexAttribL3i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL3ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
glVertexAttribL3ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL3ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribL4d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4d (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttribL4dEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4dEXT (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexAttribL4dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4dv (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL4dvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4dvEXT (GLuint index, const GLdouble *v);$/;"	p	signature:(GLuint index, const GLdouble *v)
glVertexAttribL4i64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4i64NV (GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w);$/;"	p	signature:(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
glVertexAttribL4i64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4i64vNV (GLuint index, const GLint64EXT *v);$/;"	p	signature:(GLuint index, const GLint64EXT *v)
glVertexAttribL4ui64NV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4ui64NV (GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w);$/;"	p	signature:(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
glVertexAttribL4ui64vNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribL4ui64vNV (GLuint index, const GLuint64EXT *v);$/;"	p	signature:(GLuint index, const GLuint64EXT *v)
glVertexAttribLFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribLFormatNV (GLuint index, GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride)
glVertexAttribLPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribLPointer (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribLPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribLPointerEXT (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribP1ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP1ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP1uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP1uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP2ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP2uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP3ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP3uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribP4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP4ui (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, GLuint value)
glVertexAttribP4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribP4uiv (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	p	signature:(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
glVertexAttribPointer	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribPointer (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
glVertexAttribPointer	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glVertexAttribPointer (GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr);$/;"	p	signature:(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr)
glVertexAttribPointerARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribPointerARB (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
glVertexAttribPointerNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribPointerNV (GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexAttribs1dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs1fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs1hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs1svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs1svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs2dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs2fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs2hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs2svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs2svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs3dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs3fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs3hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs3svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs3svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs4dvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4dvNV (GLuint index, GLsizei count, const GLdouble *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLdouble *v)
glVertexAttribs4fvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4fvNV (GLuint index, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLfloat *v)
glVertexAttribs4hvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4hvNV (GLuint index, GLsizei n, const GLhalfNV *v);$/;"	p	signature:(GLuint index, GLsizei n, const GLhalfNV *v)
glVertexAttribs4svNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4svNV (GLuint index, GLsizei count, const GLshort *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLshort *v)
glVertexAttribs4ubvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexAttribs4ubvNV (GLuint index, GLsizei count, const GLubyte *v);$/;"	p	signature:(GLuint index, GLsizei count, const GLubyte *v)
glVertexBlendARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexBlendARB (GLint count);$/;"	p	signature:(GLint count)
glVertexBlendEnvfATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexBlendEnvfATI (GLenum pname, GLfloat param);$/;"	p	signature:(GLenum pname, GLfloat param)
glVertexBlendEnviATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexBlendEnviATI (GLenum pname, GLint param);$/;"	p	signature:(GLenum pname, GLint param)
glVertexFormatNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexFormatNV (GLint size, GLenum type, GLsizei stride);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride)
glVertexP2ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexP2ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP2uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexP2uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexP3ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexP3ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP3uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexP3uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexP4ui	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexP4ui (GLenum type, GLuint value);$/;"	p	signature:(GLenum type, GLuint value)
glVertexP4uiv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexP4uiv (GLenum type, const GLuint *value);$/;"	p	signature:(GLenum type, const GLuint *value)
glVertexPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexPointerEXT (GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
glVertexPointerListIBM	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexPointerListIBM (GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride);$/;"	p	signature:(GLint size, GLenum type, GLint stride, const GLvoid* *pointer, GLint ptrstride)
glVertexPointervINTEL	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexPointervINTEL (GLint size, GLenum type, const GLvoid* *pointer);$/;"	p	signature:(GLint size, GLenum type, const GLvoid* *pointer)
glVertexStream1dATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1dATI (GLenum stream, GLdouble x);$/;"	p	signature:(GLenum stream, GLdouble x)
glVertexStream1dvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream1fATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1fATI (GLenum stream, GLfloat x);$/;"	p	signature:(GLenum stream, GLfloat x)
glVertexStream1fvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream1iATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1iATI (GLenum stream, GLint x);$/;"	p	signature:(GLenum stream, GLint x)
glVertexStream1ivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream1sATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1sATI (GLenum stream, GLshort x);$/;"	p	signature:(GLenum stream, GLshort x)
glVertexStream1svATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream1svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream2dATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2dATI (GLenum stream, GLdouble x, GLdouble y);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y)
glVertexStream2dvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream2fATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2fATI (GLenum stream, GLfloat x, GLfloat y);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y)
glVertexStream2fvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream2iATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2iATI (GLenum stream, GLint x, GLint y);$/;"	p	signature:(GLenum stream, GLint x, GLint y)
glVertexStream2ivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream2sATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2sATI (GLenum stream, GLshort x, GLshort y);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y)
glVertexStream2svATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream2svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream3dATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y, GLdouble z)
glVertexStream3dvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream3fATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y, GLfloat z)
glVertexStream3fvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream3iATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3iATI (GLenum stream, GLint x, GLint y, GLint z);$/;"	p	signature:(GLenum stream, GLint x, GLint y, GLint z)
glVertexStream3ivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream3sATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3sATI (GLenum stream, GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y, GLshort z)
glVertexStream3svATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream3svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexStream4dATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4dATI (GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glVertexStream4dvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4dvATI (GLenum stream, const GLdouble *coords);$/;"	p	signature:(GLenum stream, const GLdouble *coords)
glVertexStream4fATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4fATI (GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glVertexStream4fvATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4fvATI (GLenum stream, const GLfloat *coords);$/;"	p	signature:(GLenum stream, const GLfloat *coords)
glVertexStream4iATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4iATI (GLenum stream, GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLenum stream, GLint x, GLint y, GLint z, GLint w)
glVertexStream4ivATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4ivATI (GLenum stream, const GLint *coords);$/;"	p	signature:(GLenum stream, const GLint *coords)
glVertexStream4sATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4sATI (GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)
glVertexStream4svATI	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexStream4svATI (GLenum stream, const GLshort *coords);$/;"	p	signature:(GLenum stream, const GLshort *coords)
glVertexWeightPointerEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeightPointerEXT (GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer)
glVertexWeightfEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeightfEXT (GLfloat weight);$/;"	p	signature:(GLfloat weight)
glVertexWeightfvEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeightfvEXT (const GLfloat *weight);$/;"	p	signature:(const GLfloat *weight)
glVertexWeighthNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeighthNV (GLhalfNV weight);$/;"	p	signature:(GLhalfNV weight)
glVertexWeighthvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVertexWeighthvNV (const GLhalfNV *weight);$/;"	p	signature:(const GLhalfNV *weight)
glVideoCaptureNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI GLenum APIENTRY glVideoCaptureNV (GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time);$/;"	p	signature:(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time)
glVideoCaptureStreamParameterdvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterdvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params)
glVideoCaptureStreamParameterfvNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterfvNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params)
glVideoCaptureStreamParameterivNV	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glVideoCaptureStreamParameterivNV (GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params);$/;"	p	signature:(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params)
glViewport	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void         GL_APIENTRY glViewport (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	p	signature:(GLint x, GLint y, GLsizei width, GLsizei height)
glViewportArrayv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glViewportArrayv (GLuint first, GLsizei count, const GLfloat *v);$/;"	p	signature:(GLuint first, GLsizei count, const GLfloat *v)
glViewportIndexedf	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glViewportIndexedf (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	p	signature:(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)
glViewportIndexedfv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glViewportIndexedfv (GLuint index, const GLfloat *v);$/;"	p	signature:(GLuint index, const GLfloat *v)
glWaitSync	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWaitSync (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glWaitSyncAPPLE	/usr/include/SDL2/SDL_opengles2.h	/^GL_APICALL void GL_APIENTRY glWaitSyncAPPLE (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	p	signature:(GLsync sync, GLbitfield flags, GLuint64 timeout)
glWeightPointerARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightPointerARB (GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	p	signature:(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
glWeightbvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightbvARB (GLint size, const GLbyte *weights);$/;"	p	signature:(GLint size, const GLbyte *weights)
glWeightdvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightdvARB (GLint size, const GLdouble *weights);$/;"	p	signature:(GLint size, const GLdouble *weights)
glWeightfvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightfvARB (GLint size, const GLfloat *weights);$/;"	p	signature:(GLint size, const GLfloat *weights)
glWeightivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightivARB (GLint size, const GLint *weights);$/;"	p	signature:(GLint size, const GLint *weights)
glWeightsvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightsvARB (GLint size, const GLshort *weights);$/;"	p	signature:(GLint size, const GLshort *weights)
glWeightubvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightubvARB (GLint size, const GLubyte *weights);$/;"	p	signature:(GLint size, const GLubyte *weights)
glWeightuivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightuivARB (GLint size, const GLuint *weights);$/;"	p	signature:(GLint size, const GLuint *weights)
glWeightusvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWeightusvARB (GLint size, const GLushort *weights);$/;"	p	signature:(GLint size, const GLushort *weights)
glWindowPos2d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2d (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dARB (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dMESA (GLdouble x, GLdouble y);$/;"	p	signature:(GLdouble x, GLdouble y)
glWindowPos2dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dvARB (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2dvMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos2f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2f (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fARB (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fMESA (GLfloat x, GLfloat y);$/;"	p	signature:(GLfloat x, GLfloat y)
glWindowPos2fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fvARB (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2fvMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos2i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2i (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2iARB (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2iMESA (GLint x, GLint y);$/;"	p	signature:(GLint x, GLint y)
glWindowPos2iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2ivARB (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2ivMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos2s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2s (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2sARB (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2sMESA (GLshort x, GLshort y);$/;"	p	signature:(GLshort x, GLshort y)
glWindowPos2sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos2svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2svARB (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos2svMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos2svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3d	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3d (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dARB (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dMESA (GLdouble x, GLdouble y, GLdouble z);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z)
glWindowPos3dv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dv (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3dvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dvARB (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3dvMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos3f	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3f (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fARB (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fMESA (GLfloat x, GLfloat y, GLfloat z);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z)
glWindowPos3fv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fv (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3fvARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fvARB (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3fvMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos3i	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3i (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3iARB (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3iMESA (GLint x, GLint y, GLint z);$/;"	p	signature:(GLint x, GLint y, GLint z)
glWindowPos3iv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3iv (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3ivARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3ivARB (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3ivMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos3s	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3s (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3sARB (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3sMESA (GLshort x, GLshort y, GLshort z);$/;"	p	signature:(GLshort x, GLshort y, GLshort z)
glWindowPos3sv	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3sv (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3svARB	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3svARB (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos3svMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos3svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWindowPos4dMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4dMESA (GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	p	signature:(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
glWindowPos4dvMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4dvMESA (const GLdouble *v);$/;"	p	signature:(const GLdouble *v)
glWindowPos4fMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4fMESA (GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	p	signature:(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
glWindowPos4fvMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4fvMESA (const GLfloat *v);$/;"	p	signature:(const GLfloat *v)
glWindowPos4iMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4iMESA (GLint x, GLint y, GLint z, GLint w);$/;"	p	signature:(GLint x, GLint y, GLint z, GLint w)
glWindowPos4ivMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4ivMESA (const GLint *v);$/;"	p	signature:(const GLint *v)
glWindowPos4sMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4sMESA (GLshort x, GLshort y, GLshort z, GLshort w);$/;"	p	signature:(GLshort x, GLshort y, GLshort z, GLshort w)
glWindowPos4svMESA	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWindowPos4svMESA (const GLshort *v);$/;"	p	signature:(const GLshort *v)
glWriteMaskEXT	/usr/include/SDL2/SDL_opengl.h	/^GLAPI void APIENTRY glWriteMaskEXT (GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW);$/;"	p	signature:(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
gl_accelerated	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accelerated;$/;"	m	struct:__anon4	access:public
gl_accum_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_alpha_size;$/;"	m	struct:__anon4	access:public
gl_accum_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_blue_size;$/;"	m	struct:__anon4	access:public
gl_accum_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_green_size;$/;"	m	struct:__anon4	access:public
gl_accum_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_accum_red_size;$/;"	m	struct:__anon4	access:public
gl_alpha_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_alpha_size;$/;"	m	struct:__anon4	access:public
gl_blue_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_blue_size;$/;"	m	struct:__anon4	access:public
gl_buffer_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_buffer_size;$/;"	m	struct:__anon4	access:public
gl_debug	/usr/include/SDL2/SDL_test_common.h	/^    int gl_debug;$/;"	m	struct:__anon4	access:public
gl_depth_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_depth_size;$/;"	m	struct:__anon4	access:public
gl_double_buffer	/usr/include/SDL2/SDL_test_common.h	/^    int gl_double_buffer;$/;"	m	struct:__anon4	access:public
gl_green_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_green_size;$/;"	m	struct:__anon4	access:public
gl_major_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_major_version;$/;"	m	struct:__anon4	access:public
gl_minor_version	/usr/include/SDL2/SDL_test_common.h	/^    int gl_minor_version;$/;"	m	struct:__anon4	access:public
gl_multisamplebuffers	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplebuffers;$/;"	m	struct:__anon4	access:public
gl_multisamplesamples	/usr/include/SDL2/SDL_test_common.h	/^    int gl_multisamplesamples;$/;"	m	struct:__anon4	access:public
gl_profile_mask	/usr/include/SDL2/SDL_test_common.h	/^    int gl_profile_mask;$/;"	m	struct:__anon4	access:public
gl_red_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_red_size;$/;"	m	struct:__anon4	access:public
gl_retained_backing	/usr/include/SDL2/SDL_test_common.h	/^    int gl_retained_backing;$/;"	m	struct:__anon4	access:public
gl_stencil_size	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stencil_size;$/;"	m	struct:__anon4	access:public
gl_stereo	/usr/include/SDL2/SDL_test_common.h	/^    int gl_stereo;$/;"	m	struct:__anon4	access:public
h	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	access:public
h	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
h	/usr/include/SDL2/SDL_video.h	/^    int h;                      \/**< height *\/$/;"	m	struct:__anon5	access:public
hat	/usr/include/SDL2/SDL_events.h	/^    Uint8 hat;          \/**< The joystick hat index *\/$/;"	m	struct:SDL_JoyHatEvent	access:public
hat	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat;$/;"	m	struct:SDL_GameControllerButtonBind::__anon54::__anon55	access:public
hat	/usr/include/SDL2/SDL_gamecontroller.h	/^        } hat;$/;"	m	union:SDL_GameControllerButtonBind::__anon54	typeref:struct:SDL_GameControllerButtonBind::__anon54::__anon55	access:public
hat_mask	/usr/include/SDL2/SDL_gamecontroller.h	/^            int hat_mask;$/;"	m	struct:SDL_GameControllerButtonBind::__anon54::__anon55	access:public
height	/usr/include/SDL2/SDL_test_images.h	/^  int height;$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
here	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *here;$/;"	m	struct:SDL_RWops::__anon30::__anon33	access:public
hidden	/usr/include/SDL2/SDL_rwops.h	/^    } hidden;$/;"	m	struct:SDL_RWops	typeref:union:SDL_RWops::__anon30	access:public
hwnd	/usr/include/SDL2/SDL_syswm.h	/^            HWND hwnd;                  \/**< The window for the message *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
i	/usr/include/SDL2/SDL_test_md5.h	/^    MD5UINT4  i[2];     \/* number of _bits_ handled mod 2^64 *\/$/;"	m	struct:__anon39	access:public
id	/usr/include/SDL2/SDL_touch.h	/^    SDL_FingerID id;$/;"	m	struct:SDL_Finger	access:public
in	/usr/include/SDL2/SDL_test_md5.h	/^    unsigned char in[64];   \/* input buffer *\/$/;"	m	struct:__anon39	access:public
info	/usr/include/SDL2/SDL_syswm.h	/^    } info;$/;"	m	struct:SDL_SysWMinfo	typeref:union:SDL_SysWMinfo::__anon21	access:public
inputStreamRef	/usr/include/SDL2/SDL_rwops.h	/^            void *inputStreamRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
int32_t	/usr/include/SDL2/SDL_opengl.h	/^typedef __int32 int32_t;$/;"	t
int32_t	/usr/include/SDL2/SDL_opengl.h	/^typedef long int int32_t;$/;"	t
int64_t	/usr/include/SDL2/SDL_opengl.h	/^typedef __int64 int64_t;$/;"	t
int64_t	/usr/include/SDL2/SDL_opengl.h	/^typedef long int int64_t;$/;"	t
int64_t	/usr/include/SDL2/SDL_opengl.h	/^typedef long long int int64_t;$/;"	t
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCondition	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticConstant	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticCustom	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;        \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticRamp	access:public
interval	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 interval;    \/**< How soon it can be triggered again after button. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
jaxis	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyAxisEvent jaxis;         \/**< Joystick axis event data *\/$/;"	m	union:SDL_Event	access:public
jball	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyBallEvent jball;         \/**< Joystick ball event data *\/$/;"	m	union:SDL_Event	access:public
jbutton	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyButtonEvent jbutton;     \/**< Joystick button event data *\/$/;"	m	union:SDL_Event	access:public
jdevice	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyDeviceEvent jdevice;     \/**< Joystick device change event data *\/$/;"	m	union:SDL_Event	access:public
jhat	/usr/include/SDL2/SDL_events.h	/^    SDL_JoyHatEvent jhat;           \/**< Joystick hat event data *\/$/;"	m	union:SDL_Event	access:public
key	/usr/include/SDL2/SDL_events.h	/^    SDL_KeyboardEvent key;          \/**< Keyboard event data *\/$/;"	m	union:SDL_Event	access:public
keysym	/usr/include/SDL2/SDL_events.h	/^    SDL_Keysym keysym;  \/**< The key that was pressed or released *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
khronos_boolean_enum_t	/usr/include/SDL2/SDL_opengles2.h	/^} khronos_boolean_enum_t;$/;"	t	typeref:enum:__anon3
khronos_float_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef          float         khronos_float_t;$/;"	t
khronos_int16_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef signed   short int     khronos_int16_t;$/;"	t
khronos_int32_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef __int32                 khronos_int32_t;$/;"	t
khronos_int32_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef int                     khronos_int32_t;$/;"	t
khronos_int32_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef int32_t                 khronos_int32_t;$/;"	t
khronos_int64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef __int64                 khronos_int64_t;$/;"	t
khronos_int64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef int64_t                 khronos_int64_t;$/;"	t
khronos_int64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef long int                khronos_int64_t;$/;"	t
khronos_int64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef long long int           khronos_int64_t;$/;"	t
khronos_int8_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef signed   char          khronos_int8_t;$/;"	t
khronos_intptr_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef signed   long  int     khronos_intptr_t;$/;"	t
khronos_intptr_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef signed   long long int khronos_intptr_t;$/;"	t
khronos_ssize_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef signed   long  int     khronos_ssize_t;$/;"	t
khronos_ssize_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef signed   long long int khronos_ssize_t;$/;"	t
khronos_stime_nanoseconds_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_int64_t        khronos_stime_nanoseconds_t;$/;"	t
khronos_uint16_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned short int     khronos_uint16_t;$/;"	t
khronos_uint32_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef uint32_t                khronos_uint32_t;$/;"	t
khronos_uint32_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned __int32        khronos_uint32_t;$/;"	t
khronos_uint32_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned int            khronos_uint32_t;$/;"	t
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef uint64_t                khronos_uint64_t;$/;"	t
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned __int64        khronos_uint64_t;$/;"	t
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned long int       khronos_uint64_t;$/;"	t
khronos_uint64_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned long long int  khronos_uint64_t;$/;"	t
khronos_uint8_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned char          khronos_uint8_t;$/;"	t
khronos_uintptr_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned long  int     khronos_uintptr_t;$/;"	t
khronos_uintptr_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned long long int khronos_uintptr_t;$/;"	t
khronos_usize_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned long  int     khronos_usize_t;$/;"	t
khronos_usize_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef unsigned long long int khronos_usize_t;$/;"	t
khronos_utime_nanoseconds_t	/usr/include/SDL2/SDL_opengles2.h	/^typedef khronos_uint64_t       khronos_utime_nanoseconds_t;$/;"	t
lParam	/usr/include/SDL2/SDL_syswm.h	/^            LPARAM lParam;              \/**< LONG message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
large_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 large_magnitude; \/**< Control of the large controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
left_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 left_coeff[3];   \/**< How fast to increase the force towards the negative side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
left_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 left_sat[3];     \/**< Level when joystick is to the negative side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
leftright	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticLeftRight leftright;  \/**< Left\/Right effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
len	/usr/include/SDL2/SDL_audio.h	/^    int len;                    \/**< Length of original audio buffer *\/$/;"	m	struct:SDL_AudioCVT	access:public
len_cvt	/usr/include/SDL2/SDL_audio.h	/^    int len_cvt;                \/**< Length of converted audio buffer *\/$/;"	m	struct:SDL_AudioCVT	access:public
len_mult	/usr/include/SDL2/SDL_audio.h	/^    int len_mult;               \/**< buffer must be len*len_mult big *\/$/;"	m	struct:SDL_AudioCVT	access:public
len_ratio	/usr/include/SDL2/SDL_audio.h	/^    double len_ratio;           \/**< Given len, final size is len*len_ratio *\/$/;"	m	struct:SDL_AudioCVT	access:public
length	/usr/include/SDL2/SDL_events.h	/^    Sint32 length;                              \/**< The length of selected editing text *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCondition	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticCustom	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;          \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticRamp	access:public
length	/usr/include/SDL2/SDL_haptic.h	/^    Uint32 length;      \/**< Duration of the effect. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
level	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 level;           \/**< Strength of the constant effect. *\/$/;"	m	struct:SDL_HapticConstant	access:public
linenum	/usr/include/SDL2/SDL_assert.h	/^    int linenum;$/;"	m	struct:SDL_assert_data	access:public
lock_data	/usr/include/SDL2/SDL_surface.h	/^    void *lock_data;            \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
locked	/usr/include/SDL2/SDL_surface.h	/^    int locked;                 \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
logical_h	/usr/include/SDL2/SDL_test_common.h	/^    int logical_h;$/;"	m	struct:__anon4	access:public
logical_w	/usr/include/SDL2/SDL_test_common.h	/^    int logical_w;$/;"	m	struct:__anon4	access:public
magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 magnitude;   \/**< Peak value. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
main	/usr/include/SDL2/SDL_main.h	83;"	d
major	/usr/include/SDL2/SDL_version.h	/^    Uint8 major;        \/**< major version *\/$/;"	m	struct:SDL_version	access:public
map	/usr/include/SDL2/SDL_surface.h	/^    struct SDL_BlitMap *map;    \/**< Private *\/$/;"	m	struct:SDL_Surface	typeref:struct:SDL_Surface::SDL_BlitMap	access:public
max_texture_height	/usr/include/SDL2/SDL_render.h	/^    int max_texture_height;     \/**< The maximimum texture height *\/$/;"	m	struct:SDL_RendererInfo	access:public
max_texture_width	/usr/include/SDL2/SDL_render.h	/^    int max_texture_width;      \/**< The maximimum texture width *\/$/;"	m	struct:SDL_RendererInfo	access:public
mem	/usr/include/SDL2/SDL_rwops.h	/^        } mem;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon33	access:public
message	/usr/include/SDL2/SDL_messagebox.h	/^    const char *message;                \/**< UTF-8 message text *\/$/;"	m	struct:__anon46	access:public
mgesture	/usr/include/SDL2/SDL_events.h	/^    SDL_MultiGestureEvent mgesture; \/**< Gesture event data *\/$/;"	m	union:SDL_Event	access:public
minor	/usr/include/SDL2/SDL_version.h	/^    Uint8 minor;        \/**< minor version *\/$/;"	m	struct:SDL_version	access:public
mir	/usr/include/SDL2/SDL_syswm.h	/^        } mir;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon28	access:public
mod	/usr/include/SDL2/SDL_keyboard.h	/^    Uint16 mod;                 \/**< current key modifiers *\/$/;"	m	struct:SDL_Keysym	access:public
mode	/usr/include/SDL2/SDL_shape.h	/^    WindowShapeMode mode;$/;"	m	struct:SDL_WindowShapeMode	access:public
motion	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseMotionEvent motion;    \/**< Mouse motion event data *\/$/;"	m	union:SDL_Event	access:public
msg	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMmsg *msg;  \/**< driver dependent data, defined in SDL_syswm.h *\/$/;"	m	struct:SDL_SysWMEvent	access:public
msg	/usr/include/SDL2/SDL_syswm.h	/^            UINT msg;                   \/**< The type of message *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
msg	/usr/include/SDL2/SDL_syswm.h	/^    } msg;$/;"	m	struct:SDL_SysWMmsg	typeref:union:SDL_SysWMmsg::__anon15	access:public
name	/usr/include/SDL2/SDL_render.h	/^    const char *name;           \/**< The name of the renderer *\/$/;"	m	struct:SDL_RendererInfo	access:public
name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestCaseReference	access:public
name	/usr/include/SDL2/SDL_test_harness.h	/^    char *name;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
ncolors	/usr/include/SDL2/SDL_pixels.h	/^    int ncolors;$/;"	m	struct:SDL_Palette	access:public
needed	/usr/include/SDL2/SDL_audio.h	/^    int needed;                 \/**< Set to 1 if conversion possible *\/$/;"	m	struct:SDL_AudioCVT	access:public
next	/usr/include/SDL2/SDL_assert.h	/^    const struct SDL_assert_data *next;$/;"	m	struct:SDL_assert_data	typeref:struct:SDL_assert_data::SDL_assert_data	access:public
next	/usr/include/SDL2/SDL_pixels.h	/^    struct SDL_PixelFormat *next;$/;"	m	struct:SDL_PixelFormat	typeref:struct:SDL_PixelFormat::SDL_PixelFormat	access:public
numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint16 numFingers;$/;"	m	struct:SDL_MultiGestureEvent	access:public
numFingers	/usr/include/SDL2/SDL_events.h	/^    Uint32 numFingers;$/;"	m	struct:SDL_DollarGestureEvent	access:public
num_texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 num_texture_formats; \/**< The number of available texture formats *\/$/;"	m	struct:SDL_RendererInfo	access:public
num_windows	/usr/include/SDL2/SDL_test_common.h	/^    int num_windows;$/;"	m	struct:__anon4	access:public
numbuttons	/usr/include/SDL2/SDL_messagebox.h	/^    int numbuttons;$/;"	m	struct:__anon46	access:public
offset	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 offset;      \/**< Mean value of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
offset	/usr/include/SDL2/SDL_rwops.h	/^            long offset;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
padding	/usr/include/SDL2/SDL_audio.h	/^    Uint16 padding;             \/**< Necessary for some compile environments *\/$/;"	m	struct:SDL_AudioSpec	access:public
padding	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding;$/;"	m	struct:SDL_MultiGestureEvent	access:public
padding	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding[56];$/;"	m	union:SDL_Event	access:public
padding	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 padding[2];$/;"	m	struct:SDL_PixelFormat	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_ControllerButtonEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyAxisEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyBallEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyButtonEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_JoyHatEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_MouseButtonEvent	access:public
padding1	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding1;$/;"	m	struct:SDL_WindowEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_ControllerButtonEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyAxisEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyBallEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyButtonEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_JoyHatEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_KeyboardEvent	access:public
padding2	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding2;$/;"	m	struct:SDL_WindowEvent	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyAxisEvent	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_JoyBallEvent	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_KeyboardEvent	access:public
padding3	/usr/include/SDL2/SDL_events.h	/^    Uint8 padding3;$/;"	m	struct:SDL_WindowEvent	access:public
padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
padding4	/usr/include/SDL2/SDL_events.h	/^    Uint16 padding4;$/;"	m	struct:SDL_JoyAxisEvent	access:public
palette	/usr/include/SDL2/SDL_pixels.h	/^    SDL_Palette *palette;$/;"	m	struct:SDL_PixelFormat	access:public
parameters	/usr/include/SDL2/SDL_shape.h	/^    SDL_WindowShapeParams parameters;$/;"	m	struct:SDL_WindowShapeMode	access:public
patch	/usr/include/SDL2/SDL_version.h	/^    Uint8 patch;        \/**< update version *\/$/;"	m	struct:SDL_version	access:public
period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;          \/**< Sample periods. *\/$/;"	m	struct:SDL_HapticCustom	access:public
period	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 period;      \/**< Period of the wave. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
periodic	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticPeriodic periodic;    \/**< Periodic effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
pfnSDL_CurrentBeginThread	/usr/include/SDL2/SDL_thread.h	/^typedef uintptr_t(__cdecl * pfnSDL_CurrentBeginThread) (void *, unsigned,$/;"	t
pfnSDL_CurrentEndThread	/usr/include/SDL2/SDL_thread.h	/^typedef void (__cdecl * pfnSDL_CurrentEndThread) (unsigned code);$/;"	t
phase	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 phase;       \/**< Horizontal shift given by hundredth of a cycle. *\/$/;"	m	struct:SDL_HapticPeriodic	access:public
pitch	/usr/include/SDL2/SDL_surface.h	/^    int pitch;                  \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
pixel	/usr/include/SDL2/SDL_cpuinfo.h	49;"	d
pixel_data	/usr/include/SDL2/SDL_test_images.h	/^  const char *pixel_data;$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
pixels	/usr/include/SDL2/SDL_surface.h	/^    void *pixels;               \/**< Read-write *\/$/;"	m	struct:SDL_Surface	access:public
position	/usr/include/SDL2/SDL_rwops.h	/^            long position;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
pressure	/usr/include/SDL2/SDL_events.h	/^    float pressure;     \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
pressure	/usr/include/SDL2/SDL_touch.h	/^    float pressure;$/;"	m	struct:SDL_Finger	access:public
quit	/usr/include/SDL2/SDL_events.h	/^    SDL_QuitEvent quit;             \/**< Quit request event data *\/$/;"	m	union:SDL_Event	access:public
r	/usr/include/SDL2/SDL_messagebox.h	/^    Uint8 r, g, b;$/;"	m	struct:__anon43	access:public
r	/usr/include/SDL2/SDL_pixels.h	/^    Uint8 r;$/;"	m	struct:SDL_Color	access:public
ramp	/usr/include/SDL2/SDL_haptic.h	/^    SDL_HapticRamp ramp;            \/**< Ramp effect. *\/$/;"	m	union:SDL_HapticEffect	access:public
rate_incr	/usr/include/SDL2/SDL_audio.h	/^    double rate_incr;           \/**< Rate conversion increment *\/$/;"	m	struct:SDL_AudioCVT	access:public
read	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * read) (struct SDL_RWops * context, void *ptr,$/;"	m	struct:SDL_RWops	access:public
readMethod	/usr/include/SDL2/SDL_rwops.h	/^            void *readMethod;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
readableByteChannelRef	/usr/include/SDL2/SDL_rwops.h	/^            void *readableByteChannelRef;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_Palette	access:public
refcount	/usr/include/SDL2/SDL_pixels.h	/^    int refcount;$/;"	m	struct:SDL_PixelFormat	access:public
refcount	/usr/include/SDL2/SDL_surface.h	/^    int refcount;               \/**< Read-mostly *\/$/;"	m	struct:SDL_Surface	access:public
refresh_rate	/usr/include/SDL2/SDL_test_common.h	/^    int refresh_rate;$/;"	m	struct:__anon4	access:public
refresh_rate	/usr/include/SDL2/SDL_video.h	/^    int refresh_rate;           \/**< refresh rate (or zero for unspecified) *\/$/;"	m	struct:__anon5	access:public
render_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 render_flags;$/;"	m	struct:__anon4	access:public
renderdriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *renderdriver;$/;"	m	struct:__anon4	access:public
renderers	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Renderer **renderers;$/;"	m	struct:__anon4	access:public
repeat	/usr/include/SDL2/SDL_events.h	/^    Uint8 repeat;       \/**< Non-zero if this is a key repeat *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
right_coeff	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 right_coeff[3];  \/**< How fast to increase the force towards the positive side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
right_sat	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 right_sat[3];    \/**< Level when joystick is to the positive side. *\/$/;"	m	struct:SDL_HapticCondition	access:public
samples	/usr/include/SDL2/SDL_audio.h	/^    Uint16 samples;             \/**< Audio buffer size in samples (power of 2) *\/$/;"	m	struct:SDL_AudioSpec	access:public
samples	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 samples;         \/**< Amount of samples. *\/$/;"	m	struct:SDL_HapticCustom	access:public
scale	/usr/include/SDL2/SDL_test_common.h	/^    float scale;$/;"	m	struct:__anon4	access:public
scancode	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Scancode scancode;      \/**< SDL physical key code - see ::SDL_Scancode for details *\/$/;"	m	struct:SDL_Keysym	access:public
seek	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * seek) (struct SDL_RWops * context, Sint64 offset,$/;"	m	struct:SDL_RWops	access:public
shell_surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_shell_surface *shell_surface; \/**< Wayland shell_surface (window manager handle) *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon27	typeref:struct:SDL_SysWMinfo::__anon21::__anon27::wl_shell_surface	access:public
silence	/usr/include/SDL2/SDL_audio.h	/^    Uint8 silence;              \/**< Audio buffer silence value (calculated) *\/$/;"	m	struct:SDL_AudioSpec	access:public
size	/usr/include/SDL2/SDL_audio.h	/^    Uint32 size;                \/**< Audio buffer size in bytes (calculated) *\/$/;"	m	struct:SDL_AudioSpec	access:public
size	/usr/include/SDL2/SDL_rwops.h	/^            long size;$/;"	m	struct:SDL_RWops::__anon30::__anon31	access:public
size	/usr/include/SDL2/SDL_rwops.h	/^    Sint64 (SDLCALL * size) (struct SDL_RWops * context);$/;"	m	struct:SDL_RWops	access:public
skip_renderer	/usr/include/SDL2/SDL_test_common.h	/^    SDL_bool skip_renderer;$/;"	m	struct:__anon4	access:public
small_magnitude	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 small_magnitude; \/**< Control of the small controller motor. *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
src_format	/usr/include/SDL2/SDL_audio.h	/^    SDL_AudioFormat src_format; \/**< Source audio format *\/$/;"	m	struct:SDL_AudioCVT	access:public
start	/usr/include/SDL2/SDL_events.h	/^    Sint32 start;                               \/**< The start cursor of selected editing text *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
start	/usr/include/SDL2/SDL_haptic.h	/^    Sint16 start;           \/**< Beginning strength level. *\/$/;"	m	struct:SDL_HapticRamp	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint32 state;       \/**< The current button state *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
state	/usr/include/SDL2/SDL_events.h	/^    Uint8 state;        \/**< ::SDL_PRESSED or ::SDL_RELEASED *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
stdio	/usr/include/SDL2/SDL_rwops.h	/^        } stdio;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon32	access:public
stop	/usr/include/SDL2/SDL_rwops.h	/^            Uint8 *stop;$/;"	m	struct:SDL_RWops::__anon30::__anon33	access:public
subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMinfo	access:public
subsystem	/usr/include/SDL2/SDL_syswm.h	/^    SDL_SYSWM_TYPE subsystem;$/;"	m	struct:SDL_SysWMmsg	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBSurface *surface;  \/**< The directfb client surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon24	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            MirSurface *surface;  \/**< Mir surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon28	access:public
surface	/usr/include/SDL2/SDL_syswm.h	/^            struct wl_surface *surface;            \/**< Wayland surface *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon27	typeref:struct:SDL_SysWMinfo::__anon21::__anon27::wl_surface	access:public
sym	/usr/include/SDL2/SDL_keyboard.h	/^    SDL_Keycode sym;            \/**< SDL virtual key code - see ::SDL_Keycode for details *\/$/;"	m	struct:SDL_Keysym	access:public
syswm	/usr/include/SDL2/SDL_events.h	/^    SDL_SysWMEvent syswm;           \/**< System dependent window event data *\/$/;"	m	union:SDL_Event	access:public
targets	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Texture **targets;$/;"	m	struct:__anon4	access:public
testCase	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseFp testCase;$/;"	m	struct:SDLTest_TestCaseReference	access:public
testCases	/usr/include/SDL2/SDL_test_harness.h	/^    const SDLTest_TestCaseReference **testCases;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
testSetUp	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseSetUpFp testSetUp;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
testTearDown	/usr/include/SDL2/SDL_test_harness.h	/^    SDLTest_TestCaseTearDownFp testTearDown;$/;"	m	struct:SDLTest_TestSuiteReference	access:public
text	/usr/include/SDL2/SDL_events.h	/^    SDL_TextInputEvent text;        \/**< Text input event data *\/$/;"	m	union:SDL_Event	access:public
text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTEDITINGEVENT_TEXT_SIZE];  \/**< The editing text *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
text	/usr/include/SDL2/SDL_events.h	/^    char text[SDL_TEXTINPUTEVENT_TEXT_SIZE];  \/**< The input text *\/$/;"	m	struct:SDL_TextInputEvent	access:public
text	/usr/include/SDL2/SDL_messagebox.h	/^    const char * text;  \/**< The UTF-8 button text *\/$/;"	m	struct:__anon42	access:public
texture_formats	/usr/include/SDL2/SDL_render.h	/^    Uint32 texture_formats[16]; \/**< The available texture formats *\/$/;"	m	struct:SDL_RendererInfo	access:public
tfinger	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchFingerEvent tfinger;   \/**< Touch finger event data *\/$/;"	m	union:SDL_Event	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_CommonEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_ControllerAxisEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_ControllerButtonEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_ControllerDeviceEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_DollarGestureEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_DropEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyAxisEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyBallEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyButtonEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyDeviceEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_JoyHatEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_KeyboardEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MouseButtonEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MouseMotionEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MouseWheelEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_MultiGestureEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_OSEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_QuitEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_SysWMEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_TextEditingEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_TextInputEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_TouchFingerEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_UserEvent	access:public
timestamp	/usr/include/SDL2/SDL_events.h	/^    Uint32 timestamp;$/;"	m	struct:SDL_WindowEvent	access:public
title	/usr/include/SDL2/SDL_messagebox.h	/^    const char *title;                  \/**< UTF-8 title *\/$/;"	m	struct:__anon46	access:public
touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device id *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
touchId	/usr/include/SDL2/SDL_events.h	/^    SDL_TouchID touchId; \/**< The touch device index *\/$/;"	m	struct:SDL_MultiGestureEvent	access:public
trigger_count	/usr/include/SDL2/SDL_assert.h	/^    unsigned int trigger_count;$/;"	m	struct:SDL_assert_data	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                                \/**< ::SDL_TEXTEDITING *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                              \/**< ::SDL_TEXTINPUT *\/$/;"	m	struct:SDL_TextInputEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;                    \/**< Event type, shared with all events *\/$/;"	m	union:SDL_Event	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERAXISMOTION *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERBUTTONDOWN or ::SDL_CONTROLLERBUTTONUP *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_CONTROLLERDEVICEADDED, ::SDL_CONTROLLERDEVICEREMOVED, or ::SDL_CONTROLLERDEVICEREMAPPED *\/$/;"	m	struct:SDL_ControllerDeviceEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DOLLARGESTURE *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_DROPFILE *\/$/;"	m	struct:SDL_DropEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_FINGERMOTION or ::SDL_FINGERDOWN or ::SDL_FINGERUP *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYAXISMOTION *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBALLMOTION *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYBUTTONDOWN or ::SDL_JOYBUTTONUP *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYDEVICEADDED or ::SDL_JOYDEVICEREMOVED *\/$/;"	m	struct:SDL_JoyDeviceEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_JOYHATMOTION *\/$/;"	m	struct:SDL_JoyHatEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_KEYDOWN or ::SDL_KEYUP *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEBUTTONDOWN or ::SDL_MOUSEBUTTONUP *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEMOTION *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MOUSEWHEEL *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_MULTIGESTURE *\/$/;"	m	struct:SDL_MultiGestureEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_OSEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_QUIT *\/$/;"	m	struct:SDL_QuitEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_SYSWMEVENT *\/$/;"	m	struct:SDL_SysWMEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_USEREVENT through ::SDL_LASTEVENT-1 *\/$/;"	m	struct:SDL_UserEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;        \/**< ::SDL_WINDOWEVENT *\/$/;"	m	struct:SDL_WindowEvent	access:public
type	/usr/include/SDL2/SDL_events.h	/^    Uint32 type;$/;"	m	struct:SDL_CommonEvent	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;                    \/**< Effect type. *\/$/;"	m	union:SDL_HapticEffect	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CONSTANT *\/$/;"	m	struct:SDL_HapticConstant	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_CUSTOM *\/$/;"	m	struct:SDL_HapticCustom	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_LEFTRIGHT *\/$/;"	m	struct:SDL_HapticLeftRight	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_RAMP *\/$/;"	m	struct:SDL_HapticRamp	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;            \/**< ::SDL_HAPTIC_SPRING, ::SDL_HAPTIC_DAMPER,$/;"	m	struct:SDL_HapticCondition	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint16 type;        \/**< ::SDL_HAPTIC_SINE, ::SDL_HAPTIC_LEFTRIGHT,$/;"	m	struct:SDL_HapticPeriodic	access:public
type	/usr/include/SDL2/SDL_haptic.h	/^    Uint8 type;         \/**< The type of encoding. *\/$/;"	m	struct:SDL_HapticDirection	access:public
type	/usr/include/SDL2/SDL_rwops.h	/^    Uint32 type;$/;"	m	struct:SDL_RWops	access:public
uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon26	access:public
uikit	/usr/include/SDL2/SDL_syswm.h	/^        } uikit;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon20	access:public
uint64_t	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	/usr/include/SDL2/SDL_opengl.h	/^typedef unsigned long long int uint64_t;$/;"	t
unknown	/usr/include/SDL2/SDL_rwops.h	/^        } unknown;$/;"	m	union:SDL_RWops::__anon30	typeref:struct:SDL_RWops::__anon30::__anon34	access:public
unused	/usr/include/SDL2/SDL_keyboard.h	/^    Uint32 unused;$/;"	m	struct:SDL_Keysym	access:public
user	/usr/include/SDL2/SDL_events.h	/^    SDL_UserEvent user;             \/**< Custom event data *\/$/;"	m	union:SDL_Event	access:public
userdata	/usr/include/SDL2/SDL_audio.h	/^    void *userdata;$/;"	m	struct:SDL_AudioSpec	access:public
userdata	/usr/include/SDL2/SDL_surface.h	/^    void *userdata;             \/**< Read-write *\/$/;"	m	struct:SDL_Surface	access:public
value	/usr/include/SDL2/SDL_atomic.h	/^typedef struct { int value; } SDL_atomic_t;$/;"	m	struct:__anon37	access:public
value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
value	/usr/include/SDL2/SDL_events.h	/^    Sint16 value;       \/**< The axis value (range: -32768 to 32767) *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
value	/usr/include/SDL2/SDL_events.h	/^    Uint8 value;        \/**< The hat position value.$/;"	m	struct:SDL_JoyHatEvent	access:public
value	/usr/include/SDL2/SDL_gamecontroller.h	/^    } value;$/;"	m	struct:SDL_GameControllerButtonBind	typeref:union:SDL_GameControllerButtonBind::__anon54	access:public
verbose	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 verbose;$/;"	m	struct:__anon4	access:public
version	/usr/include/SDL2/SDL_pixels.h	/^    Uint32 version;$/;"	m	struct:SDL_Palette	access:public
version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMinfo	access:public
version	/usr/include/SDL2/SDL_syswm.h	/^    SDL_version version;$/;"	m	struct:SDL_SysWMmsg	access:public
videodriver	/usr/include/SDL2/SDL_test_common.h	/^    const char *videodriver;$/;"	m	struct:__anon4	access:public
w	/usr/include/SDL2/SDL_rect.h	/^    int w, h;$/;"	m	struct:SDL_Rect	access:public
w	/usr/include/SDL2/SDL_surface.h	/^    int w, h;                   \/**< Read-only *\/$/;"	m	struct:SDL_Surface	access:public
w	/usr/include/SDL2/SDL_video.h	/^    int w;                      \/**< width *\/$/;"	m	struct:__anon5	access:public
wParam	/usr/include/SDL2/SDL_syswm.h	/^            WPARAM wParam;              \/**< WORD message parameter *\/$/;"	m	struct:SDL_SysWMmsg::__anon15::__anon16	access:public
wheel	/usr/include/SDL2/SDL_events.h	/^    SDL_MouseWheelEvent wheel;      \/**< Mouse wheel event data *\/$/;"	m	union:SDL_Event	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerAxisEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_ControllerButtonEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyAxisEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyButtonEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    SDL_JoystickID which; \/**< The joystick instance id *\/$/;"	m	struct:SDL_JoyHatEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the REMOVED event *\/$/;"	m	struct:SDL_JoyDeviceEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Sint32 which;       \/**< The joystick device index for the ADDED event, instance id for the REMOVED or REMAPPED event *\/$/;"	m	struct:SDL_ControllerDeviceEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
which	/usr/include/SDL2/SDL_events.h	/^    Uint32 which;       \/**< The mouse instance id, or SDL_TOUCH_MOUSEID *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
width	/usr/include/SDL2/SDL_test_images.h	/^  int width;$/;"	m	struct:SDLTest_SurfaceImage_s	access:public
win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon22	access:public
win	/usr/include/SDL2/SDL_syswm.h	/^        } win;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon16	access:public
window	/usr/include/SDL2/SDL_events.h	/^    SDL_WindowEvent window;         \/**< Window event data *\/$/;"	m	union:SDL_Event	access:public
window	/usr/include/SDL2/SDL_messagebox.h	/^    SDL_Window *window;                 \/**< Parent window, can be NULL *\/$/;"	m	struct:__anon46	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            HWND window;                \/**< The window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon22	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            IDirectFBWindow *window;    \/**< The directfb window handle *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon24	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            NSWindow *window;           \/* The Cocoa window *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon25	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            UIWindow *window;           \/* The UIKit window *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon26	access:public
window	/usr/include/SDL2/SDL_syswm.h	/^            Window window;              \/**< The X11 window *\/$/;"	m	struct:SDL_SysWMinfo::__anon21::__anon23	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                            \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextEditingEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;                          \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_TextInputEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window *\/$/;"	m	struct:SDL_WindowEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The associated window if any *\/$/;"	m	struct:SDL_UserEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with keyboard focus, if any *\/$/;"	m	struct:SDL_KeyboardEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
windowID	/usr/include/SDL2/SDL_events.h	/^    Uint32 windowID;    \/**< The window with mouse focus, if any *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
window_flags	/usr/include/SDL2/SDL_test_common.h	/^    Uint32 window_flags;$/;"	m	struct:__anon4	access:public
window_h	/usr/include/SDL2/SDL_test_common.h	/^    int window_h;$/;"	m	struct:__anon4	access:public
window_icon	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_icon;$/;"	m	struct:__anon4	access:public
window_maxH	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxH;$/;"	m	struct:__anon4	access:public
window_maxW	/usr/include/SDL2/SDL_test_common.h	/^    int window_maxW;$/;"	m	struct:__anon4	access:public
window_minH	/usr/include/SDL2/SDL_test_common.h	/^    int window_minH;$/;"	m	struct:__anon4	access:public
window_minW	/usr/include/SDL2/SDL_test_common.h	/^    int window_minW;$/;"	m	struct:__anon4	access:public
window_title	/usr/include/SDL2/SDL_test_common.h	/^    const char *window_title;$/;"	m	struct:__anon4	access:public
window_w	/usr/include/SDL2/SDL_test_common.h	/^    int window_w;$/;"	m	struct:__anon4	access:public
window_x	/usr/include/SDL2/SDL_test_common.h	/^    int window_x;$/;"	m	struct:__anon4	access:public
window_y	/usr/include/SDL2/SDL_test_common.h	/^    int window_y;$/;"	m	struct:__anon4	access:public
windows	/usr/include/SDL2/SDL_test_common.h	/^    SDL_Window **windows;$/;"	m	struct:__anon4	access:public
wl	/usr/include/SDL2/SDL_syswm.h	/^        } wl;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon27	access:public
write	/usr/include/SDL2/SDL_rwops.h	/^    size_t (SDLCALL * write) (struct SDL_RWops * context, const void *ptr,$/;"	m	struct:SDL_RWops	access:public
x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< The amount scrolled horizontally, positive to the right and negative to the left *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
x	/usr/include/SDL2/SDL_events.h	/^    Sint32 x;           \/**< X coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
x	/usr/include/SDL2/SDL_events.h	/^    float x;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
x	/usr/include/SDL2/SDL_events.h	/^    float x;$/;"	m	struct:SDL_MultiGestureEvent	access:public
x	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	access:public
x	/usr/include/SDL2/SDL_rect.h	/^    int x;$/;"	m	struct:SDL_Point	access:public
x	/usr/include/SDL2/SDL_test_random.h	/^    unsigned int x;$/;"	m	struct:__anon58	access:public
x	/usr/include/SDL2/SDL_touch.h	/^    float x;$/;"	m	struct:SDL_Finger	access:public
x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMinfo::__anon21	typeref:struct:SDL_SysWMinfo::__anon21::__anon23	access:public
x11	/usr/include/SDL2/SDL_syswm.h	/^        } x11;$/;"	m	union:SDL_SysWMmsg::__anon15	typeref:struct:SDL_SysWMmsg::__anon15::__anon17	access:public
xrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
xrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 xrel;        \/**< The relative motion in the X direction *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< The amount scrolled vertically, positive away from the user and negative toward the user *\/$/;"	m	struct:SDL_MouseWheelEvent	access:public
y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseButtonEvent	access:public
y	/usr/include/SDL2/SDL_events.h	/^    Sint32 y;           \/**< Y coordinate, relative to window *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized center of gesture *\/$/;"	m	struct:SDL_DollarGestureEvent	access:public
y	/usr/include/SDL2/SDL_events.h	/^    float y;            \/**< Normalized in the range 0...1 *\/$/;"	m	struct:SDL_TouchFingerEvent	access:public
y	/usr/include/SDL2/SDL_events.h	/^    float y;$/;"	m	struct:SDL_MultiGestureEvent	access:public
y	/usr/include/SDL2/SDL_rect.h	/^    int x, y;$/;"	m	struct:SDL_Rect	access:public
y	/usr/include/SDL2/SDL_rect.h	/^    int y;$/;"	m	struct:SDL_Point	access:public
y	/usr/include/SDL2/SDL_touch.h	/^    float y;$/;"	m	struct:SDL_Finger	access:public
yrel	/usr/include/SDL2/SDL_events.h	/^    Sint16 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_JoyBallEvent	access:public
yrel	/usr/include/SDL2/SDL_events.h	/^    Sint32 yrel;        \/**< The relative motion in the Y direction *\/$/;"	m	struct:SDL_MouseMotionEvent	access:public
